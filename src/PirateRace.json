{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "teamName",
          "type": "string"
        }
      ],
      "name": "AttackUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "shooter",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "target",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "hit",
          "type": "bool"
        }
      ],
      "name": "CannonFired",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "teamName",
          "type": "string"
        }
      ],
      "name": "DefenseUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "team0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "team1",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "team2",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "team3",
          "type": "uint256"
        }
      ],
      "name": "DistanceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "teamName",
          "type": "string"
        }
      ],
      "name": "EngineUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "teamName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "FirstMate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "teamName",
          "type": "string"
        }
      ],
      "name": "InJail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "teamName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "name": "MysteryBox",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "teamName",
          "type": "string"
        }
      ],
      "name": "OutofJail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "teamName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "money",
          "type": "uint256"
        }
      ],
      "name": "TeamJoin",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "Qi",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyMysteryBox",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "captain",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_teamId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_money",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_speed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_distance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_defense",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_attack",
          "type": "uint256"
        }
      ],
      "name": "changeSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "checkForgedPapers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eQi",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finishLine",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "targetTeam",
          "type": "uint256"
        }
      ],
      "name": "fireCannon",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "firstMate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "jail",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        }
      ],
      "name": "join",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "teamName",
          "type": "string"
        }
      ],
      "name": "nameTeam",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "teamId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "pickCaptain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "pickFirstMate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "putInJail",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startRace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "takeOutOfJail",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "teams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalMoney",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "teamName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "speed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "distance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "defense",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "attack",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numPirates",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateDistance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "upgradeAttack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "upgradeDefense",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "upgradeEngine",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userScore",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "money",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actions",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userToTeam",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winner",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/core/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC20/IERC20.sol",
    "2": "contracts/race.sol"
  },
  "ast": {
    "absolutePath": "contracts/race.sol",
    "exportedSymbols": {
      "IERC20": [
        1443
      ],
      "PirateRace": [
        1365
      ],
      "SafeMath": [
        1755
      ]
    },
    "id": 1366,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/core/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1366,
        "sourceUnit": 1756,
        "src": "25:57:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/core/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1366,
        "sourceUnit": 1444,
        "src": "83:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "global": false,
        "id": 6,
        "libraryName": {
          "id": 4,
          "name": "SafeMath",
          "nameLocations": [
            "146:8:2"
          ],
          "nodeType": "IdentifierPath",
          "referencedDeclaration": 1755,
          "src": "146:8:2"
        },
        "nodeType": "UsingForDirective",
        "src": "140:27:2",
        "typeName": {
          "id": 5,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "159:7:2",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        }
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PirateRace",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1365,
        "linearizedBaseContracts": [
          1365
        ],
        "name": "PirateRace",
        "nameLocation": "178:10:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PirateRace.Team",
            "id": 21,
            "members": [
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "totalMoney",
                "nameLocation": "225:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "217:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "217:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "teamName",
                "nameLocation": "252:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "245:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 9,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "245:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "speed",
                "nameLocation": "278:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "270:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "270:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "distance",
                "nameLocation": "301:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "293:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "293:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "defense",
                "nameLocation": "327:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "319:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "319:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "attack",
                "nameLocation": "352:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "344:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "344:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "numPirates",
                "nameLocation": "376:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "368:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 19,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "368:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Team",
            "nameLocation": "202:4:2",
            "nodeType": "StructDefinition",
            "scope": 1365,
            "src": "195:198:2",
            "visibility": "public"
          },
          {
            "canonicalName": "PirateRace.Contribution",
            "id": 26,
            "members": [
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "money",
                "nameLocation": "437:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "429:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "429:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "actions",
                "nameLocation": "460:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "452:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "452:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Contribution",
            "nameLocation": "406:12:2",
            "nodeType": "StructDefinition",
            "scope": 1365,
            "src": "399:75:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 28,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "495:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1365,
            "src": "480:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 27,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "480:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dfbf53ae",
            "id": 31,
            "mutability": "mutable",
            "name": "winner",
            "nameLocation": "520:6:2",
            "nodeType": "VariableDeclaration",
            "scope": 1365,
            "src": "506:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 29,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "506:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "528:2:2",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cc3590bb",
            "id": 34,
            "mutability": "mutable",
            "name": "finishLine",
            "nameLocation": "551:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 1365,
            "src": "536:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "536:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "316536",
              "id": 33,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "564:3:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "value": "1e6"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37,
            "mutability": "mutable",
            "name": "gameStarted",
            "nameLocation": "578:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 1365,
            "src": "573:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 35,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "573:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "592:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "84d0643e",
            "id": 43,
            "mutability": "mutable",
            "name": "Qi",
            "nameLocation": "617:2:2",
            "nodeType": "VariableDeclaration",
            "scope": 1365,
            "src": "603:69:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1443",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 39,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 38,
                "name": "IERC20",
                "nameLocations": [
                  "603:6:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1443,
                "src": "603:6:2"
              },
              "referencedDeclaration": 1443,
              "src": "603:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1443",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307835383041383443373338313145313833394637356438366437356438386343613063323431664634",
                  "id": 41,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "629:42:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x580A84C73811E1839F75d86d75d88cCa0c241fF4"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 40,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1443,
                "src": "622:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1443_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 42,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "622:50:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1443",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f8200866",
            "id": 49,
            "mutability": "mutable",
            "name": "eQi",
            "nameLocation": "692:3:2",
            "nodeType": "VariableDeclaration",
            "scope": 1365,
            "src": "678:70:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1443",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 45,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44,
                "name": "IERC20",
                "nameLocations": [
                  "678:6:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1443,
                "src": "678:6:2"
              },
              "referencedDeclaration": 1443,
              "src": "678:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1443",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307838383044654341446532326144396335384138413432303245463134336334463330353130304233",
                  "id": 47,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "705:42:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x880DeCADe22aD9c58A8A4202EF143c4F305100B3"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 46,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1443,
                "src": "698:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1443_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 48,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "698:50:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1443",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 51,
            "mutability": "mutable",
            "name": "lastUpdated",
            "nameLocation": "770:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 1365,
            "src": "754:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "754:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "3ed2b77a",
            "id": 55,
            "mutability": "mutable",
            "name": "teams",
            "nameLocation": "801:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1365,
            "src": "787:19:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
              "typeString": "struct PirateRace.Team[]"
            },
            "typeName": {
              "baseType": {
                "id": 53,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 52,
                  "name": "Team",
                  "nameLocations": [
                    "787:4:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21,
                  "src": "787:4:2"
                },
                "referencedDeclaration": 21,
                "src": "787:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Team_$21_storage_ptr",
                  "typeString": "struct PirateRace.Team"
                }
              },
              "id": 54,
              "nodeType": "ArrayTypeName",
              "src": "787:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage_ptr",
                "typeString": "struct PirateRace.Team[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "58c5a1e4",
            "id": 59,
            "mutability": "mutable",
            "name": "userToTeam",
            "nameLocation": "849:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 1365,
            "src": "813:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 58,
              "keyType": {
                "id": 56,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "822:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "813:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 57,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "833:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9bcbea52",
            "id": 63,
            "mutability": "mutable",
            "name": "jail",
            "nameLocation": "898:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 1365,
            "src": "865:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 62,
              "keyType": {
                "id": 60,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "874:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "865:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 61,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "885:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "38ee821b",
            "id": 68,
            "mutability": "mutable",
            "name": "userScore",
            "nameLocation": "949:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1365,
            "src": "908:50:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Contribution_$26_storage_$",
              "typeString": "mapping(address => struct PirateRace.Contribution)"
            },
            "typeName": {
              "id": 67,
              "keyType": {
                "id": 64,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "917:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "908:33:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Contribution_$26_storage_$",
                "typeString": "mapping(address => struct PirateRace.Contribution)"
              },
              "valueType": {
                "id": 66,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 65,
                  "name": "Contribution",
                  "nameLocations": [
                    "928:12:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26,
                  "src": "928:12:2"
                },
                "referencedDeclaration": 26,
                "src": "928:12:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Contribution_$26_storage_ptr",
                  "typeString": "struct PirateRace.Contribution"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1b586a3b",
            "id": 72,
            "mutability": "mutable",
            "name": "captain",
            "nameLocation": "1000:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 1365,
            "src": "964:43:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 71,
              "keyType": {
                "id": 69,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "973:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "964:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 70,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "984:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "48e11e2d",
            "id": 76,
            "mutability": "mutable",
            "name": "firstMate",
            "nameLocation": "1049:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1365,
            "src": "1013:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 75,
              "keyType": {
                "id": 73,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1022:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1013:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 74,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1033:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "1086:556:2",
              "statements": [
                {
                  "expression": {
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "1096:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 80,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1104:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1108:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1104:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1096:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1096:18:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1153:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "5465616d2042656e",
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1165:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a69f6a2961c568d3962e34368bf5f7479e1e07a010fd7deaedff49ed93afb167",
                              "typeString": "literal_string \"Team Ben\""
                            },
                            "value": "Team Ben"
                          },
                          {
                            "hexValue": "30",
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1183:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 91,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1195:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 92,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1206:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 93,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1216:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1230:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_a69f6a2961c568d3962e34368bf5f7479e1e07a010fd7deaedff49ed93afb167",
                              "typeString": "literal_string \"Team Ben\""
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 87,
                          "name": "Team",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "1135:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Team_$21_storage_ptr_$",
                            "typeString": "type(struct PirateRace.Team storage pointer)"
                          }
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "1141:10:2",
                          "1156:8:2",
                          "1177:5:2",
                          "1186:8:2",
                          "1198:7:2",
                          "1209:6:2",
                          "1219:10:2"
                        ],
                        "names": [
                          "totalMoney",
                          "teamName",
                          "speed",
                          "distance",
                          "defense",
                          "attack",
                          "numPirates"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "1135:98:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$21_memory_ptr",
                          "typeString": "struct PirateRace.Team memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Team_$21_memory_ptr",
                          "typeString": "struct PirateRace.Team memory"
                        }
                      ],
                      "expression": {
                        "id": 84,
                        "name": "teams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1124:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                          "typeString": "struct PirateRace.Team storage ref[] storage ref"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1130:4:2",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1124:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Team_$21_storage_$dyn_storage_ptr_$_t_struct$_Team_$21_storage_$returns$__$bound_to$_t_array$_t_struct$_Team_$21_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct PirateRace.Team storage ref[] storage pointer,struct PirateRace.Team storage ref)"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1124:110:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1124:110:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1273:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "5465616d204b696c61",
                            "id": 103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1285:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_07ca7a5a5050111c052cc254133fbdf2c36d64875237c1119580022e363c5b4e",
                              "typeString": "literal_string \"Team Kila\""
                            },
                            "value": "Team Kila"
                          },
                          {
                            "hexValue": "30",
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1304:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1316:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1327:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1337:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1351:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_07ca7a5a5050111c052cc254133fbdf2c36d64875237c1119580022e363c5b4e",
                              "typeString": "literal_string \"Team Kila\""
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 101,
                          "name": "Team",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "1255:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Team_$21_storage_ptr_$",
                            "typeString": "type(struct PirateRace.Team storage pointer)"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "1261:10:2",
                          "1276:8:2",
                          "1298:5:2",
                          "1307:8:2",
                          "1319:7:2",
                          "1330:6:2",
                          "1340:10:2"
                        ],
                        "names": [
                          "totalMoney",
                          "teamName",
                          "speed",
                          "distance",
                          "defense",
                          "attack",
                          "numPirates"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "1255:99:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$21_memory_ptr",
                          "typeString": "struct PirateRace.Team memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Team_$21_memory_ptr",
                          "typeString": "struct PirateRace.Team memory"
                        }
                      ],
                      "expression": {
                        "id": 98,
                        "name": "teams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1244:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                          "typeString": "struct PirateRace.Team storage ref[] storage ref"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1250:4:2",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1244:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Team_$21_storage_$dyn_storage_ptr_$_t_struct$_Team_$21_storage_$returns$__$bound_to$_t_array$_t_struct$_Team_$21_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct PirateRace.Team storage ref[] storage pointer,struct PirateRace.Team storage ref)"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1244:111:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1244:111:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1394:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "5465616d204e6163686f",
                            "id": 117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1406:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d946eb91de8410676d44a45136a130ccaf5ffd594ebf7d486ca75b44954d8e4a",
                              "typeString": "literal_string \"Team Nacho\""
                            },
                            "value": "Team Nacho"
                          },
                          {
                            "hexValue": "30",
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1426:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1438:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1449:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1459:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1473:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_d946eb91de8410676d44a45136a130ccaf5ffd594ebf7d486ca75b44954d8e4a",
                              "typeString": "literal_string \"Team Nacho\""
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 115,
                          "name": "Team",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "1376:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Team_$21_storage_ptr_$",
                            "typeString": "type(struct PirateRace.Team storage pointer)"
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "1382:10:2",
                          "1397:8:2",
                          "1420:5:2",
                          "1429:8:2",
                          "1441:7:2",
                          "1452:6:2",
                          "1462:10:2"
                        ],
                        "names": [
                          "totalMoney",
                          "teamName",
                          "speed",
                          "distance",
                          "defense",
                          "attack",
                          "numPirates"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "1376:100:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$21_memory_ptr",
                          "typeString": "struct PirateRace.Team memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Team_$21_memory_ptr",
                          "typeString": "struct PirateRace.Team memory"
                        }
                      ],
                      "expression": {
                        "id": 112,
                        "name": "teams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1365:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                          "typeString": "struct PirateRace.Team storage ref[] storage ref"
                        }
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1371:4:2",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1365:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Team_$21_storage_$dyn_storage_ptr_$_t_struct$_Team_$21_storage_$returns$__$bound_to$_t_array$_t_struct$_Team_$21_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct PirateRace.Team storage ref[] storage pointer,struct PirateRace.Team storage ref)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1365:112:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "1365:112:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1516:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "5465616d203f3f",
                            "id": 131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1528:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f493607df9201abed25f1e3b96b29c901bf35ce71dd297ec82f27d2d18c549c9",
                              "typeString": "literal_string \"Team ??\""
                            },
                            "value": "Team ??"
                          },
                          {
                            "hexValue": "30",
                            "id": 132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1545:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1557:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1568:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1578:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1592:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_f493607df9201abed25f1e3b96b29c901bf35ce71dd297ec82f27d2d18c549c9",
                              "typeString": "literal_string \"Team ??\""
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 129,
                          "name": "Team",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "1498:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Team_$21_storage_ptr_$",
                            "typeString": "type(struct PirateRace.Team storage pointer)"
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "1504:10:2",
                          "1519:8:2",
                          "1539:5:2",
                          "1548:8:2",
                          "1560:7:2",
                          "1571:6:2",
                          "1581:10:2"
                        ],
                        "names": [
                          "totalMoney",
                          "teamName",
                          "speed",
                          "distance",
                          "defense",
                          "attack",
                          "numPirates"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "1498:97:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$21_memory_ptr",
                          "typeString": "struct PirateRace.Team memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Team_$21_memory_ptr",
                          "typeString": "struct PirateRace.Team memory"
                        }
                      ],
                      "expression": {
                        "id": 126,
                        "name": "teams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1487:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                          "typeString": "struct PirateRace.Team storage ref[] storage ref"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1493:4:2",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1487:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Team_$21_storage_$dyn_storage_ptr_$_t_struct$_Team_$21_storage_$returns$__$bound_to$_t_array$_t_struct$_Team_$21_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct PirateRace.Team storage ref[] storage pointer,struct PirateRace.Team storage ref)"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1487:109:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1487:109:2"
                },
                {
                  "expression": {
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 140,
                      "name": "lastUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "1606:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 141,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1620:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1626:9:2",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1620:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1606:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1606:29:2"
                }
              ]
            },
            "id": 146,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1076:2:2"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1086:0:2"
            },
            "scope": 1365,
            "src": "1065:577:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "1699:301:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 150,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1717:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1721:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1717:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 152,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "1731:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1717:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e2073746172742074686520726163652e",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1738:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc213b3a0941c51e122cb28cd806078980fe61671e6030e93c1c5e1624841b2a",
                          "typeString": "literal_string \"Only the owner can start the race.\""
                        },
                        "value": "Only the owner can start the race."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc213b3a0941c51e122cb28cd806078980fe61671e6030e93c1c5e1624841b2a",
                          "typeString": "literal_string \"Only the owner can start the race.\""
                        }
                      ],
                      "id": 149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1709:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1709:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1709:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1793:12:2",
                        "subExpression": {
                          "id": 158,
                          "name": "gameStarted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "1794:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47616d6520616c726561647920737461727465642e",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1807:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ae80a6ad05b9dcc93ee5479508d23c320eaabecbdfa6aa6923d28f5f4140af4",
                          "typeString": "literal_string \"Game already started.\""
                        },
                        "value": "Game already started."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ae80a6ad05b9dcc93ee5479508d23c320eaabecbdfa6aa6923d28f5f4140af4",
                          "typeString": "literal_string \"Game already started.\""
                        }
                      ],
                      "id": 157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1785:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1785:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "1785:46:2"
                },
                {
                  "expression": {
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 163,
                      "name": "gameStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "1841:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1855:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1841:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "1841:18:2"
                },
                {
                  "body": {
                    "id": 185,
                    "nodeType": "Block",
                    "src": "1912:43:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 178,
                                "name": "teams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55,
                                "src": "1926:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                  "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                }
                              },
                              "id": 180,
                              "indexExpression": {
                                "id": 179,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 168,
                                "src": "1932:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1926:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Team_$21_storage",
                                "typeString": "struct PirateRace.Team storage ref"
                              }
                            },
                            "id": 181,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "1935:5:2",
                            "memberName": "speed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "1926:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1943:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1926:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 184,
                        "nodeType": "ExpressionStatement",
                        "src": "1926:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 171,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "1889:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 172,
                        "name": "teams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1893:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                          "typeString": "struct PirateRace.Team storage ref[] storage ref"
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1899:6:2",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1893:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1889:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 186,
                  "initializationExpression": {
                    "assignments": [
                      168
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 168,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1882:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "1874:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 167,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1874:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 170,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1886:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1874:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1907:3:2",
                      "subExpression": {
                        "id": 175,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "1907:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 177,
                    "nodeType": "ExpressionStatement",
                    "src": "1907:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "1869:86:2"
                },
                {
                  "expression": {
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 187,
                      "name": "lastUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "1964:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 188,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1978:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1984:9:2",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1978:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1964:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "1964:29:2"
                }
              ]
            },
            "functionSelector": "6ad7ed47",
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startRace",
            "nameLocation": "1680:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1689:2:2"
            },
            "returnParameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1699:0:2"
            },
            "scope": 1365,
            "src": "1671:329:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 215,
              "nodeType": "Block",
              "src": "2071:126:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 201,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2089:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2093:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2089:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 203,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "2103:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2089:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e206e616d6520746865207465616d732e",
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2110:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1843e5d3f08f8f5ab0d234d00e051b1186284660f6f98d4d2e21cf8fe85deec1",
                          "typeString": "literal_string \"Only the owner can name the teams.\""
                        },
                        "value": "Only the owner can name the teams."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1843e5d3f08f8f5ab0d234d00e051b1186284660f6f98d4d2e21cf8fe85deec1",
                          "typeString": "literal_string \"Only the owner can name the teams.\""
                        }
                      ],
                      "id": 200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2081:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2081:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2081:66:2"
                },
                {
                  "expression": {
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 208,
                          "name": "teams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "2157:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                            "typeString": "struct PirateRace.Team storage ref[] storage ref"
                          }
                        },
                        "id": 210,
                        "indexExpression": {
                          "id": 209,
                          "name": "teamId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "2163:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2157:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$21_storage",
                          "typeString": "struct PirateRace.Team storage ref"
                        }
                      },
                      "id": 211,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2171:8:2",
                      "memberName": "teamName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "2157:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 212,
                      "name": "teamName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "2182:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2157:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "2157:33:2"
                }
              ]
            },
            "functionSelector": "d60e831c",
            "id": 216,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nameTeam",
            "nameLocation": "2015:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "teamId",
                  "nameLocation": "2032:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 216,
                  "src": "2024:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2024:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "teamName",
                  "nameLocation": "2054:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 216,
                  "src": "2040:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2023:40:2"
            },
            "returnParameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2071:0:2"
            },
            "scope": 1365,
            "src": "2006:191:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 294,
              "nodeType": "Block",
              "src": "2337:372:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 232,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2355:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2359:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2355:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 234,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "2369:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2355:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722e",
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2376:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31d2e2715bf41fcfeddb18c9e0e48291c54a03a12c0f8bc46e95804b964520c3",
                          "typeString": "literal_string \"Only owner.\""
                        },
                        "value": "Only owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31d2e2715bf41fcfeddb18c9e0e48291c54a03a12c0f8bc46e95804b964520c3",
                          "typeString": "literal_string \"Only owner.\""
                        }
                      ],
                      "id": 231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2347:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2347:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "2347:43:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 239,
                      "name": "_money",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 220,
                      "src": "2404:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2414:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2404:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 249,
                  "nodeType": "IfStatement",
                  "src": "2400:54:2",
                  "trueBody": {
                    "expression": {
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "baseExpression": {
                            "id": 242,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "2420:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 244,
                          "indexExpression": {
                            "id": 243,
                            "name": "_teamId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "2426:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2420:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberLocation": "2435:10:2",
                        "memberName": "totalMoney",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8,
                        "src": "2420:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 246,
                        "name": "_money",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "2448:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2420:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 248,
                    "nodeType": "ExpressionStatement",
                    "src": "2420:34:2"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 250,
                      "name": "_speed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "2468:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2478:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2468:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 260,
                  "nodeType": "IfStatement",
                  "src": "2464:49:2",
                  "trueBody": {
                    "expression": {
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "baseExpression": {
                            "id": 253,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "2484:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 255,
                          "indexExpression": {
                            "id": 254,
                            "name": "_teamId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "2490:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2484:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberLocation": "2499:5:2",
                        "memberName": "speed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "2484:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 257,
                        "name": "_speed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "2507:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2484:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 259,
                    "nodeType": "ExpressionStatement",
                    "src": "2484:29:2"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 261,
                      "name": "_distance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "2527:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2540:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2527:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 271,
                  "nodeType": "IfStatement",
                  "src": "2523:55:2",
                  "trueBody": {
                    "expression": {
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "baseExpression": {
                            "id": 264,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "2543:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 266,
                          "indexExpression": {
                            "id": 265,
                            "name": "_teamId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "2549:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2543:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberLocation": "2558:8:2",
                        "memberName": "distance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "2543:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 268,
                        "name": "_distance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "2569:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2543:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 270,
                    "nodeType": "ExpressionStatement",
                    "src": "2543:35:2"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 272,
                      "name": "_defense",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 226,
                      "src": "2592:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2604:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2592:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 282,
                  "nodeType": "IfStatement",
                  "src": "2588:53:2",
                  "trueBody": {
                    "expression": {
                      "id": 280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "baseExpression": {
                            "id": 275,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "2608:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 277,
                          "indexExpression": {
                            "id": 276,
                            "name": "_teamId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "2614:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2608:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberLocation": "2623:7:2",
                        "memberName": "defense",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "2608:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 279,
                        "name": "_defense",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 226,
                        "src": "2633:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2608:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 281,
                    "nodeType": "ExpressionStatement",
                    "src": "2608:33:2"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 283,
                      "name": "_attack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "2655:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2666:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2655:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 293,
                  "nodeType": "IfStatement",
                  "src": "2651:51:2",
                  "trueBody": {
                    "expression": {
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "baseExpression": {
                            "id": 286,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "2671:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 288,
                          "indexExpression": {
                            "id": 287,
                            "name": "_teamId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "2677:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2671:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 289,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberLocation": "2686:6:2",
                        "memberName": "attack",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "2671:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 290,
                        "name": "_attack",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "2695:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2671:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 292,
                    "nodeType": "ExpressionStatement",
                    "src": "2671:31:2"
                  }
                }
              ]
            },
            "functionSelector": "e075be21",
            "id": 295,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeSettings",
            "nameLocation": "2212:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "_teamId",
                  "nameLocation": "2235:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2227:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2227:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "_money",
                  "nameLocation": "2252:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2244:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2244:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "_speed",
                  "nameLocation": "2268:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2260:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2260:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "_distance",
                  "nameLocation": "2284:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2276:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "_defense",
                  "nameLocation": "2303:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2295:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2295:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "_attack",
                  "nameLocation": "2321:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2313:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2313:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2226:103:2"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2337:0:2"
            },
            "scope": 1365,
            "src": "2203:506:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "2776:464:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 301,
                          "name": "teamId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 297,
                          "src": "2794:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 302,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "2803:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2809:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2803:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2794:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207465616d2049442e",
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2817:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce5105bbf58745f44484e032223a8cea35832913348af17acca208cf75e02e05",
                          "typeString": "literal_string \"Invalid team ID.\""
                        },
                        "value": "Invalid team ID."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce5105bbf58745f44484e032223a8cea35832913348af17acca208cf75e02e05",
                          "typeString": "literal_string \"Invalid team ID.\""
                        }
                      ],
                      "id": 300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2786:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2786:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "2786:50:2"
                },
                {
                  "assignments": [
                    309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 309,
                      "mutability": "mutable",
                      "name": "money",
                      "nameLocation": "2854:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "2846:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 308,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2846:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 325,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 312,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2875:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2879:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2875:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 310,
                            "name": "Qi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "2862:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1443",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2865:9:2",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1400,
                          "src": "2862:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2862:24:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "31653138",
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2887:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      "src": "2862:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 319,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2908:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2912:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2908:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 317,
                            "name": "eQi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "2894:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1443",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2898:9:2",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1400,
                          "src": "2894:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2894:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "31653138",
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2920:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      "src": "2894:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2862:62:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2846:78:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 327,
                          "name": "money",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 309,
                          "src": "2942:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2951:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "2942:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265717569726573206174206c6561737420313030205169202b2065516920746f20706c61792e",
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2956:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fb14c23fcc6646ce099df71234d2a89f2b9f102315bb43e191c05fb31162bfc",
                          "typeString": "literal_string \"Requires at least 100 Qi + eQi to play.\""
                        },
                        "value": "Requires at least 100 Qi + eQi to play."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fb14c23fcc6646ce099df71234d2a89f2b9f102315bb43e191c05fb31162bfc",
                          "typeString": "literal_string \"Requires at least 100 Qi + eQi to play.\""
                        }
                      ],
                      "id": 326,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2934:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2934:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "2934:64:2"
                },
                {
                  "expression": {
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 333,
                          "name": "teams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "3009:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                            "typeString": "struct PirateRace.Team storage ref[] storage ref"
                          }
                        },
                        "id": 335,
                        "indexExpression": {
                          "id": 334,
                          "name": "teamId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 297,
                          "src": "3015:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3009:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$21_storage",
                          "typeString": "struct PirateRace.Team storage ref"
                        }
                      },
                      "id": 336,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3023:10:2",
                      "memberName": "totalMoney",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "3009:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 337,
                      "name": "money",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "3037:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3009:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "3009:33:2"
                },
                {
                  "expression": {
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 340,
                          "name": "teams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "3052:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                            "typeString": "struct PirateRace.Team storage ref[] storage ref"
                          }
                        },
                        "id": 342,
                        "indexExpression": {
                          "id": 341,
                          "name": "teamId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 297,
                          "src": "3058:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3052:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$21_storage",
                          "typeString": "struct PirateRace.Team storage ref"
                        }
                      },
                      "id": 343,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3066:10:2",
                      "memberName": "numPirates",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "3052:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3080:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3052:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "3052:29:2"
                },
                {
                  "expression": {
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 347,
                        "name": "userToTeam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "3091:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 350,
                      "indexExpression": {
                        "expression": {
                          "id": 348,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3102:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3106:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3102:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3091:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 351,
                      "name": "teamId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "3116:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3091:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "3091:31:2"
                },
                {
                  "expression": {
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 354,
                          "name": "userScore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "3132:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Contribution_$26_storage_$",
                            "typeString": "mapping(address => struct PirateRace.Contribution storage ref)"
                          }
                        },
                        "id": 357,
                        "indexExpression": {
                          "expression": {
                            "id": 355,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3142:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3146:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3142:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3132:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contribution_$26_storage",
                          "typeString": "struct PirateRace.Contribution storage ref"
                        }
                      },
                      "id": 358,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3154:5:2",
                      "memberName": "money",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "3132:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 359,
                      "name": "money",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "3162:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3132:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "3132:35:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 363,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3191:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3195:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3191:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 365,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "3203:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 367,
                          "indexExpression": {
                            "id": 366,
                            "name": "teamId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 297,
                            "src": "3209:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3203:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3217:8:2",
                        "memberName": "teamName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "3203:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 369,
                        "name": "money",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "3227:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 362,
                      "name": "TeamJoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1300,
                      "src": "3182:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3182:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 371,
                  "nodeType": "EmitStatement",
                  "src": "3177:56:2"
                }
              ]
            },
            "functionSelector": "049878f3",
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "join",
            "nameLocation": "2748:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 297,
                  "mutability": "mutable",
                  "name": "teamId",
                  "nameLocation": "2761:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "2753:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2753:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2752:16:2"
            },
            "returnParameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2776:0:2"
            },
            "scope": 1365,
            "src": "2739:501:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 396,
              "nodeType": "Block",
              "src": "3304:124:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 381,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3322:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3326:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3322:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 383,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "3336:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3322:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e207069636b206361707461696e732e",
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3343:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_811c2b589b1135c64246042adc086973df7f3abd3918b7f06fb860fbc93a1822",
                          "typeString": "literal_string \"Only the owner can pick captains.\""
                        },
                        "value": "Only the owner can pick captains."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_811c2b589b1135c64246042adc086973df7f3abd3918b7f06fb860fbc93a1822",
                          "typeString": "literal_string \"Only the owner can pick captains.\""
                        }
                      ],
                      "id": 380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3314:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3314:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "3314:65:2"
                },
                {
                  "expression": {
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 388,
                        "name": "captain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "3389:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 392,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 389,
                          "name": "userToTeam",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "3397:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 391,
                        "indexExpression": {
                          "id": 390,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 377,
                          "src": "3408:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3397:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3389:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 393,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "3417:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3389:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "3389:32:2"
                }
              ]
            },
            "functionSelector": "81ec0f0f",
            "id": 397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pickCaptain",
            "nameLocation": "3255:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 375,
                  "mutability": "mutable",
                  "name": "teamId",
                  "nameLocation": "3275:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "3267:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3267:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 377,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3291:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "3283:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3283:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3266:30:2"
            },
            "returnParameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3304:0:2"
            },
            "scope": 1365,
            "src": "3246:182:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 435,
              "nodeType": "Block",
              "src": "3487:219:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 405,
                            "name": "userToTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "3505:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 408,
                          "indexExpression": {
                            "expression": {
                              "id": 406,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3516:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3520:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3516:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3505:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 409,
                            "name": "userToTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "3531:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 411,
                          "indexExpression": {
                            "id": 410,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 399,
                            "src": "3542:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3531:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3505:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4669727374206d617465206d757374206265206f6e20796f7572207465616d2e",
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3549:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_621afb1f2396ea4ad9f93eba712f395f0636d0329c37c7c0b86aa45a1d78c4fc",
                          "typeString": "literal_string \"First mate must be on your team.\""
                        },
                        "value": "First mate must be on your team."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_621afb1f2396ea4ad9f93eba712f395f0636d0329c37c7c0b86aa45a1d78c4fc",
                          "typeString": "literal_string \"First mate must be on your team.\""
                        }
                      ],
                      "id": 404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3497:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3497:87:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "3497:87:2"
                },
                {
                  "expression": {
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 416,
                        "name": "firstMate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "3594:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 420,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 417,
                          "name": "userToTeam",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "3604:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 419,
                        "indexExpression": {
                          "id": 418,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "3615:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3604:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3594:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 421,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "3624:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3594:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "3594:34:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 425,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "3654:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 430,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 426,
                              "name": "userToTeam",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "3660:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 429,
                            "indexExpression": {
                              "expression": {
                                "id": 427,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3671:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3675:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3671:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3660:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3654:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3684:8:2",
                        "memberName": "teamName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "3654:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 432,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "3694:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 424,
                      "name": "FirstMate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1364,
                      "src": "3643:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3643:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 434,
                  "nodeType": "EmitStatement",
                  "src": "3638:61:2"
                }
              ]
            },
            "functionSelector": "ddbceda7",
            "id": 436,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 402,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 401,
                  "name": "isCaptain",
                  "nameLocations": [
                    "3478:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1252,
                  "src": "3478:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3478:9:2"
              }
            ],
            "name": "pickFirstMate",
            "nameLocation": "3443:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3465:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 436,
                  "src": "3457:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3457:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3456:14:2"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3487:0:2"
            },
            "scope": 1365,
            "src": "3434:272:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 520,
              "nodeType": "Block",
              "src": "3800:479:2",
              "statements": [
                {
                  "body": {
                    "id": 494,
                    "nodeType": "Block",
                    "src": "3853:275:2",
                    "statements": [
                      {
                        "assignments": [
                          453
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 453,
                            "mutability": "mutable",
                            "name": "timePassed",
                            "nameLocation": "3875:10:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 494,
                            "src": "3867:18:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 452,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3867:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 458,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 454,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3888:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3894:9:2",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3888:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 456,
                            "name": "lastUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "3906:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3888:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3867:50:2"
                      },
                      {
                        "expression": {
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 459,
                                "name": "teams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55,
                                "src": "3931:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                  "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                }
                              },
                              "id": 461,
                              "indexExpression": {
                                "id": 460,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 442,
                                "src": "3937:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3931:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Team_$21_storage",
                                "typeString": "struct PirateRace.Team storage ref"
                              }
                            },
                            "id": 462,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3940:8:2",
                            "memberName": "distance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14,
                            "src": "3931:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 463,
                                  "name": "teams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 55,
                                  "src": "3952:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                    "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                  }
                                },
                                "id": 465,
                                "indexExpression": {
                                  "id": 464,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 442,
                                  "src": "3958:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3952:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Team_$21_storage",
                                  "typeString": "struct PirateRace.Team storage ref"
                                }
                              },
                              "id": 466,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3961:5:2",
                              "memberName": "speed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12,
                              "src": "3952:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 467,
                              "name": "timePassed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "3969:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3952:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3931:48:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 470,
                        "nodeType": "ExpressionStatement",
                        "src": "3931:48:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 471,
                                  "name": "teams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 55,
                                  "src": "3997:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                    "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                  }
                                },
                                "id": 473,
                                "indexExpression": {
                                  "id": 472,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 442,
                                  "src": "4003:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3997:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Team_$21_storage",
                                  "typeString": "struct PirateRace.Team storage ref"
                                }
                              },
                              "id": 474,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4006:8:2",
                              "memberName": "distance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14,
                              "src": "3997:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 475,
                              "name": "finishLine",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "4018:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3997:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 479,
                                    "name": "winner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31,
                                    "src": "4038:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "id": 478,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4032:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 477,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4032:5:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4032:13:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes storage pointer"
                                }
                              },
                              "id": 481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4046:6:2",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4032:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4056:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4032:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3997:60:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 493,
                        "nodeType": "IfStatement",
                        "src": "3993:125:2",
                        "trueBody": {
                          "id": 492,
                          "nodeType": "Block",
                          "src": "4059:59:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 485,
                                  "name": "winner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "4077:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 486,
                                      "name": "teams",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 55,
                                      "src": "4086:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                        "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                      }
                                    },
                                    "id": 488,
                                    "indexExpression": {
                                      "id": 487,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 442,
                                      "src": "4092:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4086:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Team_$21_storage",
                                      "typeString": "struct PirateRace.Team storage ref"
                                    }
                                  },
                                  "id": 489,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4095:8:2",
                                  "memberName": "teamName",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10,
                                  "src": "4086:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                "src": "4077:26:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              "id": 491,
                              "nodeType": "ExpressionStatement",
                              "src": "4077:26:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 445,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 442,
                      "src": "3830:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 446,
                        "name": "teams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "3834:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                          "typeString": "struct PirateRace.Team storage ref[] storage ref"
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3840:6:2",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3834:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3830:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 495,
                  "initializationExpression": {
                    "assignments": [
                      442
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 442,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3823:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 495,
                        "src": "3815:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 441,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3815:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 444,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3827:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3815:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3848:3:2",
                      "subExpression": {
                        "id": 449,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 442,
                        "src": "3848:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 451,
                    "nodeType": "ExpressionStatement",
                    "src": "3848:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3810:318:2"
                },
                {
                  "expression": {
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 496,
                      "name": "lastUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "4137:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 497,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4151:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4157:9:2",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4151:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4137:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "4137:29:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 502,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "4197:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 504,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4203:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4197:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4206:8:2",
                        "memberName": "distance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "4197:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 506,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "4216:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 508,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4222:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4216:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4225:8:2",
                        "memberName": "distance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "4216:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 510,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "4235:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 512,
                          "indexExpression": {
                            "hexValue": "32",
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4241:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4235:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 513,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4244:8:2",
                        "memberName": "distance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "4235:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 514,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "4254:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 516,
                          "indexExpression": {
                            "hexValue": "33",
                            "id": 515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4260:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4254:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 517,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4263:8:2",
                        "memberName": "distance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "4254:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 501,
                      "name": "DistanceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1310,
                      "src": "4181:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4181:91:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 519,
                  "nodeType": "EmitStatement",
                  "src": "4176:96:2"
                }
              ]
            },
            "functionSelector": "6b3ee32a",
            "id": 521,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 439,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 438,
                  "name": "isGameStarted",
                  "nameLocations": [
                    "3786:13:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1235,
                  "src": "3786:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3786:13:2"
              }
            ],
            "name": "updateDistance",
            "nameLocation": "3762:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3776:2:2"
            },
            "returnParameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3800:0:2"
            },
            "scope": 1365,
            "src": "3753:526:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 591,
              "nodeType": "Block",
              "src": "4341:422:2",
              "statements": [
                {
                  "assignments": [
                    529
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 529,
                      "mutability": "mutable",
                      "name": "teamId",
                      "nameLocation": "4359:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 591,
                      "src": "4351:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 528,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4351:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 534,
                  "initialValue": {
                    "baseExpression": {
                      "id": 530,
                      "name": "userToTeam",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "4368:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 533,
                    "indexExpression": {
                      "expression": {
                        "id": 531,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4379:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4383:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4379:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4368:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4351:39:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 536,
                              "name": "teams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "4408:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                "typeString": "struct PirateRace.Team storage ref[] storage ref"
                              }
                            },
                            "id": 538,
                            "indexExpression": {
                              "id": 537,
                              "name": "teamId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 529,
                              "src": "4414:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4408:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$21_storage",
                              "typeString": "struct PirateRace.Team storage ref"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4422:10:2",
                          "memberName": "totalMoney",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8,
                          "src": "4408:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4436:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4408:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768206d6f6e657920746f207570677261646520656e67696e652e",
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4439:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb0e90a736892dbdbd0b564b2638b0e3fb4dfcfa0d550b3f7a691e473b321479",
                          "typeString": "literal_string \"Not enough money to upgrade engine.\""
                        },
                        "value": "Not enough money to upgrade engine."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb0e90a736892dbdbd0b564b2638b0e3fb4dfcfa0d550b3f7a691e473b321479",
                          "typeString": "literal_string \"Not enough money to upgrade engine.\""
                        }
                      ],
                      "id": 535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4400:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4400:77:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 544,
                  "nodeType": "ExpressionStatement",
                  "src": "4400:77:2"
                },
                {
                  "expression": {
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 545,
                          "name": "teams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "4496:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                            "typeString": "struct PirateRace.Team storage ref[] storage ref"
                          }
                        },
                        "id": 547,
                        "indexExpression": {
                          "id": 546,
                          "name": "teamId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "4502:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4496:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$21_storage",
                          "typeString": "struct PirateRace.Team storage ref"
                        }
                      },
                      "id": 548,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4510:10:2",
                      "memberName": "totalMoney",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "4496:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4552:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 549,
                              "name": "teams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "4523:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                "typeString": "struct PirateRace.Team storage ref[] storage ref"
                              }
                            },
                            "id": 551,
                            "indexExpression": {
                              "id": 550,
                              "name": "teamId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 529,
                              "src": "4529:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4523:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$21_storage",
                              "typeString": "struct PirateRace.Team storage ref"
                            }
                          },
                          "id": 552,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4537:10:2",
                          "memberName": "totalMoney",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8,
                          "src": "4523:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4548:3:2",
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1634,
                        "src": "4523:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4523:31:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4496:58:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "4496:58:2"
                },
                {
                  "expression": {
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 558,
                          "name": "teams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "4564:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                            "typeString": "struct PirateRace.Team storage ref[] storage ref"
                          }
                        },
                        "id": 560,
                        "indexExpression": {
                          "id": 559,
                          "name": "teamId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "4570:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4564:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$21_storage",
                          "typeString": "struct PirateRace.Team storage ref"
                        }
                      },
                      "id": 561,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4578:5:2",
                      "memberName": "speed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "4564:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4610:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 562,
                              "name": "teams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "4586:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                "typeString": "struct PirateRace.Team storage ref[] storage ref"
                              }
                            },
                            "id": 564,
                            "indexExpression": {
                              "id": 563,
                              "name": "teamId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 529,
                              "src": "4592:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4586:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$21_storage",
                              "typeString": "struct PirateRace.Team storage ref"
                            }
                          },
                          "id": 565,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4600:5:2",
                          "memberName": "speed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "4586:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4606:3:2",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1619,
                        "src": "4586:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4586:26:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4564:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "4564:48:2"
                },
                {
                  "expression": {
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 571,
                          "name": "userScore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "4631:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Contribution_$26_storage_$",
                            "typeString": "mapping(address => struct PirateRace.Contribution storage ref)"
                          }
                        },
                        "id": 574,
                        "indexExpression": {
                          "expression": {
                            "id": 572,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4641:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4645:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4641:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4631:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contribution_$26_storage",
                          "typeString": "struct PirateRace.Contribution storage ref"
                        }
                      },
                      "id": 575,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4653:7:2",
                      "memberName": "actions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "4631:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4664:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4631:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 578,
                  "nodeType": "ExpressionStatement",
                  "src": "4631:34:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 579,
                      "name": "updateDistance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "4675:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4675:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "4675:16:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 583,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4721:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4725:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4721:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 585,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "4733:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 587,
                          "indexExpression": {
                            "id": 586,
                            "name": "teamId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "4739:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4733:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 588,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4747:8:2",
                        "memberName": "teamName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "4733:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 582,
                      "name": "EngineUpgraded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1316,
                      "src": "4706:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4706:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 590,
                  "nodeType": "EmitStatement",
                  "src": "4701:55:2"
                }
              ]
            },
            "functionSelector": "57fffd4a",
            "id": 592,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 524,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 523,
                  "name": "isGameStarted",
                  "nameLocations": [
                    "4317:13:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1235,
                  "src": "4317:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4317:13:2"
              },
              {
                "id": 526,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 525,
                  "name": "notInJail",
                  "nameLocations": [
                    "4331:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1292,
                  "src": "4331:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4331:9:2"
              }
            ],
            "name": "upgradeEngine",
            "nameLocation": "4294:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4307:2:2"
            },
            "returnParameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4341:0:2"
            },
            "scope": 1365,
            "src": "4285:478:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 662,
              "nodeType": "Block",
              "src": "4826:428:2",
              "statements": [
                {
                  "assignments": [
                    600
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 600,
                      "mutability": "mutable",
                      "name": "teamId",
                      "nameLocation": "4844:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 662,
                      "src": "4836:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 599,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4836:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 605,
                  "initialValue": {
                    "baseExpression": {
                      "id": 601,
                      "name": "userToTeam",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "4853:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 604,
                    "indexExpression": {
                      "expression": {
                        "id": 602,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4864:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4868:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4864:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4853:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4836:39:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 607,
                              "name": "teams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "4893:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                "typeString": "struct PirateRace.Team storage ref[] storage ref"
                              }
                            },
                            "id": 609,
                            "indexExpression": {
                              "id": 608,
                              "name": "teamId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 600,
                              "src": "4899:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4893:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$21_storage",
                              "typeString": "struct PirateRace.Team storage ref"
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4907:10:2",
                          "memberName": "totalMoney",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8,
                          "src": "4893:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4921:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4893:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768206d6f6e657920746f207570677261646520646566656e73652e",
                        "id": 613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4924:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5157c874fac548f4912eee4ee90a8bb1c6ed849b30ec41a79d1081b08b702d8",
                          "typeString": "literal_string \"Not enough money to upgrade defense.\""
                        },
                        "value": "Not enough money to upgrade defense."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d5157c874fac548f4912eee4ee90a8bb1c6ed849b30ec41a79d1081b08b702d8",
                          "typeString": "literal_string \"Not enough money to upgrade defense.\""
                        }
                      ],
                      "id": 606,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4885:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4885:78:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "4885:78:2"
                },
                {
                  "expression": {
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 616,
                          "name": "teams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "4982:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                            "typeString": "struct PirateRace.Team storage ref[] storage ref"
                          }
                        },
                        "id": 618,
                        "indexExpression": {
                          "id": 617,
                          "name": "teamId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 600,
                          "src": "4988:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4982:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$21_storage",
                          "typeString": "struct PirateRace.Team storage ref"
                        }
                      },
                      "id": 619,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4996:10:2",
                      "memberName": "totalMoney",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "4982:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5038:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 620,
                              "name": "teams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "5009:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                "typeString": "struct PirateRace.Team storage ref[] storage ref"
                              }
                            },
                            "id": 622,
                            "indexExpression": {
                              "id": 621,
                              "name": "teamId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 600,
                              "src": "5015:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5009:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$21_storage",
                              "typeString": "struct PirateRace.Team storage ref"
                            }
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5023:10:2",
                          "memberName": "totalMoney",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8,
                          "src": "5009:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5034:3:2",
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1634,
                        "src": "5009:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5009:31:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4982:58:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 628,
                  "nodeType": "ExpressionStatement",
                  "src": "4982:58:2"
                },
                {
                  "expression": {
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 629,
                          "name": "teams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "5050:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                            "typeString": "struct PirateRace.Team storage ref[] storage ref"
                          }
                        },
                        "id": 631,
                        "indexExpression": {
                          "id": 630,
                          "name": "teamId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 600,
                          "src": "5056:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5050:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$21_storage",
                          "typeString": "struct PirateRace.Team storage ref"
                        }
                      },
                      "id": 632,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5064:7:2",
                      "memberName": "defense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "5050:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5100:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 633,
                              "name": "teams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "5074:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                "typeString": "struct PirateRace.Team storage ref[] storage ref"
                              }
                            },
                            "id": 635,
                            "indexExpression": {
                              "id": 634,
                              "name": "teamId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 600,
                              "src": "5080:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5074:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$21_storage",
                              "typeString": "struct PirateRace.Team storage ref"
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5088:7:2",
                          "memberName": "defense",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "5074:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5096:3:2",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1619,
                        "src": "5074:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5074:28:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5050:52:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 641,
                  "nodeType": "ExpressionStatement",
                  "src": "5050:52:2"
                },
                {
                  "expression": {
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 642,
                          "name": "userScore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "5121:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Contribution_$26_storage_$",
                            "typeString": "mapping(address => struct PirateRace.Contribution storage ref)"
                          }
                        },
                        "id": 645,
                        "indexExpression": {
                          "expression": {
                            "id": 643,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5131:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5135:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5131:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5121:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contribution_$26_storage",
                          "typeString": "struct PirateRace.Contribution storage ref"
                        }
                      },
                      "id": 646,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5143:7:2",
                      "memberName": "actions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "5121:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5154:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5121:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "5121:34:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 650,
                      "name": "updateDistance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "5165:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5165:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "5165:16:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 654,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5212:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5216:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5212:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 656,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "5224:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 658,
                          "indexExpression": {
                            "id": 657,
                            "name": "teamId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "5230:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5224:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 659,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5238:8:2",
                        "memberName": "teamName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "5224:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 653,
                      "name": "DefenseUpgraded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1322,
                      "src": "5196:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5196:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 661,
                  "nodeType": "EmitStatement",
                  "src": "5191:56:2"
                }
              ]
            },
            "functionSelector": "a99bc082",
            "id": 663,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 595,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 594,
                  "name": "isGameStarted",
                  "nameLocations": [
                    "4802:13:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1235,
                  "src": "4802:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4802:13:2"
              },
              {
                "id": 597,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 596,
                  "name": "notInJail",
                  "nameLocations": [
                    "4816:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1292,
                  "src": "4816:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4816:9:2"
              }
            ],
            "name": "upgradeDefense",
            "nameLocation": "4778:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4792:2:2"
            },
            "returnParameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4826:0:2"
            },
            "scope": 1365,
            "src": "4769:485:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 733,
              "nodeType": "Block",
              "src": "5316:424:2",
              "statements": [
                {
                  "assignments": [
                    671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 671,
                      "mutability": "mutable",
                      "name": "teamId",
                      "nameLocation": "5334:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 733,
                      "src": "5326:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 670,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5326:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 676,
                  "initialValue": {
                    "baseExpression": {
                      "id": 672,
                      "name": "userToTeam",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "5343:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 675,
                    "indexExpression": {
                      "expression": {
                        "id": 673,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5354:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5358:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5354:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5343:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5326:39:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 678,
                              "name": "teams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "5383:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                "typeString": "struct PirateRace.Team storage ref[] storage ref"
                              }
                            },
                            "id": 680,
                            "indexExpression": {
                              "id": 679,
                              "name": "teamId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 671,
                              "src": "5389:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5383:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$21_storage",
                              "typeString": "struct PirateRace.Team storage ref"
                            }
                          },
                          "id": 681,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5397:10:2",
                          "memberName": "totalMoney",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8,
                          "src": "5383:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5411:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5383:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768206d6f6e657920746f20757067726164652061747461636b2e",
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5414:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_810836eca3c540d5dbf699651d5f3d5d207ffbc8d1644088bb2c6ece1b8e040f",
                          "typeString": "literal_string \"Not enough money to upgrade attack.\""
                        },
                        "value": "Not enough money to upgrade attack."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_810836eca3c540d5dbf699651d5f3d5d207ffbc8d1644088bb2c6ece1b8e040f",
                          "typeString": "literal_string \"Not enough money to upgrade attack.\""
                        }
                      ],
                      "id": 677,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5375:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5375:77:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "5375:77:2"
                },
                {
                  "expression": {
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 687,
                          "name": "teams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "5471:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                            "typeString": "struct PirateRace.Team storage ref[] storage ref"
                          }
                        },
                        "id": 689,
                        "indexExpression": {
                          "id": 688,
                          "name": "teamId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 671,
                          "src": "5477:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5471:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$21_storage",
                          "typeString": "struct PirateRace.Team storage ref"
                        }
                      },
                      "id": 690,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5485:10:2",
                      "memberName": "totalMoney",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "5471:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5527:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 691,
                              "name": "teams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "5498:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                "typeString": "struct PirateRace.Team storage ref[] storage ref"
                              }
                            },
                            "id": 693,
                            "indexExpression": {
                              "id": 692,
                              "name": "teamId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 671,
                              "src": "5504:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5498:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$21_storage",
                              "typeString": "struct PirateRace.Team storage ref"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5512:10:2",
                          "memberName": "totalMoney",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8,
                          "src": "5498:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5523:3:2",
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1634,
                        "src": "5498:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5498:31:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5471:58:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 699,
                  "nodeType": "ExpressionStatement",
                  "src": "5471:58:2"
                },
                {
                  "expression": {
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 700,
                          "name": "teams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "5539:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                            "typeString": "struct PirateRace.Team storage ref[] storage ref"
                          }
                        },
                        "id": 702,
                        "indexExpression": {
                          "id": 701,
                          "name": "teamId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 671,
                          "src": "5545:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5539:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$21_storage",
                          "typeString": "struct PirateRace.Team storage ref"
                        }
                      },
                      "id": 703,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5553:6:2",
                      "memberName": "attack",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "5539:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5587:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 704,
                              "name": "teams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "5562:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                "typeString": "struct PirateRace.Team storage ref[] storage ref"
                              }
                            },
                            "id": 706,
                            "indexExpression": {
                              "id": 705,
                              "name": "teamId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 671,
                              "src": "5568:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5562:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$21_storage",
                              "typeString": "struct PirateRace.Team storage ref"
                            }
                          },
                          "id": 707,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5576:6:2",
                          "memberName": "attack",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18,
                          "src": "5562:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5583:3:2",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1619,
                        "src": "5562:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5562:27:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5539:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "5539:50:2"
                },
                {
                  "expression": {
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 713,
                          "name": "userScore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "5608:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Contribution_$26_storage_$",
                            "typeString": "mapping(address => struct PirateRace.Contribution storage ref)"
                          }
                        },
                        "id": 716,
                        "indexExpression": {
                          "expression": {
                            "id": 714,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5618:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5622:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5618:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5608:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contribution_$26_storage",
                          "typeString": "struct PirateRace.Contribution storage ref"
                        }
                      },
                      "id": 717,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5630:7:2",
                      "memberName": "actions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "5608:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5641:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5608:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 720,
                  "nodeType": "ExpressionStatement",
                  "src": "5608:34:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 721,
                      "name": "updateDistance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "5652:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5652:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 723,
                  "nodeType": "ExpressionStatement",
                  "src": "5652:16:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 725,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5698:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5702:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5698:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 727,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "5710:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 729,
                          "indexExpression": {
                            "id": 728,
                            "name": "teamId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 671,
                            "src": "5716:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5710:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 730,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5724:8:2",
                        "memberName": "teamName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "5710:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 724,
                      "name": "AttackUpgraded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1328,
                      "src": "5683:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5683:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 732,
                  "nodeType": "EmitStatement",
                  "src": "5678:55:2"
                }
              ]
            },
            "functionSelector": "8362cecf",
            "id": 734,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 666,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 665,
                  "name": "isGameStarted",
                  "nameLocations": [
                    "5292:13:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1235,
                  "src": "5292:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "5292:13:2"
              },
              {
                "id": 668,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 667,
                  "name": "notInJail",
                  "nameLocations": [
                    "5306:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1292,
                  "src": "5306:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "5306:9:2"
              }
            ],
            "name": "upgradeAttack",
            "nameLocation": "5269:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5282:2:2"
            },
            "returnParameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5316:0:2"
            },
            "scope": 1365,
            "src": "5260:480:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 901,
              "nodeType": "Block",
              "src": "5817:1148:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 744,
                          "name": "targetTeam",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 736,
                          "src": "5835:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 745,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "5848:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5854:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5848:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5835:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420746172676574207465616d2e",
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5862:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ee9b51a50bd7b188be865e8fb1d2c40416e7c7a2b776917c271e81f1539a91b",
                          "typeString": "literal_string \"Invalid target team.\""
                        },
                        "value": "Invalid target team."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ee9b51a50bd7b188be865e8fb1d2c40416e7c7a2b776917c271e81f1539a91b",
                          "typeString": "literal_string \"Invalid target team.\""
                        }
                      ],
                      "id": 743,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5827:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5827:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "5827:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 752,
                          "name": "targetTeam",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 736,
                          "src": "5903:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 753,
                            "name": "userToTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "5917:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 756,
                          "indexExpression": {
                            "expression": {
                              "id": 754,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5928:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5932:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5928:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5917:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5903:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f742066697265206174206f776e207465616d2e",
                        "id": 758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5941:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84a1cd245bc597a7c1d33564fd53e863cd7c67788ec9f48527ffd024756d8cc1",
                          "typeString": "literal_string \"Cannot fire at own team.\""
                        },
                        "value": "Cannot fire at own team."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84a1cd245bc597a7c1d33564fd53e863cd7c67788ec9f48527ffd024756d8cc1",
                          "typeString": "literal_string \"Cannot fire at own team.\""
                        }
                      ],
                      "id": 751,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5895:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5895:73:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 760,
                  "nodeType": "ExpressionStatement",
                  "src": "5895:73:2"
                },
                {
                  "assignments": [
                    762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 762,
                      "mutability": "mutable",
                      "name": "teamId",
                      "nameLocation": "5995:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 901,
                      "src": "5987:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 761,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5987:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 767,
                  "initialValue": {
                    "baseExpression": {
                      "id": 763,
                      "name": "userToTeam",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "6004:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 766,
                    "indexExpression": {
                      "expression": {
                        "id": 764,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6015:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6019:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6015:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6004:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5987:39:2"
                },
                {
                  "assignments": [
                    769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 769,
                      "mutability": "mutable",
                      "name": "hit",
                      "nameLocation": "6041:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 901,
                      "src": "6036:8:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 768,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6036:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 771,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6047:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6036:16:2"
                },
                {
                  "assignments": [
                    773
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 773,
                      "mutability": "mutable",
                      "name": "hitChance",
                      "nameLocation": "6070:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 901,
                      "src": "6062:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 772,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6062:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 775,
                  "initialValue": {
                    "hexValue": "3333",
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6082:2:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_33_by_1",
                      "typeString": "int_const 33"
                    },
                    "value": "33"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6062:22:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 776,
                        "name": "hitChance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "6107:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 777,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "6119:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 779,
                          "indexExpression": {
                            "id": 778,
                            "name": "teamId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "6125:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6119:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 780,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6133:6:2",
                        "memberName": "attack",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "6119:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6107:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 782,
                          "name": "teams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "6142:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                            "typeString": "struct PirateRace.Team storage ref[] storage ref"
                          }
                        },
                        "id": 784,
                        "indexExpression": {
                          "id": 783,
                          "name": "targetTeam",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 736,
                          "src": "6148:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6142:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$21_storage",
                          "typeString": "struct PirateRace.Team storage ref"
                        }
                      },
                      "id": 785,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6160:7:2",
                      "memberName": "defense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "6142:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6107:60:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "id": 803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 791,
                        "name": "hitChance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "6225:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3333",
                            "id": 792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6237:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_33_by_1",
                              "typeString": "int_const 33"
                            },
                            "value": "33"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 793,
                                "name": "teams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55,
                                "src": "6242:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                  "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                }
                              },
                              "id": 795,
                              "indexExpression": {
                                "id": 794,
                                "name": "teamId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 762,
                                "src": "6248:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6242:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Team_$21_storage",
                                "typeString": "struct PirateRace.Team storage ref"
                              }
                            },
                            "id": 796,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6256:6:2",
                            "memberName": "attack",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "6242:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6237:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 798,
                              "name": "teams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "6265:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                "typeString": "struct PirateRace.Team storage ref[] storage ref"
                              }
                            },
                            "id": 800,
                            "indexExpression": {
                              "id": 799,
                              "name": "targetTeam",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 736,
                              "src": "6271:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6265:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$21_storage",
                              "typeString": "struct PirateRace.Team storage ref"
                            }
                          },
                          "id": 801,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6283:7:2",
                          "memberName": "defense",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "6265:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6237:53:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6225:65:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 804,
                    "nodeType": "ExpressionStatement",
                    "src": "6225:65:2"
                  },
                  "id": 805,
                  "nodeType": "IfStatement",
                  "src": "6104:186:2",
                  "trueBody": {
                    "expression": {
                      "id": 789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 787,
                        "name": "hitChance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "6169:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6181:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "6169:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 790,
                    "nodeType": "ExpressionStatement",
                    "src": "6169:13:2"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 806,
                      "name": "hitChance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 773,
                      "src": "6336:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "3939",
                      "id": 807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6348:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_99_by_1",
                        "typeString": "int_const 99"
                      },
                      "value": "99"
                    },
                    "src": "6336:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 813,
                  "nodeType": "IfStatement",
                  "src": "6333:33:2",
                  "trueBody": {
                    "expression": {
                      "id": 811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 809,
                        "name": "hitChance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "6352:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "3939",
                        "id": 810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6364:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_99_by_1",
                          "typeString": "int_const 99"
                        },
                        "value": "99"
                      },
                      "src": "6352:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 812,
                    "nodeType": "ExpressionStatement",
                    "src": "6352:14:2"
                  }
                },
                {
                  "assignments": [
                    815
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 815,
                      "mutability": "mutable",
                      "name": "random",
                      "nameLocation": "6412:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 901,
                      "src": "6404:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 814,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6404:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 830,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 821,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6456:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 822,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6462:9:2",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6456:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 823,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6473:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 824,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6477:6:2",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6473:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 819,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6439:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6443:12:2",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "6439:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6439:45:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 818,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "6429:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6429:56:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6421:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 816,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6421:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6421:65:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6489:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "6421:71:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6404:88:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 831,
                      "name": "random",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "6507:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 832,
                      "name": "hitChance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 773,
                      "src": "6516:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6507:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 875,
                  "nodeType": "IfStatement",
                  "src": "6503:282:2",
                  "trueBody": {
                    "id": 874,
                    "nodeType": "Block",
                    "src": "6527:258:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 834,
                                "name": "teams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55,
                                "src": "6541:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                  "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                }
                              },
                              "id": 836,
                              "indexExpression": {
                                "id": 835,
                                "name": "targetTeam",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 736,
                                "src": "6547:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6541:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Team_$21_storage",
                                "typeString": "struct PirateRace.Team storage ref"
                              }
                            },
                            "id": 837,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6559:8:2",
                            "memberName": "distance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14,
                            "src": "6541:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "313030",
                                "id": 846,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6609:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "3938",
                                    "id": 843,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6601:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_98_by_1",
                                      "typeString": "int_const 98"
                                    },
                                    "value": "98"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_98_by_1",
                                      "typeString": "int_const 98"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 838,
                                        "name": "teams",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 55,
                                        "src": "6570:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                          "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                        }
                                      },
                                      "id": 840,
                                      "indexExpression": {
                                        "id": 839,
                                        "name": "targetTeam",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 736,
                                        "src": "6576:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6570:17:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Team_$21_storage",
                                        "typeString": "struct PirateRace.Team storage ref"
                                      }
                                    },
                                    "id": 841,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6588:8:2",
                                    "memberName": "distance",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14,
                                    "src": "6570:26:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 842,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6597:3:2",
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1649,
                                  "src": "6570:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6570:34:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 845,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6605:3:2",
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1664,
                              "src": "6570:38:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6570:43:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6541:72:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 849,
                        "nodeType": "ExpressionStatement",
                        "src": "6541:72:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 850,
                                "name": "teams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55,
                                "src": "6650:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                  "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                }
                              },
                              "id": 852,
                              "indexExpression": {
                                "id": 851,
                                "name": "targetTeam",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 736,
                                "src": "6656:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6650:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Team_$21_storage",
                                "typeString": "struct PirateRace.Team storage ref"
                              }
                            },
                            "id": 853,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6668:5:2",
                            "memberName": "speed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "6650:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6676:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "6650:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 869,
                        "nodeType": "IfStatement",
                        "src": "6646:89:2",
                        "trueBody": {
                          "expression": {
                            "id": 867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 856,
                                  "name": "teams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 55,
                                  "src": "6679:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                    "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                  }
                                },
                                "id": 858,
                                "indexExpression": {
                                  "id": 857,
                                  "name": "targetTeam",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 736,
                                  "src": "6685:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6679:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Team_$21_storage",
                                  "typeString": "struct PirateRace.Team storage ref"
                                }
                              },
                              "id": 859,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "6697:5:2",
                              "memberName": "speed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12,
                              "src": "6679:23:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "hexValue": "32",
                                  "id": 865,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6733:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 860,
                                      "name": "teams",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 55,
                                      "src": "6705:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                        "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                      }
                                    },
                                    "id": 862,
                                    "indexExpression": {
                                      "id": 861,
                                      "name": "targetTeam",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 736,
                                      "src": "6711:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6705:17:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Team_$21_storage",
                                      "typeString": "struct PirateRace.Team storage ref"
                                    }
                                  },
                                  "id": 863,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6723:5:2",
                                  "memberName": "speed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 12,
                                  "src": "6705:23:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 864,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6729:3:2",
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1634,
                                "src": "6705:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6705:30:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6679:56:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 868,
                          "nodeType": "ExpressionStatement",
                          "src": "6679:56:2"
                        }
                      },
                      {
                        "expression": {
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 870,
                            "name": "hit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 769,
                            "src": "6764:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6770:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6764:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 873,
                        "nodeType": "ExpressionStatement",
                        "src": "6764:10:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 876,
                          "name": "userScore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "6803:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Contribution_$26_storage_$",
                            "typeString": "mapping(address => struct PirateRace.Contribution storage ref)"
                          }
                        },
                        "id": 879,
                        "indexExpression": {
                          "expression": {
                            "id": 877,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6813:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6817:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6813:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6803:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contribution_$26_storage",
                          "typeString": "struct PirateRace.Contribution storage ref"
                        }
                      },
                      "id": 880,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6825:7:2",
                      "memberName": "actions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "6803:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6836:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6803:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "6803:34:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 884,
                      "name": "updateDistance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "6847:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6847:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 886,
                  "nodeType": "ExpressionStatement",
                  "src": "6847:16:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 888,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6890:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6894:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6890:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 890,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "6902:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 892,
                          "indexExpression": {
                            "id": 891,
                            "name": "teamId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "6908:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6902:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 893,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6916:8:2",
                        "memberName": "teamName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "6902:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 894,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "6926:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 896,
                          "indexExpression": {
                            "id": 895,
                            "name": "targetTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 736,
                            "src": "6932:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6926:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 897,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6944:8:2",
                        "memberName": "teamName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "6926:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 898,
                        "name": "hit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "6954:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 887,
                      "name": "CannonFired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1338,
                      "src": "6878:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,string memory,string memory,bool)"
                      }
                    },
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6878:80:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 900,
                  "nodeType": "EmitStatement",
                  "src": "6873:85:2"
                }
              ]
            },
            "functionSelector": "adf7d47a",
            "id": 902,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 739,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 738,
                  "name": "isGameStarted",
                  "nameLocations": [
                    "5793:13:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1235,
                  "src": "5793:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "5793:13:2"
              },
              {
                "id": 741,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 740,
                  "name": "notInJail",
                  "nameLocations": [
                    "5807:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1292,
                  "src": "5807:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "5807:9:2"
              }
            ],
            "name": "fireCannon",
            "nameLocation": "5755:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 736,
                  "mutability": "mutable",
                  "name": "targetTeam",
                  "nameLocation": "5774:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "5766:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 735,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5766:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5765:20:2"
            },
            "returnParameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5817:0:2"
            },
            "scope": 1365,
            "src": "5746:1219:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1059,
              "nodeType": "Block",
              "src": "7027:1084:2",
              "statements": [
                {
                  "assignments": [
                    910
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 910,
                      "mutability": "mutable",
                      "name": "teamId",
                      "nameLocation": "7045:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1059,
                      "src": "7037:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 909,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7037:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 915,
                  "initialValue": {
                    "baseExpression": {
                      "id": 911,
                      "name": "userToTeam",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "7054:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 914,
                    "indexExpression": {
                      "expression": {
                        "id": 912,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7065:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7069:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7065:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7054:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7037:39:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 917,
                              "name": "teams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "7094:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                "typeString": "struct PirateRace.Team storage ref[] storage ref"
                              }
                            },
                            "id": 919,
                            "indexExpression": {
                              "id": 918,
                              "name": "teamId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 910,
                              "src": "7100:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7094:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Team_$21_storage",
                              "typeString": "struct PirateRace.Team storage ref"
                            }
                          },
                          "id": 920,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7108:10:2",
                          "memberName": "totalMoney",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8,
                          "src": "7094:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7122:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "7094:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768206d6f6e657920746f206275792061206d79737465727920626f782e",
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7125:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8140a5d5de73c9f068d36d88f1b6dec1e74a27f6fa8ec0c9dcebe77c0cf69b1a",
                          "typeString": "literal_string \"Not enough money to buy a mystery box.\""
                        },
                        "value": "Not enough money to buy a mystery box."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8140a5d5de73c9f068d36d88f1b6dec1e74a27f6fa8ec0c9dcebe77c0cf69b1a",
                          "typeString": "literal_string \"Not enough money to buy a mystery box.\""
                        }
                      ],
                      "id": 916,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7086:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7086:80:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "7086:80:2"
                },
                {
                  "expression": {
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 926,
                          "name": "teams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "7176:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                            "typeString": "struct PirateRace.Team storage ref[] storage ref"
                          }
                        },
                        "id": 928,
                        "indexExpression": {
                          "id": 927,
                          "name": "teamId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 910,
                          "src": "7182:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7176:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Team_$21_storage",
                          "typeString": "struct PirateRace.Team storage ref"
                        }
                      },
                      "id": 929,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7190:10:2",
                      "memberName": "totalMoney",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "7176:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "35",
                      "id": 930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7204:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "7176:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 932,
                  "nodeType": "ExpressionStatement",
                  "src": "7176:29:2"
                },
                {
                  "assignments": [
                    934
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 934,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "7232:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1059,
                      "src": "7224:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 933,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7224:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 936,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7241:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7224:18:2"
                },
                {
                  "assignments": [
                    938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 938,
                      "mutability": "mutable",
                      "name": "randomNum",
                      "nameLocation": "7260:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1059,
                      "src": "7252:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 937,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7252:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 953,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 944,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "7307:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 945,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7313:9:2",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "7307:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 946,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "7324:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 947,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7328:6:2",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "7324:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 942,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "7290:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 943,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "7294:12:2",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "7290:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7290:45:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 941,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "7280:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7280:56:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7272:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 939,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7272:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7272:65:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7340:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "7272:71:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7252:91:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 954,
                      "name": "randomNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 938,
                      "src": "7366:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3530",
                      "id": 955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7378:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "src": "7366:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 958,
                        "name": "randomNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 938,
                        "src": "7434:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "3635",
                        "id": 959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7446:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_65_by_1",
                          "typeString": "int_const 65"
                        },
                        "value": "65"
                      },
                      "src": "7434:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 973,
                          "name": "randomNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 938,
                          "src": "7554:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3835",
                          "id": 974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7566:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_85_by_1",
                            "typeString": "int_const 85"
                          },
                          "value": "85"
                        },
                        "src": "7554:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1034,
                        "nodeType": "Block",
                        "src": "7745:212:2",
                        "statements": [
                          {
                            "body": {
                              "expression": {
                                "id": 1027,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1013,
                                      "name": "teams",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 55,
                                      "src": "7848:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                        "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1015,
                                    "indexExpression": {
                                      "id": 1014,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1003,
                                      "src": "7854:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7848:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Team_$21_storage",
                                      "typeString": "struct PirateRace.Team storage ref"
                                    }
                                  },
                                  "id": 1016,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "7857:8:2",
                                  "memberName": "distance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14,
                                  "src": "7848:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "313030",
                                      "id": 1025,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7898:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "hexValue": "3930",
                                          "id": 1022,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "7890:2:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_90_by_1",
                                            "typeString": "int_const 90"
                                          },
                                          "value": "90"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_90_by_1",
                                            "typeString": "int_const 90"
                                          }
                                        ],
                                        "expression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1017,
                                              "name": "teams",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 55,
                                              "src": "7868:5:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                                "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                              }
                                            },
                                            "id": 1019,
                                            "indexExpression": {
                                              "id": 1018,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1003,
                                              "src": "7874:1:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "7868:8:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Team_$21_storage",
                                              "typeString": "struct PirateRace.Team storage ref"
                                            }
                                          },
                                          "id": 1020,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "7877:8:2",
                                          "memberName": "distance",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 14,
                                          "src": "7868:17:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1021,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7886:3:2",
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1649,
                                        "src": "7868:21:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1023,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7868:25:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1024,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7894:3:2",
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1664,
                                    "src": "7868:29:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1026,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7868:34:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7848:54:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1028,
                              "nodeType": "ExpressionStatement",
                              "src": "7848:54:2"
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1006,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1003,
                                "src": "7809:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 1007,
                                  "name": "teams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 55,
                                  "src": "7813:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                    "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                  }
                                },
                                "id": 1008,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7819:6:2",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "7813:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7809:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1029,
                            "initializationExpression": {
                              "assignments": [
                                1003
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1003,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "7802:1:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1029,
                                  "src": "7794:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1002,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7794:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1005,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 1004,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7806:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7794:13:2"
                            },
                            "loopExpression": {
                              "expression": {
                                "id": 1011,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "7827:3:2",
                                "subExpression": {
                                  "id": 1010,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1003,
                                  "src": "7827:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1012,
                              "nodeType": "ExpressionStatement",
                              "src": "7827:3:2"
                            },
                            "nodeType": "ForStatement",
                            "src": "7789:113:2"
                          },
                          {
                            "expression": {
                              "id": 1032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1030,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 934,
                                "src": "7936:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "33",
                                "id": 1031,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7945:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              "src": "7936:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1033,
                            "nodeType": "ExpressionStatement",
                            "src": "7936:10:2"
                          }
                        ]
                      },
                      "id": 1035,
                      "nodeType": "IfStatement",
                      "src": "7550:407:2",
                      "trueBody": {
                        "id": 1001,
                        "nodeType": "Block",
                        "src": "7570:169:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 976,
                                    "name": "teams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55,
                                    "src": "7601:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                      "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                    }
                                  },
                                  "id": 978,
                                  "indexExpression": {
                                    "id": 977,
                                    "name": "teamId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 910,
                                    "src": "7607:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7601:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Team_$21_storage",
                                    "typeString": "struct PirateRace.Team storage ref"
                                  }
                                },
                                "id": 979,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "7615:5:2",
                                "memberName": "speed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12,
                                "src": "7601:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "hexValue": "32",
                                "id": 980,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7624:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "7601:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 982,
                            "nodeType": "ExpressionStatement",
                            "src": "7601:24:2"
                          },
                          {
                            "expression": {
                              "id": 988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 983,
                                    "name": "teams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55,
                                    "src": "7639:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                      "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                    }
                                  },
                                  "id": 985,
                                  "indexExpression": {
                                    "id": 984,
                                    "name": "teamId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 910,
                                    "src": "7645:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7639:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Team_$21_storage",
                                    "typeString": "struct PirateRace.Team storage ref"
                                  }
                                },
                                "id": 986,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "7653:7:2",
                                "memberName": "defense",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16,
                                "src": "7639:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "hexValue": "32",
                                "id": 987,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7664:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "7639:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 989,
                            "nodeType": "ExpressionStatement",
                            "src": "7639:26:2"
                          },
                          {
                            "expression": {
                              "id": 995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 990,
                                    "name": "teams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55,
                                    "src": "7679:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                      "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                    }
                                  },
                                  "id": 992,
                                  "indexExpression": {
                                    "id": 991,
                                    "name": "teamId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 910,
                                    "src": "7685:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7679:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Team_$21_storage",
                                    "typeString": "struct PirateRace.Team storage ref"
                                  }
                                },
                                "id": 993,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "7693:6:2",
                                "memberName": "attack",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 18,
                                "src": "7679:20:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "hexValue": "32",
                                "id": 994,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7703:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "7679:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 996,
                            "nodeType": "ExpressionStatement",
                            "src": "7679:25:2"
                          },
                          {
                            "expression": {
                              "id": 999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 997,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 934,
                                "src": "7718:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "32",
                                "id": 998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7727:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "7718:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1000,
                            "nodeType": "ExpressionStatement",
                            "src": "7718:10:2"
                          }
                        ]
                      }
                    },
                    "id": 1036,
                    "nodeType": "IfStatement",
                    "src": "7430:527:2",
                    "trueBody": {
                      "id": 972,
                      "nodeType": "Block",
                      "src": "7450:94:2",
                      "statements": [
                        {
                          "expression": {
                            "id": 966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 961,
                                  "name": "teams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 55,
                                  "src": "7478:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                    "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                  }
                                },
                                "id": 963,
                                "indexExpression": {
                                  "id": 962,
                                  "name": "teamId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 910,
                                  "src": "7484:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7478:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Team_$21_storage",
                                  "typeString": "struct PirateRace.Team storage ref"
                                }
                              },
                              "id": 964,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "7492:10:2",
                              "memberName": "totalMoney",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8,
                              "src": "7478:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "hexValue": "323030",
                              "id": 965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7506:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200_by_1",
                                "typeString": "int_const 200"
                              },
                              "value": "200"
                            },
                            "src": "7478:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 967,
                          "nodeType": "ExpressionStatement",
                          "src": "7478:31:2"
                        },
                        {
                          "expression": {
                            "id": 970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 968,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 934,
                              "src": "7523:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "31",
                              "id": 969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7532:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "7523:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 971,
                          "nodeType": "ExpressionStatement",
                          "src": "7523:10:2"
                        }
                      ]
                    }
                  },
                  "id": 1037,
                  "nodeType": "IfStatement",
                  "src": "7362:595:2",
                  "trueBody": {
                    "id": 957,
                    "nodeType": "Block",
                    "src": "7382:42:2",
                    "statements": []
                  }
                },
                {
                  "expression": {
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1038,
                          "name": "userScore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "7975:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Contribution_$26_storage_$",
                            "typeString": "mapping(address => struct PirateRace.Contribution storage ref)"
                          }
                        },
                        "id": 1041,
                        "indexExpression": {
                          "expression": {
                            "id": 1039,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7985:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7989:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7985:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7975:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contribution_$26_storage",
                          "typeString": "struct PirateRace.Contribution storage ref"
                        }
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7997:7:2",
                      "memberName": "actions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "7975:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8008:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7975:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1045,
                  "nodeType": "ExpressionStatement",
                  "src": "7975:34:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1046,
                      "name": "updateDistance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "8019:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8019:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "8019:16:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1050,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8061:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8065:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8061:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1052,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "8073:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 1054,
                          "indexExpression": {
                            "id": 1053,
                            "name": "teamId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 910,
                            "src": "8079:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8073:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8087:8:2",
                        "memberName": "teamName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "8073:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 1056,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 934,
                        "src": "8097:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1049,
                      "name": "MysteryBox",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1358,
                      "src": "8050:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8050:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1058,
                  "nodeType": "EmitStatement",
                  "src": "8045:59:2"
                }
              ]
            },
            "functionSelector": "1c7e9ed0",
            "id": 1060,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 905,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 904,
                  "name": "isGameStarted",
                  "nameLocations": [
                    "7003:13:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1235,
                  "src": "7003:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7003:13:2"
              },
              {
                "id": 907,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 906,
                  "name": "notInJail",
                  "nameLocations": [
                    "7017:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1292,
                  "src": "7017:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7017:9:2"
              }
            ],
            "name": "buyMysteryBox",
            "nameLocation": "6980:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6993:2:2"
            },
            "returnParameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7027:0:2"
            },
            "scope": 1365,
            "src": "6971:1140:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1095,
              "nodeType": "Block",
              "src": "8178:203:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1068,
                            "name": "userToTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "8196:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1071,
                          "indexExpression": {
                            "expression": {
                              "id": 1069,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8207:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8211:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8207:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8196:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 1072,
                            "name": "userToTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "8222:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1074,
                          "indexExpression": {
                            "id": 1073,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1062,
                            "src": "8233:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8222:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8196:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f742070757420736f6d656f6e65206f6e20616e6f74686572207465616d20696e206a61696c2e",
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8240:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6cc57430e7c02ddc42247858b1821fe5391e1bcc165d5f1e3cdc40fa6bcaf1cc",
                          "typeString": "literal_string \"Cannot put someone on another team in jail.\""
                        },
                        "value": "Cannot put someone on another team in jail."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6cc57430e7c02ddc42247858b1821fe5391e1bcc165d5f1e3cdc40fa6bcaf1cc",
                          "typeString": "literal_string \"Cannot put someone on another team in jail.\""
                        }
                      ],
                      "id": 1067,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8188:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8188:98:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1078,
                  "nodeType": "ExpressionStatement",
                  "src": "8188:98:2"
                },
                {
                  "expression": {
                    "id": 1083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1079,
                        "name": "jail",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "8296:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1081,
                      "indexExpression": {
                        "id": 1080,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1062,
                        "src": "8301:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8296:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8309:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8296:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1084,
                  "nodeType": "ExpressionStatement",
                  "src": "8296:17:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1086,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1062,
                        "src": "8335:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1087,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "8341:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 1091,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 1088,
                              "name": "userToTeam",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "8347:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1090,
                            "indexExpression": {
                              "id": 1089,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1062,
                              "src": "8358:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8347:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8341:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8365:8:2",
                        "memberName": "teamName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "8341:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 1085,
                      "name": "InJail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1344,
                      "src": "8328:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8328:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1094,
                  "nodeType": "EmitStatement",
                  "src": "8323:51:2"
                }
              ]
            },
            "functionSelector": "c01d373f",
            "id": 1096,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1065,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1064,
                  "name": "isCaptainOrFirstMate",
                  "nameLocations": [
                    "8157:20:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1279,
                  "src": "8157:20:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "8157:20:2"
              }
            ],
            "name": "putInJail",
            "nameLocation": "8126:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1062,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "8144:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "8136:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8136:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8135:14:2"
            },
            "returnParameters": {
              "id": 1066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8178:0:2"
            },
            "scope": 1365,
            "src": "8117:264:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1131,
              "nodeType": "Block",
              "src": "8452:212:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1104,
                            "name": "userToTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "8470:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1107,
                          "indexExpression": {
                            "expression": {
                              "id": 1105,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8481:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8485:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8481:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8470:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 1108,
                            "name": "userToTeam",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "8496:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1110,
                          "indexExpression": {
                            "id": 1109,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1098,
                            "src": "8507:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8496:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8470:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f742074616b6520736f6d656f6e65206f6e20616e6f74686572207465616d206f7574206f66206a61696c2e",
                        "id": 1112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8514:50:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d22b8c83db2dd8cb0ab403e044f42b6e0beb15bd2e41c6fc31e788ec959f8858",
                          "typeString": "literal_string \"Cannot take someone on another team out of jail.\""
                        },
                        "value": "Cannot take someone on another team out of jail."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d22b8c83db2dd8cb0ab403e044f42b6e0beb15bd2e41c6fc31e788ec959f8858",
                          "typeString": "literal_string \"Cannot take someone on another team out of jail.\""
                        }
                      ],
                      "id": 1103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8462:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8462:103:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1114,
                  "nodeType": "ExpressionStatement",
                  "src": "8462:103:2"
                },
                {
                  "expression": {
                    "id": 1119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1115,
                        "name": "jail",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "8575:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1117,
                      "indexExpression": {
                        "id": 1116,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1098,
                        "src": "8580:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8575:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8588:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "8575:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1120,
                  "nodeType": "ExpressionStatement",
                  "src": "8575:18:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1122,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1098,
                        "src": "8618:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1123,
                            "name": "teams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "8624:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                              "typeString": "struct PirateRace.Team storage ref[] storage ref"
                            }
                          },
                          "id": 1127,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 1124,
                              "name": "userToTeam",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "8630:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1126,
                            "indexExpression": {
                              "id": 1125,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1098,
                              "src": "8641:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8630:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8624:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Team_$21_storage",
                            "typeString": "struct PirateRace.Team storage ref"
                          }
                        },
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8648:8:2",
                        "memberName": "teamName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "8624:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 1121,
                      "name": "OutofJail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1350,
                      "src": "8608:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8608:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1130,
                  "nodeType": "EmitStatement",
                  "src": "8603:54:2"
                }
              ]
            },
            "functionSelector": "4079761e",
            "id": 1132,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1101,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1100,
                  "name": "isCaptainOrFirstMate",
                  "nameLocations": [
                    "8431:20:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1279,
                  "src": "8431:20:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "8431:20:2"
              }
            ],
            "name": "takeOutOfJail",
            "nameLocation": "8396:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1098,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "8418:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1132,
                  "src": "8410:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8410:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8409:14:2"
            },
            "returnParameters": {
              "id": 1102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8452:0:2"
            },
            "scope": 1365,
            "src": "8387:277:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1225,
              "nodeType": "Block",
              "src": "8718:609:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8736:11:2",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1138,
                            "name": "jail",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "8737:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1140,
                          "indexExpression": {
                            "id": 1139,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1134,
                            "src": "8742:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8737:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920696e206a61696c",
                        "id": 1142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8749:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_669a8e0cb7afae614577f225c19015486d542c7e49d3e17fd09c02970b4f5dd9",
                          "typeString": "literal_string \"already in jail\""
                        },
                        "value": "already in jail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_669a8e0cb7afae614577f225c19015486d542c7e49d3e17fd09c02970b4f5dd9",
                          "typeString": "literal_string \"already in jail\""
                        }
                      ],
                      "id": 1137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8728:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8728:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1144,
                  "nodeType": "ExpressionStatement",
                  "src": "8728:39:2"
                },
                {
                  "assignments": [
                    1146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1146,
                      "mutability": "mutable",
                      "name": "currentMoney",
                      "nameLocation": "8785:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1225,
                      "src": "8777:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1145,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8777:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1160,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 1149,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1134,
                            "src": "8813:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1147,
                            "name": "Qi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "8800:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1443",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8803:9:2",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1400,
                          "src": "8800:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8800:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "31653138",
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8819:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      "src": "8800:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 1155,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1134,
                            "src": "8840:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1153,
                            "name": "eQi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "8826:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1443",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8830:9:2",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1400,
                          "src": "8826:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8826:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "31653138",
                        "id": 1157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8846:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      "src": "8826:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8800:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8777:73:2"
                },
                {
                  "assignments": [
                    1162
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1162,
                      "mutability": "mutable",
                      "name": "originalMoney",
                      "nameLocation": "8868:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1225,
                      "src": "8860:21:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1161,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8860:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1167,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1163,
                        "name": "userScore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "8884:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Contribution_$26_storage_$",
                          "typeString": "mapping(address => struct PirateRace.Contribution storage ref)"
                        }
                      },
                      "id": 1165,
                      "indexExpression": {
                        "id": 1164,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "8894:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8884:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Contribution_$26_storage",
                        "typeString": "struct PirateRace.Contribution storage ref"
                      }
                    },
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8900:5:2",
                    "memberName": "money",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 23,
                    "src": "8884:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8860:45:2"
                },
                {
                  "assignments": [
                    1169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1169,
                      "mutability": "mutable",
                      "name": "teamId",
                      "nameLocation": "8923:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1225,
                      "src": "8915:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1168,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8915:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1173,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1170,
                      "name": "userToTeam",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "8932:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1172,
                    "indexExpression": {
                      "id": 1171,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1134,
                      "src": "8943:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8932:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8915:33:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1174,
                      "name": "currentMoney",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1146,
                      "src": "8963:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1175,
                          "name": "originalMoney",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1162,
                          "src": "8978:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "39",
                          "id": 1176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8992:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        },
                        "src": "8978:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 1178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8994:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "8978:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8963:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1224,
                  "nodeType": "IfStatement",
                  "src": "8959:361:2",
                  "trueBody": {
                    "id": 1223,
                    "nodeType": "Block",
                    "src": "8998:322:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1181,
                              "name": "jail",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "9012:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1183,
                            "indexExpression": {
                              "id": 1182,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1134,
                              "src": "9017:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9012:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9025:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "9012:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1186,
                        "nodeType": "ExpressionStatement",
                        "src": "9012:17:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1187,
                                "name": "teams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55,
                                "src": "9047:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                  "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                }
                              },
                              "id": 1189,
                              "indexExpression": {
                                "id": 1188,
                                "name": "teamId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1169,
                                "src": "9053:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9047:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Team_$21_storage",
                                "typeString": "struct PirateRace.Team storage ref"
                              }
                            },
                            "id": 1190,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9061:10:2",
                            "memberName": "totalMoney",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "9047:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1191,
                              "name": "originalMoney",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1162,
                              "src": "9074:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 1192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9090:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "9074:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9047:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1211,
                          "nodeType": "Block",
                          "src": "9183:61:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1209,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1204,
                                      "name": "teams",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 55,
                                      "src": "9201:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                        "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1206,
                                    "indexExpression": {
                                      "id": 1205,
                                      "name": "teamId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1169,
                                      "src": "9207:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9201:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Team_$21_storage",
                                      "typeString": "struct PirateRace.Team storage ref"
                                    }
                                  },
                                  "id": 1207,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "9215:10:2",
                                  "memberName": "totalMoney",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8,
                                  "src": "9201:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1208,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9228:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "9201:28:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1210,
                              "nodeType": "ExpressionStatement",
                              "src": "9201:28:2"
                            }
                          ]
                        },
                        "id": 1212,
                        "nodeType": "IfStatement",
                        "src": "9043:201:2",
                        "trueBody": {
                          "expression": {
                            "id": 1202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1195,
                                  "name": "teams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 55,
                                  "src": "9119:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                    "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                  }
                                },
                                "id": 1197,
                                "indexExpression": {
                                  "id": 1196,
                                  "name": "teamId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1169,
                                  "src": "9125:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9119:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Team_$21_storage",
                                  "typeString": "struct PirateRace.Team storage ref"
                                }
                              },
                              "id": 1198,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "9133:10:2",
                              "memberName": "totalMoney",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8,
                              "src": "9119:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "-=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1199,
                                "name": "originalMoney",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1162,
                                "src": "9147:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 1200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9163:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "9147:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9119:45:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1203,
                          "nodeType": "ExpressionStatement",
                          "src": "9119:45:2"
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1214,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1134,
                              "src": "9270:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1215,
                                  "name": "teams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 55,
                                  "src": "9276:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Team_$21_storage_$dyn_storage",
                                    "typeString": "struct PirateRace.Team storage ref[] storage ref"
                                  }
                                },
                                "id": 1219,
                                "indexExpression": {
                                  "baseExpression": {
                                    "id": 1216,
                                    "name": "userToTeam",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59,
                                    "src": "9282:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1218,
                                  "indexExpression": {
                                    "id": 1217,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1134,
                                    "src": "9293:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9282:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9276:23:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Team_$21_storage",
                                  "typeString": "struct PirateRace.Team storage ref"
                                }
                              },
                              "id": 1220,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9300:8:2",
                              "memberName": "teamName",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10,
                              "src": "9276:32:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 1213,
                            "name": "InJail",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1344,
                            "src": "9263:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (address,string memory)"
                            }
                          },
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9263:46:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1222,
                        "nodeType": "EmitStatement",
                        "src": "9258:51:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "1b6c3517",
            "id": 1226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkForgedPapers",
            "nameLocation": "8679:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1134,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "8705:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "8697:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8697:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8696:14:2"
            },
            "returnParameters": {
              "id": 1136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8718:0:2"
            },
            "scope": 1365,
            "src": "8670:657:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1234,
              "nodeType": "Block",
              "src": "9358:81:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1229,
                        "name": "gameStarted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "9376:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652067616d6520686173206e6f742073746172746564207965742e",
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9389:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7da374d84293717debef0c93228e27070a338d63227fa46cbabd663bac148fdd",
                          "typeString": "literal_string \"The game has not started yet.\""
                        },
                        "value": "The game has not started yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7da374d84293717debef0c93228e27070a338d63227fa46cbabd663bac148fdd",
                          "typeString": "literal_string \"The game has not started yet.\""
                        }
                      ],
                      "id": 1228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9368:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9368:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "9368:53:2"
                },
                {
                  "id": 1233,
                  "nodeType": "PlaceholderStatement",
                  "src": "9431:1:2"
                }
              ]
            },
            "id": 1235,
            "name": "isGameStarted",
            "nameLocation": "9342:13:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9355:2:2"
            },
            "src": "9333:106:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1251,
              "nodeType": "Block",
              "src": "9466:115:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1238,
                            "name": "captain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "9484:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 1243,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 1239,
                              "name": "userToTeam",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "9492:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1242,
                            "indexExpression": {
                              "expression": {
                                "id": 1240,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9503:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9507:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9503:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9492:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9484:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1244,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9519:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9523:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9519:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9484:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206361707461696e2063616e20646f20746869732e",
                        "id": 1247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9531:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f782200fbfb45f5a283a7846db1a9f864a9e8e5adb3c54ec71d40df65a5441f",
                          "typeString": "literal_string \"Only the captain can do this.\""
                        },
                        "value": "Only the captain can do this."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f782200fbfb45f5a283a7846db1a9f864a9e8e5adb3c54ec71d40df65a5441f",
                          "typeString": "literal_string \"Only the captain can do this.\""
                        }
                      ],
                      "id": 1237,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9476:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9476:87:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1249,
                  "nodeType": "ExpressionStatement",
                  "src": "9476:87:2"
                },
                {
                  "id": 1250,
                  "nodeType": "PlaceholderStatement",
                  "src": "9573:1:2"
                }
              ]
            },
            "id": 1252,
            "name": "isCaptain",
            "nameLocation": "9454:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9463:2:2"
            },
            "src": "9445:136:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1278,
              "nodeType": "Block",
              "src": "9619:180:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1255,
                              "name": "captain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72,
                              "src": "9637:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 1260,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 1256,
                                "name": "userToTeam",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59,
                                "src": "9645:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1259,
                              "indexExpression": {
                                "expression": {
                                  "id": 1257,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9656:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9660:6:2",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "9656:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9645:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9637:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1261,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9672:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9676:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9672:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9637:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1264,
                              "name": "firstMate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "9686:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 1269,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 1265,
                                "name": "userToTeam",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59,
                                "src": "9696:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1268,
                              "indexExpression": {
                                "expression": {
                                  "id": 1266,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9707:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9711:6:2",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "9707:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9696:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9686:33:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1270,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9723:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9727:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9723:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9686:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9637:96:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206361707461696e206f72206669727374206d6174652063616e20646f20746869732e",
                        "id": 1274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9735:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7230a2e053b24c082cb89e000e4f8644306d3c18f650a5af9cf3d8146d8b7e48",
                          "typeString": "literal_string \"Only the captain or first mate can do this.\""
                        },
                        "value": "Only the captain or first mate can do this."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7230a2e053b24c082cb89e000e4f8644306d3c18f650a5af9cf3d8146d8b7e48",
                          "typeString": "literal_string \"Only the captain or first mate can do this.\""
                        }
                      ],
                      "id": 1254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9629:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9629:152:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1276,
                  "nodeType": "ExpressionStatement",
                  "src": "9629:152:2"
                },
                {
                  "id": 1277,
                  "nodeType": "PlaceholderStatement",
                  "src": "9791:1:2"
                }
              ]
            },
            "id": 1279,
            "name": "isCaptainOrFirstMate",
            "nameLocation": "9596:20:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9616:2:2"
            },
            "src": "9587:212:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1291,
              "nodeType": "Block",
              "src": "9826:79:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9844:17:2",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1282,
                            "name": "jail",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "9845:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1285,
                          "indexExpression": {
                            "expression": {
                              "id": 1283,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9850:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9854:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9850:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9845:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973207573657220697320696e206a61696c2e",
                        "id": 1287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9863:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b647dd19d18ae1148cd1202bbc007d5240c735fb08887cb080d8804686c3a8f9",
                          "typeString": "literal_string \"This user is in jail.\""
                        },
                        "value": "This user is in jail."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b647dd19d18ae1148cd1202bbc007d5240c735fb08887cb080d8804686c3a8f9",
                          "typeString": "literal_string \"This user is in jail.\""
                        }
                      ],
                      "id": 1281,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9836:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9836:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1289,
                  "nodeType": "ExpressionStatement",
                  "src": "9836:51:2"
                },
                {
                  "id": 1290,
                  "nodeType": "PlaceholderStatement",
                  "src": "9897:1:2"
                }
              ]
            },
            "id": 1292,
            "name": "notInJail",
            "nameLocation": "9814:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9823:2:2"
            },
            "src": "9805:100:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "421f2322493a06d9f34e676ffa1c281ffb19c3e128ae5f8eee60ea3c83cdd8f6",
            "id": 1300,
            "name": "TeamJoin",
            "nameLocation": "9917:8:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1294,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "9934:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1300,
                  "src": "9926:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9926:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1296,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "teamName",
                  "nameLocation": "9947:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1300,
                  "src": "9940:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1295,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9940:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1298,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "money",
                  "nameLocation": "9965:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1300,
                  "src": "9957:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9957:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9925:46:2"
            },
            "src": "9911:61:2"
          },
          {
            "anonymous": false,
            "eventSelector": "24ede07b86b6e8aeea97ce363c9b62c5a79ed1b54e95d3b017d17f66c75bc1a3",
            "id": 1310,
            "name": "DistanceUpdated",
            "nameLocation": "9983:15:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1302,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "team0",
                  "nameLocation": "10007:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1310,
                  "src": "9999:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9999:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1304,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "team1",
                  "nameLocation": "10022:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1310,
                  "src": "10014:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10014:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1306,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "team2",
                  "nameLocation": "10037:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1310,
                  "src": "10029:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10029:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1308,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "team3",
                  "nameLocation": "10052:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1310,
                  "src": "10044:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10044:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9998:60:2"
            },
            "src": "9977:82:2"
          },
          {
            "anonymous": false,
            "eventSelector": "fdbb5b39cf560cd0a57d2342b964c7d29f734f63b301d6389a860883fccdf697",
            "id": 1316,
            "name": "EngineUpgraded",
            "nameLocation": "10070:14:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1312,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "10093:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1316,
                  "src": "10085:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10085:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1314,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "teamName",
                  "nameLocation": "10106:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1316,
                  "src": "10099:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1313,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10099:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10084:31:2"
            },
            "src": "10064:52:2"
          },
          {
            "anonymous": false,
            "eventSelector": "7ccb3dd8c961e6d97590c65c2cfb6296766d9b731ff7b6f73e59b0beb50ee2d4",
            "id": 1322,
            "name": "DefenseUpgraded",
            "nameLocation": "10127:15:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1318,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "10151:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1322,
                  "src": "10143:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10143:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1320,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "teamName",
                  "nameLocation": "10164:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1322,
                  "src": "10157:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1319,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10157:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10142:31:2"
            },
            "src": "10121:53:2"
          },
          {
            "anonymous": false,
            "eventSelector": "7c0725a32355c8362aaa495b37bdb3b9cfcc9fc46dbf2b0c85e7ccce4669e6b8",
            "id": 1328,
            "name": "AttackUpgraded",
            "nameLocation": "10185:14:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1324,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "10208:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1328,
                  "src": "10200:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10200:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1326,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "teamName",
                  "nameLocation": "10221:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1328,
                  "src": "10214:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1325,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10214:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10199:31:2"
            },
            "src": "10179:52:2"
          },
          {
            "anonymous": false,
            "eventSelector": "1070e59b5639f0799bd97e9aa418e32193db53c11a30e2badab45d1ac1f1e4e4",
            "id": 1338,
            "name": "CannonFired",
            "nameLocation": "10242:11:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1330,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "10262:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "10254:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10254:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1332,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shooter",
                  "nameLocation": "10275:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "10268:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1331,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10268:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1334,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "10291:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "10284:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1333,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10284:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1336,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hit",
                  "nameLocation": "10304:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "10299:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1335,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10299:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10253:55:2"
            },
            "src": "10236:73:2"
          },
          {
            "anonymous": false,
            "eventSelector": "3a20c27241f03f182fdea2523631cb8dbe89e8c84a05cdb19f6f804d58f8f3c7",
            "id": 1344,
            "name": "InJail",
            "nameLocation": "10320:6:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1340,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "10335:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1344,
                  "src": "10327:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10327:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1342,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "teamName",
                  "nameLocation": "10348:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1344,
                  "src": "10341:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1341,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10341:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10326:31:2"
            },
            "src": "10314:44:2"
          },
          {
            "anonymous": false,
            "eventSelector": "7c892458d566e30087de155713d0b373ee96b70e37b90d1f057abab145b40666",
            "id": 1350,
            "name": "OutofJail",
            "nameLocation": "10373:9:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1346,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "10391:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1350,
                  "src": "10383:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10383:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1348,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "teamName",
                  "nameLocation": "10404:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1350,
                  "src": "10397:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1347,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10397:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10382:31:2"
            },
            "src": "10367:47:2"
          },
          {
            "anonymous": false,
            "eventSelector": "963f55b912749794fc60e09989f975d99e32135ebdc74c70ce5ca23c86828a77",
            "id": 1358,
            "name": "MysteryBox",
            "nameLocation": "10425:10:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1352,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "10444:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1358,
                  "src": "10436:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10436:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1354,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "teamName",
                  "nameLocation": "10457:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1358,
                  "src": "10450:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1353,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10450:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1356,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "10475:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1358,
                  "src": "10467:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10467:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10435:47:2"
            },
            "src": "10419:64:2"
          },
          {
            "anonymous": false,
            "eventSelector": "793ce8f0c70b280a4c9c6008694f48260a4aa13d0a724bab8f18a592edfe5093",
            "id": 1364,
            "name": "FirstMate",
            "nameLocation": "10494:9:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1360,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "teamName",
                  "nameLocation": "10512:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1364,
                  "src": "10505:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1359,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10505:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1362,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "10530:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1364,
                  "src": "10522:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10522:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10504:31:2"
            },
            "src": "10488:48:2"
          }
        ],
        "scope": 1366,
        "src": "169:10370:2",
        "usedErrors": []
      }
    ],
    "src": "0:10542:2"
  },
  "bytecode": "",
  "bytecodeSha1": "3fed6183400cb7bfe98b69da1775f1b88eda4ac3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "PirateRace",
  "coverageMap": {
    "branches": {
      "0": {},
      "2": {
        "PirateRace.buyMysteryBox": {
          "90": [
            7094,
            7123,
            true
          ],
          "91": [
            7366,
            7380,
            false
          ],
          "92": [
            7434,
            7448,
            false
          ],
          "93": [
            7554,
            7568,
            false
          ]
        },
        "PirateRace.changeSettings": {
          "114": [
            2355,
            2374,
            true
          ],
          "115": [
            2404,
            2415,
            false
          ],
          "116": [
            2468,
            2479,
            false
          ],
          "117": [
            2527,
            2541,
            false
          ],
          "118": [
            2592,
            2605,
            false
          ],
          "119": [
            2655,
            2667,
            false
          ]
        },
        "PirateRace.checkForgedPapers": {
          "87": [
            8736,
            8747,
            true
          ],
          "88": [
            8963,
            8996,
            false
          ],
          "89": [
            9047,
            9091,
            false
          ]
        },
        "PirateRace.fireCannon": {
          "103": [
            9376,
            9387,
            true
          ],
          "104": [
            5835,
            5860,
            true
          ],
          "105": [
            5903,
            5939,
            true
          ],
          "106": [
            6107,
            6167,
            false
          ],
          "107": [
            6336,
            6350,
            false
          ],
          "108": [
            6507,
            6525,
            false
          ],
          "109": [
            6650,
            6677,
            false
          ]
        },
        "PirateRace.join": {
          "85": [
            2794,
            2815,
            true
          ],
          "86": [
            2942,
            2954,
            true
          ]
        },
        "PirateRace.nameTeam": {
          "112": [
            2089,
            2108,
            true
          ]
        },
        "PirateRace.pickCaptain": {
          "100": [
            3322,
            3341,
            true
          ]
        },
        "PirateRace.pickFirstMate": {
          "113": [
            3505,
            3547,
            true
          ]
        },
        "PirateRace.putInJail": {
          "110": [
            9637,
            9682,
            true
          ],
          "111": [
            8196,
            8238,
            true
          ]
        },
        "PirateRace.startRace": {
          "96": [
            1717,
            1736,
            true
          ],
          "97": [
            1793,
            1805,
            true
          ]
        },
        "PirateRace.takeOutOfJail": {
          "94": [
            8470,
            8512,
            true
          ]
        },
        "PirateRace.updateDistance": {
          "98": [
            3997,
            4028,
            false
          ],
          "99": [
            4032,
            4057,
            false
          ]
        },
        "PirateRace.upgradeAttack": {
          "101": [
            5383,
            5412,
            true
          ]
        },
        "PirateRace.upgradeDefense": {
          "102": [
            4893,
            4922,
            true
          ]
        },
        "PirateRace.upgradeEngine": {
          "95": [
            4408,
            4437,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "2": {
        "PirateRace.buyMysteryBox": {
          "12": [
            7086,
            7166
          ],
          "13": [
            7176,
            7205
          ],
          "14": [
            7478,
            7509
          ],
          "15": [
            7523,
            7533
          ],
          "16": [
            7601,
            7625
          ],
          "17": [
            7639,
            7665
          ],
          "18": [
            7679,
            7704
          ],
          "19": [
            7718,
            7728
          ],
          "20": [
            7848,
            7902
          ],
          "21": [
            7827,
            7830
          ],
          "22": [
            7936,
            7946
          ],
          "23": [
            7975,
            8009
          ],
          "24": [
            8019,
            8035
          ],
          "25": [
            8045,
            8104
          ]
        },
        "PirateRace.changeSettings": {
          "79": [
            2347,
            2390
          ],
          "80": [
            2420,
            2454
          ],
          "81": [
            2484,
            2513
          ],
          "82": [
            2543,
            2578
          ],
          "83": [
            2608,
            2641
          ],
          "84": [
            2671,
            2702
          ]
        },
        "PirateRace.checkForgedPapers": {
          "7": [
            8728,
            8767
          ],
          "8": [
            9012,
            9029
          ],
          "9": [
            9119,
            9164
          ],
          "10": [
            9201,
            9229
          ],
          "11": [
            9258,
            9309
          ]
        },
        "PirateRace.fireCannon": {
          "60": [
            5827,
            5885
          ],
          "61": [
            5895,
            5968
          ],
          "62": [
            6169,
            6182
          ],
          "63": [
            6225,
            6290
          ],
          "64": [
            6352,
            6366
          ],
          "65": [
            6541,
            6613
          ],
          "66": [
            6679,
            6735
          ],
          "67": [
            6764,
            6774
          ],
          "68": [
            6803,
            6837
          ],
          "69": [
            6847,
            6863
          ],
          "70": [
            6873,
            6958
          ]
        },
        "PirateRace.join": {
          "0": [
            2786,
            2836
          ],
          "1": [
            2934,
            2998
          ],
          "2": [
            3009,
            3042
          ],
          "3": [
            3052,
            3081
          ],
          "4": [
            3091,
            3122
          ],
          "5": [
            3132,
            3167
          ],
          "6": [
            3177,
            3233
          ]
        },
        "PirateRace.nameTeam": {
          "74": [
            2081,
            2147
          ],
          "75": [
            2157,
            2190
          ]
        },
        "PirateRace.pickCaptain": {
          "46": [
            3314,
            3379
          ],
          "47": [
            3389,
            3421
          ]
        },
        "PirateRace.pickFirstMate": {
          "76": [
            3497,
            3584
          ],
          "77": [
            3594,
            3628
          ],
          "78": [
            3638,
            3699
          ]
        },
        "PirateRace.putInJail": {
          "71": [
            8188,
            8286
          ],
          "72": [
            8296,
            8313
          ],
          "73": [
            8323,
            8374
          ]
        },
        "PirateRace.startRace": {
          "35": [
            1709,
            1775
          ],
          "36": [
            1785,
            1831
          ],
          "37": [
            1841,
            1859
          ],
          "38": [
            1926,
            1944
          ],
          "39": [
            1907,
            1910
          ],
          "40": [
            1964,
            1993
          ]
        },
        "PirateRace.takeOutOfJail": {
          "26": [
            8462,
            8565
          ],
          "27": [
            8575,
            8593
          ],
          "28": [
            8603,
            8657
          ]
        },
        "PirateRace.updateDistance": {
          "41": [
            3931,
            3979
          ],
          "42": [
            4077,
            4103
          ],
          "43": [
            3848,
            3851
          ],
          "44": [
            4137,
            4166
          ],
          "45": [
            4176,
            4272
          ]
        },
        "PirateRace.upgradeAttack": {
          "48": [
            5375,
            5452
          ],
          "49": [
            5471,
            5529
          ],
          "50": [
            5539,
            5589
          ],
          "51": [
            5608,
            5642
          ],
          "52": [
            5652,
            5668
          ],
          "53": [
            5678,
            5733
          ]
        },
        "PirateRace.upgradeDefense": {
          "54": [
            4885,
            4963
          ],
          "55": [
            4982,
            5040
          ],
          "56": [
            5050,
            5102
          ],
          "57": [
            5121,
            5155
          ],
          "58": [
            5165,
            5181
          ],
          "59": [
            5191,
            5247
          ]
        },
        "PirateRace.upgradeEngine": {
          "29": [
            4400,
            4477
          ],
          "30": [
            4496,
            4554
          ],
          "31": [
            4564,
            4612
          ],
          "32": [
            4631,
            4665
          ],
          "33": [
            4675,
            4691
          ],
          "34": [
            4701,
            4756
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.1/IERC20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "169:10370:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2739:501;;;;;;:::i;:::-;;:::i;:::-;;964:43;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;964:43:2;;;;;;-1:-1:-1;;;;;363:32:3;;;345:51;;333:2;318:18;964:43:2;;;;;;;;8670:657;;;;;;:::i;:::-;;:::i;6971:1140::-;;;:::i;908:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;950:25:3;;;1006:2;991:18;;984:34;;;;923:18;908:50:2;776:248:3;787:19:2;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;8387:277::-;;;;;;:::i;:::-;;:::i;1013:45::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1013:45:2;;;4285:478;;;:::i;813:46::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2259:25:3;;;2247:2;2232:18;813:46:2;2113:177:3;1671:329:2;;;:::i;3753:526::-;;;:::i;3246:182::-;;;;;;:::i;:::-;;:::i;5260:480::-;;;:::i;603:69::-;;;;;;;;-1:-1:-1;;;;;603:69:2;;;480:20;;;;;-1:-1:-1;;;;;480:20:2;;;865:37;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2942:14:3;;2935:22;2917:41;;2905:2;2890:18;865:37:2;2777:187:3;4769:485:2;;;:::i;5746:1219::-;;;;;;:::i;:::-;;:::i;8117:264::-;;;;;;:::i;:::-;;:::i;536:31::-;;;;;;2006:191;;;;;;:::i;:::-;;:::i;3434:272::-;;;;;;:::i;:::-;;:::i;506:24::-;;;:::i;:::-;;;;;;;:::i;2203:506::-;;;;;;:::i;:::-;;:::i;678:70::-;;;;;-1:-1:-1;;;;;678:70:2;;;2739:501;2803:5;:12;2794:21;;2786:50;;;;-1:-1:-1;;;2786:50:2;;5051:2:3;2786:50:2;;;5033:21:3;5090:2;5070:18;;;5063:30;-1:-1:-1;;;5109:18:3;;;5102:46;5165:18;;2786:50:2;;;;;;;;;2894:3;;;:25;;-1:-1:-1;;;2894:25:2;;2908:10;2894:25;;;345:51:3;;;;2846:13:2;;2920:4;;-1:-1:-1;;;;;2894:3:2;;:13;;318:18:3;;2894:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:30;;;;:::i;:::-;2862:2;;:24;;-1:-1:-1;;;2862:24:2;;2875:10;2862:24;;;345:51:3;2887:4:2;;2862:2;;;-1:-1:-1;;;;;2862:2:2;;:12;;318:18:3;;2862:24:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:29;;;;:::i;:::-;:62;;;;:::i;:::-;2846:78;;2951:3;2942:5;:12;;2934:64;;;;-1:-1:-1;;;2934:64:2;;6104:2:3;2934:64:2;;;6086:21:3;6143:2;6123:18;;;6116:30;6182:34;6162:18;;;6155:62;-1:-1:-1;;;6233:18:3;;;6226:37;6280:19;;2934:64:2;5902:403:3;2934:64:2;3037:5;3009;3015:6;3009:13;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:33;;;;;;;:::i;:::-;;;;;;;;3080:1;3052:5;3058:6;3052:13;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:29;;;;;;;:::i;:::-;;;;-1:-1:-1;;3102:10:2;3091:22;;;;:10;:22;;;;;;;;:31;;;3132:9;:21;;;;;:35;;;3203:5;:13;;3182:51;;3102:10;3203:5;3116:6;;3203:13;;;;;;:::i;:::-;;;;;;;;;;;:22;;3227:5;3182:51;;;;;;;;:::i;:::-;;;;;;;;2776:464;2739:501;:::o;8670:657::-;-1:-1:-1;;;;;8737:10:2;;;;;;:4;:10;;;;;;;;8736:11;8728:39;;;;-1:-1:-1;;;8728:39:2;;8330:2:3;8728:39:2;;;8312:21:3;8369:2;8349:18;;;8342:30;-1:-1:-1;;;8388:18:3;;;8381:45;8443:18;;8728:39:2;8128:339:3;8728:39:2;8826:3;;;:19;;-1:-1:-1;;;8826:19:2;;-1:-1:-1;;;;;363:32:3;;;8826:19:2;;;345:51:3;;;;8777:20:2;;8846:4;;8826:3;;:13;;318:18:3;;8826:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:24;;;;:::i;:::-;8800:2;;:18;;-1:-1:-1;;;8800:18:2;;-1:-1:-1;;;;;363:32:3;;;8800:18:2;;;345:51:3;8819:4:2;;8800:2;;;;;:12;;318:18:3;;8800::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:23;;;;:::i;:::-;:50;;;;:::i;:::-;-1:-1:-1;;;;;8884:15:2;;8860:21;8884:15;;;:9;:15;;;;;;;;:21;8932:10;:16;;;;;;;8777:73;;-1:-1:-1;8884:21:2;;8932:16;8994:2;;8978:15;;8884:21;;8978:15;:::i;:::-;:18;;;;:::i;:::-;8963:12;:33;8959:361;;;-1:-1:-1;;;;;9012:10:2;;;;;;:4;:10;;;;;:17;;-1:-1:-1;;9012:17:2;9025:4;9012:17;;;9074;:13;9090:1;9074:17;:::i;:::-;9047:5;9053:6;9047:13;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:44;9043:201;;;9147:17;:13;9163:1;9147:17;:::i;:::-;9119:5;9125:6;9119:13;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:45;;;;;;;:::i;:::-;;;;-1:-1:-1;9043:201:2;;-1:-1:-1;9043:201:2;;9228:1;9201:5;9207:6;9201:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:28;9043:201;-1:-1:-1;;;;;9282:16:2;;;;;;:10;:16;;;;;;9276:5;:23;;9263:46;;9270:4;;9276:5;:23;;;;;;:::i;:::-;;;;;;;;;;;:32;;9263:46;;;;;;;:::i;:::-;;;;;;;;8959:361;8718:609;;;8670:657;:::o;6971:1140::-;9376:11;;;;9368:53;;;;-1:-1:-1;;;9368:53:2;;;;;;;:::i;:::-;9850:10:::1;9845:16;::::0;;;:4:::1;:16;::::0;;;;;::::1;;9844:17;9836:51;;;;-1:-1:-1::0;;;9836:51:2::1;;;;;;;:::i;:::-;7065:10:::2;7037:14;7054:22:::0;;;:10:::2;:22;::::0;;;;;7094:5:::2;:13:::0;;7122:1:::2;::::0;7094:5;7054:22;;7094:13;::::2;;;;;:::i;:::-;;;;;;;;;;;:24;;;:29;;7086:80;;;::::0;-1:-1:-1;;;7086:80:2;;10015:2:3;7086:80:2::2;::::0;::::2;9997:21:3::0;10054:2;10034:18;;;10027:30;10093:34;10073:18;;;10066:62;-1:-1:-1;;;10144:18:3;;;10137:36;10190:19;;7086:80:2::2;9813:402:3::0;7086:80:2::2;7204:1;7176:5;7182:6;7176:13;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:29;;;;;;;:::i;:::-;;;;;;;;7224:14;7252:17:::0;7340:3:::2;7307:15;7324:10;7290:45;;;;;;;;10377:19:3::0;;;10434:2;10430:15;-1:-1:-1;;10426:53:3;10421:2;10412:12;;10405:75;10505:2;10496:12;;10220:294;7290:45:2::2;;;;;;;;;;;;;7280:56;;;;;;7272:65;;:71;;;;:::i;:::-;7252:91;;7378:2;7366:9;:14;7362:595;;7446:2;7434:9;:14;7430:527;;;7506:3;7478:5;7484:6;7478:13;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;7532:1:2::2;::::0;-1:-1:-1;7430:527:2::2;::::0;-1:-1:-1;7430:527:2::2;;7566:2;7554:9;:14;7550:407;;;7624:1;7601:5;7607:6;7601:13;;;;;;;;:::i;:::-;;;;;;;;;;;:19;;;:24;;;;;;;:::i;:::-;;;;;;;;7664:1;7639:5;7645:6;7639:13;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;:26;;;;;;;:::i;:::-;;;;;;;;7703:1;7679:5;7685:6;7679:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;:25;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;7727:1:2::2;::::0;-1:-1:-1;7550:407:2::2;::::0;-1:-1:-1;7550:407:2::2;;7794:9;7789:113;7813:5;:12:::0;7809:16;::::2;7789:113;;;7868:34;7898:3;7868:25;7890:2;7868:5;7874:1;7868:8;;;;;;;;:::i;:::-;;;;;;;;;;;:17;;;:21;;:25;;;;:::i;:::-;:29:::0;::::2;:34::i;:::-;7848:5;7854:1;7848:8;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;:17:::2;:8;::::0;;::::2;;:17;:54:::0;7827:3;::::2;::::0;::::2;:::i;:::-;;;;7789:113;;;;7945:1;7936:10;;7550:407;7985:10;7975:21;::::0;;;:9:::2;:21;::::0;;;;8008:1:::2;7975:29:::0;;::::2;:34:::0;;8008:1;;7975:29;;:34:::2;::::0;8008:1;;7975:34:::2;:::i;:::-;::::0;;;-1:-1:-1;8019:16:2::2;::::0;-1:-1:-1;8019:14:2::2;:16::i;:::-;8050:54;8061:10;8073:5;8079:6;8073:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;8097:6;8050:54;;;;;;;;:::i;:::-;;;;;;;;7027:1084;;;6971:1140::o:0;787:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;787:19:2;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8387:277::-;9672:10;9637:31;9645:22;;;:10;:22;;;;;;;;;9637:31;;:7;:31;;;;;;-1:-1:-1;;;;;9637:31:2;:45;;:96;;-1:-1:-1;9723:10:2;9686:33;9696:22;;;:10;:22;;;;;;;;;9686:33;;:9;:33;;;;;;-1:-1:-1;;;;;9686:33:2;:47;9637:96;9629:152;;;;-1:-1:-1;;;9629:152:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;8496:16:2;::::1;;::::0;;;:10:::1;:16;::::0;;;;;;8481:10:::1;8470:22:::0;;;;;:42:::1;8462:103;;;::::0;-1:-1:-1;;;8462:103:2;;11390:2:3;8462:103:2::1;::::0;::::1;11372:21:3::0;11429:2;11409:18;;;11402:30;11468:34;11448:18;;;11441:62;-1:-1:-1;;;11519:18:3;;;11512:46;11575:19;;8462:103:2::1;11188:412:3::0;8462:103:2::1;-1:-1:-1::0;;;;;8575:10:2;::::1;8588:5;8575:10:::0;;;:4:::1;:10;::::0;;;;;;;:18;;-1:-1:-1;;8575:18:2::1;::::0;;8630:10:::1;:16:::0;;;;;;8624:5:::1;:23:::0;;8608:49:::1;::::0;8580:4;;8624:5;:23;::::1;;;;;:::i;:::-;;;;;;;;;;;:32;;8608:49;;;;;;;:::i;:::-;;;;;;;;8387:277:::0;:::o;4285:478::-;9376:11;;;;9368:53;;;;-1:-1:-1;;;9368:53:2;;;;;;;:::i;:::-;9850:10:::1;9845:16;::::0;;;:4:::1;:16;::::0;;;;;::::1;;9844:17;9836:51;;;;-1:-1:-1::0;;;9836:51:2::1;;;;;;;:::i;:::-;4379:10:::2;4351:14;4368:22:::0;;;:10:::2;:22;::::0;;;;;4408:5:::2;:13:::0;;4436:1:::2;::::0;4408:5;4368:22;;4408:13;::::2;;;;;:::i;:::-;;;;;;;;;;;:24;;;:29;;4400:77;;;::::0;-1:-1:-1;;;4400:77:2;;11807:2:3;4400:77:2::2;::::0;::::2;11789:21:3::0;11846:2;11826:18;;;11819:30;11885:34;11865:18;;;11858:62;-1:-1:-1;;;11936:18:3;;;11929:33;11979:19;;4400:77:2::2;11605:399:3::0;4400:77:2::2;4523:31;4552:1;4523:5;4529:6;4523:13;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;::::2;::::0;;::::2;;:24:::0;;:28:::2;:31::i;:::-;4496:5;4502:6;4496:13;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;:58;;;;4586:26;4610:1;4586:5;4592:6;4586:13;;;;;;;;:::i;:::-;;;;;;;;;;;:19;;;:23;;:26;;;;:::i;:::-;4564:5;4570:6;4564:13;;;;;;;;:::i;:::-;;;;;;;;;;;:19;;:48;;;;4664:1;4631:9;:21;4641:10;-1:-1:-1::0;;;;;4631:21:2::2;-1:-1:-1::0;;;;;4631:21:2::2;;;;;;;;;;;;:29;;;:34;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;4675:16:2::2;::::0;-1:-1:-1;4675:14:2::2;:16::i;:::-;4706:50;4721:10;4733:5;4739:6;4733:13;;;;;;;;:::i;1671:329::-:0;1731:5;;-1:-1:-1;;;;;1731:5:2;1717:10;:19;1709:66;;;;-1:-1:-1;;;1709:66:2;;12211:2:3;1709:66:2;;;12193:21:3;12250:2;12230:18;;;12223:30;12289:34;12269:18;;;12262:62;-1:-1:-1;;;12340:18:3;;;12333:32;12382:19;;1709:66:2;12009:398:3;1709:66:2;1794:11;;;;1793:12;1785:46;;;;-1:-1:-1;;;1785:46:2;;12614:2:3;1785:46:2;;;12596:21:3;12653:2;12633:18;;;12626:30;-1:-1:-1;;;12672:18:3;;;12665:51;12733:18;;1785:46:2;12412:345:3;1785:46:2;1841:11;:18;;-1:-1:-1;;1841:18:2;1855:4;1841:18;;;:11;1869:86;1893:5;:12;1889:16;;1869:86;;;1943:1;1926:5;1932:1;1926:8;;;;;;;;:::i;:::-;;;;;;;;;:14;:8;;;;;:14;:18;1907:3;;;;:::i;:::-;;;;1869:86;;;-1:-1:-1;1978:15:2;1964:11;:29;1671:329::o;3753:526::-;9376:11;;;;9368:53;;;;-1:-1:-1;;;9368:53:2;;;;;;;:::i;:::-;3815:9:::1;3810:318;3834:5;:12:::0;3830:16;::::1;3810:318;;;3867:18;3906:11;;3888:15;:29;;;;:::i;:::-;3867:50;;3969:10;3952:5;3958:1;3952:8;;;;;;;;:::i;:::-;;;;;;;;;;;:14;;;:27;;;;:::i;:::-;3931:5;3937:1;3931:8;;;;;;;;:::i;:::-;;;;;;;;;;;:17;;;:48;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4018:10:2::1;::::0;3997:5:::1;:8:::0;;4003:1;;3997:8;::::1;;;;;:::i;:::-;;;;;;;;;;;:17;;;:31;;:60;;;;;4038:6;4032:20;;;;;:::i;:::-;:25:::0;;-1:-1:-1;3997:60:2::1;3993:125;;;4086:5;4092:1;4086:8;;;;;;;;:::i;:::-;;;;;;;;;;;:17;;4077:6;:26;;;;;;:::i;:::-;;3993:125;-1:-1:-1::0;3848:3:2;::::1;::::0;::::1;:::i;:::-;;;;3810:318;;;;4151:15;4137:11;:29;;;;4181:91;4197:5;4203:1;4197:8;;;;;;;;:::i;:::-;;;;;;;;;;;:17;;;4216:5;4222:1;4216:8;;;;;;;;:::i;:::-;;;;;;;;;;;:17;;;4235:5;4241:1;4235:8;;;;;;;;:::i;:::-;;;;;;;;;;;:17;;;4254:5;4260:1;4254:8;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;:17:::1;:8;::::0;;::::1;;:17;::::0;4181:91:::1;::::0;;15154:25:3;;;15195:18;;;15188:34;;;;15238:18;;15231:34;15296:2;15281:18;;15274:34;15141:3;15126:19;4181:91:2::1;;;;;;;3753:526::o:0;3246:182::-;3336:5;;-1:-1:-1;;;;;3336:5:2;3322:10;:19;3314:65;;;;-1:-1:-1;;;3314:65:2;;15521:2:3;3314:65:2;;;15503:21:3;15560:2;15540:18;;;15533:30;15599:34;15579:18;;;15572:62;-1:-1:-1;;;15650:18:3;;;15643:31;15691:19;;3314:65:2;15319:397:3;3314:65:2;-1:-1:-1;;;;;3397:16:2;3389:25;3397:16;;;:10;:16;;;;;;;;;3389:25;;:7;:25;;;;;:32;;-1:-1:-1;;;;;;3389:32:2;;;;;;-1:-1:-1;3246:182:2:o;5260:480::-;9376:11;;;;9368:53;;;;-1:-1:-1;;;9368:53:2;;;;;;;:::i;:::-;9850:10:::1;9845:16;::::0;;;:4:::1;:16;::::0;;;;;::::1;;9844:17;9836:51;;;;-1:-1:-1::0;;;9836:51:2::1;;;;;;;:::i;:::-;5354:10:::2;5326:14;5343:22:::0;;;:10:::2;:22;::::0;;;;;5383:5:::2;:13:::0;;5411:1:::2;::::0;5383:5;5343:22;;5383:13;::::2;;;;;:::i;:::-;;;;;;;;;;;:24;;;:29;;5375:77;;;::::0;-1:-1:-1;;;5375:77:2;;15923:2:3;5375:77:2::2;::::0;::::2;15905:21:3::0;15962:2;15942:18;;;15935:30;16001:34;15981:18;;;15974:62;-1:-1:-1;;;16052:18:3;;;16045:33;16095:19;;5375:77:2::2;15721:399:3::0;5375:77:2::2;5498:31;5527:1;5498:5;5504:6;5498:13;;;;;;;;:::i;:31::-;5471:5;5477:6;5471:13;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;:58;;;;5562:27;5587:1;5562:5;5568:6;5562:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;:24;;:27;;;;:::i;:::-;5539:5;5545:6;5539:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;:50;;;;5641:1;5608:9;:21;5618:10;-1:-1:-1::0;;;;;5608:21:2::2;-1:-1:-1::0;;;;;5608:21:2::2;;;;;;;;;;;;:29;;;:34;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;5652:16:2::2;::::0;-1:-1:-1;5652:14:2::2;:16::i;:::-;5683:50;5698:10;5710:5;5716:6;5710:13;;;;;;;;:::i;4769:485::-:0;9376:11;;;;9368:53;;;;-1:-1:-1;;;9368:53:2;;;;;;;:::i;:::-;9850:10:::1;9845:16;::::0;;;:4:::1;:16;::::0;;;;;::::1;;9844:17;9836:51;;;;-1:-1:-1::0;;;9836:51:2::1;;;;;;;:::i;:::-;4864:10:::2;4836:14;4853:22:::0;;;:10:::2;:22;::::0;;;;;4893:5:::2;:13:::0;;4921:1:::2;::::0;4893:5;4853:22;;4893:13;::::2;;;;;:::i;:::-;;;;;;;;;;;:24;;;:29;;4885:78;;;::::0;-1:-1:-1;;;4885:78:2;;16327:2:3;4885:78:2::2;::::0;::::2;16309:21:3::0;16366:2;16346:18;;;16339:30;16405:34;16385:18;;;16378:62;-1:-1:-1;;;16456:18:3;;;16449:34;16500:19;;4885:78:2::2;16125:400:3::0;4885:78:2::2;5009:31;5038:1;5009:5;5015:6;5009:13;;;;;;;;:::i;:31::-;4982:5;4988:6;4982:13;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;:58;;;;5074:28;5100:1;5074:5;5080:6;5074:13;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;:25;;:28;;;;:::i;:::-;5050:5;5056:6;5050:13;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;:52;;;;5154:1;5121:9;:21;5131:10;-1:-1:-1::0;;;;;5121:21:2::2;-1:-1:-1::0;;;;;5121:21:2::2;;;;;;;;;;;;:29;;;:34;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;5165:16:2::2;::::0;-1:-1:-1;5165:14:2::2;:16::i;:::-;5196:51;5212:10;5224:5;5230:6;5224:13;;;;;;;;:::i;5746:1219::-:0;9376:11;;;;9368:53;;;;-1:-1:-1;;;9368:53:2;;;;;;;:::i;:::-;9850:10:::1;9845:16;::::0;;;:4:::1;:16;::::0;;;;;::::1;;9844:17;9836:51;;;;-1:-1:-1::0;;;9836:51:2::1;;;;;;;:::i;:::-;5848:5:::2;:12:::0;5835:25;::::2;5827:58;;;::::0;-1:-1:-1;;;5827:58:2;;16732:2:3;5827:58:2::2;::::0;::::2;16714:21:3::0;16771:2;16751:18;;;16744:30;-1:-1:-1;;;16790:18:3;;;16783:50;16850:18;;5827:58:2::2;16530:344:3::0;5827:58:2::2;5928:10;5917:22;::::0;;;:10:::2;:22;::::0;;;;;5903:36;;5895:73:::2;;;::::0;-1:-1:-1;;;5895:73:2;;17081:2:3;5895:73:2::2;::::0;::::2;17063:21:3::0;17120:2;17100:18;;;17093:30;17159:26;17139:18;;;17132:54;17203:18;;5895:73:2::2;16879:348:3::0;5895:73:2::2;6015:10;5987:14;6004:22:::0;;;:10:::2;:22;::::0;;;;;6142:5:::2;:17:::0;;6004:22;;5987:14;6082:2:::2;::::0;6142:5;6148:10;;6142:17;::::2;;;;;:::i;:::-;;;;;;;;;;;:25;;;6119:5;6125:6;6119:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;6107:9;:32;;;;:::i;:::-;:60;6104:186;;;-1:-1:-1::0;6181:1:2::2;6104:186;;;6265:5;6271:10;6265:17;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;;6242:5;6248:6;6242:13;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;6237:2;:25;;;;:::i;:::-;:53;;;;:::i;:::-;6225:65;;6104:186;6348:2;6336:9;:14;6333:33;;;-1:-1:-1::0;6364:2:2::2;6333:33;6404:14;6489:3;6456:15;6473:10;6439:45;;;;;;;;10377:19:3::0;;;10434:2;10430:15;-1:-1:-1;;10426:53:3;10421:2;10412:12;;10405:75;10505:2;10496:12;;10220:294;6439:45:2::2;;;;;;;;;;;;;6429:56;;;;;;6421:65;;:71;;;;:::i;:::-;6404:88;;6516:9;6507:6;:18;6503:282;;;6570:43;6609:3;6570:34;6601:2;6570:5;6576:10;6570:17;;;;;;;;:::i;:43::-;6541:5;6547:10;6541:17;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;:72;;;;6676:1;6650:5;6656:10;6650:17;;;;;;;;:::i;:::-;;;;;;;;;;;:23;;;:27;6646:89;;;6705:30;6733:1;6705:5;6711:10;6705:17;;;;;;;;:::i;:::-;;;;;;;;;;;:23;;;:27;;:30;;;;:::i;:::-;6679:5;6685:10;6679:17;;;;;;;;:::i;:::-;;;;;;;;;;;:23;;:56;;;;6646:89;6770:4;6764:10;;6503:282;6813:10;6803:21;::::0;;;:9:::2;:21;::::0;;;;6836:1:::2;6803:29:::0;;::::2;:34:::0;;6836:1;;6803:29;;:34:::2;::::0;6836:1;;6803:34:::2;:::i;:::-;::::0;;;-1:-1:-1;6847:16:2::2;::::0;-1:-1:-1;6847:14:2::2;:16::i;:::-;6878:80;6890:10;6902:5;6908:6;6902:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;6926:5;6932:10;6926:17;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;6954:3;6878:80;;;;;;;;;:::i;:::-;;;;;;;;5817:1148;;;;5746:1219:::0;:::o;8117:264::-;9672:10;9637:31;9645:22;;;:10;:22;;;;;;;;;9637:31;;:7;:31;;;;;;-1:-1:-1;;;;;9637:31:2;:45;;:96;;-1:-1:-1;9723:10:2;9686:33;9696:22;;;:10;:22;;;;;;;;;9686:33;;:9;:33;;;;;;-1:-1:-1;;;;;9686:33:2;:47;9637:96;9629:152;;;;-1:-1:-1;;;9629:152:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;8222:16:2;::::1;;::::0;;;:10:::1;:16;::::0;;;;;;8207:10:::1;8196:22:::0;;;;;:42:::1;8188:98;;;::::0;-1:-1:-1;;;8188:98:2;;18012:2:3;8188:98:2::1;::::0;::::1;17994:21:3::0;18051:2;18031:18;;;18024:30;18090:34;18070:18;;;18063:62;-1:-1:-1;;;18141:18:3;;;18134:41;18192:19;;8188:98:2::1;17810:407:3::0;8188:98:2::1;-1:-1:-1::0;;;;;8296:10:2;::::1;;::::0;;;:4:::1;:10;::::0;;;;;;;:17;;-1:-1:-1;;8296:17:2::1;8309:4;8296:17;::::0;;8347:10:::1;:16:::0;;;;;;8341:5:::1;:23:::0;;8328:46:::1;::::0;8301:4;;8341:5;:23;::::1;;;;;:::i;2006:191::-:0;2103:5;;-1:-1:-1;;;;;2103:5:2;2089:10;:19;2081:66;;;;-1:-1:-1;;;2081:66:2;;18424:2:3;2081:66:2;;;18406:21:3;18463:2;18443:18;;;18436:30;18502:34;18482:18;;;18475:62;-1:-1:-1;;;18553:18:3;;;18546:32;18595:19;;2081:66:2;18222:398:3;2081:66:2;2182:8;2157:5;2163:6;2157:13;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;:33;;;;;;:::i;:::-;;2006:191;;:::o;3434:272::-;9519:10;9484:31;9492:22;;;:10;:22;;;;;;;;;9484:31;;:7;:31;;;;;;-1:-1:-1;;;;;9484:31:2;:45;9476:87;;;;-1:-1:-1;;;9476:87:2;;20184:2:3;9476:87:2;;;20166:21:3;20223:2;20203:18;;;20196:30;20262:31;20242:18;;;20235:59;20311:18;;9476:87:2;19982:353:3;9476:87:2;-1:-1:-1;;;;;3531:16:2;::::1;;::::0;;;:10:::1;:16;::::0;;;;;;3516:10:::1;3505:22:::0;;;;;:42:::1;3497:87;;;::::0;-1:-1:-1;;;3497:87:2;;20542:2:3;3497:87:2::1;::::0;::::1;20524:21:3::0;;;20561:18;;;20554:30;20620:34;20600:18;;;20593:62;20672:18;;3497:87:2::1;20340:356:3::0;3497:87:2::1;-1:-1:-1::0;;;;;3604:16:2;::::1;3594:27;3604:16:::0;;;:10:::1;:16;::::0;;;;;;;;3594:27;;:9:::1;:27:::0;;;;;:34;;-1:-1:-1;;;;;;3594:34:2::1;::::0;;::::1;::::0;;;3671:10:::1;3660:22:::0;;;;;3654:5:::1;:29:::0;;3643:56:::1;::::0;3660:22;3654:29;::::1;;;;;:::i;:::-;;;;;;;;;;;:38;;3694:4;3643:56;;;;;;;:::i;506:24::-:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2203:506::-;2369:5;;-1:-1:-1;;;;;2369:5:2;2355:10;:19;2347:43;;;;-1:-1:-1;;;2347:43:2;;21230:2:3;2347:43:2;;;21212:21:3;21269:2;21249:18;;;21242:30;-1:-1:-1;;;21288:18:3;;;21281:41;21339:18;;2347:43:2;21028:335:3;2347:43:2;2404:11;;2400:54;;2448:6;2420:5;2426:7;2420:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:34;2400:54;2468:11;;2464:49;;2507:6;2484:5;2490:7;2484:14;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;:29;;;;2464:49;2527:14;;2523:55;;2569:9;2543:5;2549:7;2543:14;;;;;;;;:::i;:::-;;;;;;;;;;;:23;;:35;;;;2523:55;2592:13;;2588:53;;2633:8;2608:5;2614:7;2608:14;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;:33;;;;2588:53;2655:12;;2651:51;;2695:7;2671:5;2677:7;2671:14;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;:31;;;;2651:51;2203:506;;;;;;:::o;3465:96:1:-;3523:7;3549:5;3553:1;3549;:5;:::i;:::-;3542:12;;3465:96;;;;;:::o;3850:::-;3908:7;3934:5;3938:1;3934;:5;:::i;3122:96::-;3180:7;3206:5;3210:1;3206;:5;:::i;2755:96::-;2813:7;2839:5;2843:1;2839;:5;:::i;14:180:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:3;;14:180;-1:-1:-1;14:180:3:o;407:173::-;475:20;;-1:-1:-1;;;;;524:31:3;;514:42;;504:70;;570:1;567;560:12;504:70;407:173;;;:::o;585:186::-;644:6;697:2;685:9;676:7;672:23;668:32;665:52;;;713:1;710;703:12;665:52;736:29;755:9;736:29;:::i;1029:423::-;1071:3;1109:5;1103:12;1136:6;1131:3;1124:19;1161:1;1171:162;1185:6;1182:1;1179:13;1171:162;;;1247:4;1303:13;;;1299:22;;1293:29;1275:11;;;1271:20;;1264:59;1200:12;1171:162;;;1175:3;1378:1;1371:4;1362:6;1357:3;1353:16;1349:27;1342:38;1441:4;1434:2;1430:7;1425:2;1417:6;1413:15;1409:29;1404:3;1400:39;1396:50;1389:57;;;1029:423;;;;:::o;1457:651::-;1774:6;1763:9;1756:25;1817:3;1812:2;1801:9;1797:18;1790:31;1737:4;1838:46;1879:3;1868:9;1864:19;1856:6;1838:46;:::i;:::-;1915:2;1900:18;;1893:34;;;;-1:-1:-1;1958:2:3;1943:18;;1936:34;;;;2001:3;1986:19;;1979:35;;;;2045:3;2030:19;;2023:35;2089:3;2074:19;;;2067:35;1830:54;1457:651;-1:-1:-1;;1457:651:3:o;2295:254::-;2363:6;2371;2424:2;2412:9;2403:7;2399:23;2395:32;2392:52;;;2440:1;2437;2430:12;2392:52;2476:9;2463:23;2453:33;;2505:38;2539:2;2528:9;2524:18;2505:38;:::i;:::-;2495:48;;2295:254;;;;;:::o;2969:127::-;3030:10;3025:3;3021:20;3018:1;3011:31;3061:4;3058:1;3051:15;3085:4;3082:1;3075:15;3101:990;3179:6;3187;3240:2;3228:9;3219:7;3215:23;3211:32;3208:52;;;3256:1;3253;3246:12;3208:52;3292:9;3279:23;3269:33;;3353:2;3342:9;3338:18;3325:32;3376:18;3417:2;3409:6;3406:14;3403:34;;;3433:1;3430;3423:12;3403:34;3471:6;3460:9;3456:22;3446:32;;3516:7;3509:4;3505:2;3501:13;3497:27;3487:55;;3538:1;3535;3528:12;3487:55;3574:2;3561:16;3596:2;3592;3589:10;3586:36;;;3602:18;;:::i;:::-;3677:2;3671:9;3645:2;3731:13;;-1:-1:-1;;3727:22:3;;;3751:2;3723:31;3719:40;3707:53;;;3775:18;;;3795:22;;;3772:46;3769:72;;;3821:18;;:::i;:::-;3861:10;3857:2;3850:22;3896:2;3888:6;3881:18;3936:7;3931:2;3926;3922;3918:11;3914:20;3911:33;3908:53;;;3957:1;3954;3947:12;3908:53;4013:2;4008;4004;4000:11;3995:2;3987:6;3983:15;3970:46;4058:1;4053:2;4048;4040:6;4036:15;4032:24;4025:35;4079:6;4069:16;;;;;;;3101:990;;;;;:::o;4096:220::-;4245:2;4234:9;4227:21;4208:4;4265:45;4306:2;4295:9;4291:18;4283:6;4265:45;:::i;4321:523::-;4425:6;4433;4441;4449;4457;4465;4518:3;4506:9;4497:7;4493:23;4489:33;4486:53;;;4535:1;4532;4525:12;4486:53;-1:-1:-1;;4558:23:3;;;4628:2;4613:18;;4600:32;;-1:-1:-1;4679:2:3;4664:18;;4651:32;;4730:2;4715:18;;4702:32;;-1:-1:-1;4781:3:3;4766:19;;4753:33;;-1:-1:-1;4833:3:3;4818:19;4805:33;;-1:-1:-1;4321:523:3;-1:-1:-1;4321:523:3:o;5194:184::-;5264:6;5317:2;5305:9;5296:7;5292:23;5288:32;5285:52;;;5333:1;5330;5323:12;5285:52;-1:-1:-1;5356:16:3;;5194:184;-1:-1:-1;5194:184:3:o;5383:127::-;5444:10;5439:3;5435:20;5432:1;5425:31;5475:4;5472:1;5465:15;5499:4;5496:1;5489:15;5515:127;5576:10;5571:3;5567:20;5564:1;5557:31;5607:4;5604:1;5597:15;5631:4;5628:1;5621:15;5647:120;5687:1;5713;5703:35;;5718:18;;:::i;:::-;-1:-1:-1;5752:9:3;;5647:120::o;5772:125::-;5837:9;;;5858:10;;;5855:36;;;5871:18;;:::i;6310:127::-;6371:10;6366:3;6362:20;6359:1;6352:31;6402:4;6399:1;6392:15;6426:4;6423:1;6416:15;6442:380;6521:1;6517:12;;;;6564;;;6585:61;;6639:4;6631:6;6627:17;6617:27;;6585:61;6692:2;6684:6;6681:14;6661:18;6658:38;6655:161;;6738:10;6733:3;6729:20;6726:1;6719:31;6773:4;6770:1;6763:15;6801:4;6798:1;6791:15;6655:161;;6442:380;;;:::o;6953:772::-;7003:3;7044:5;7038:12;7073:36;7099:9;7073:36;:::i;:::-;7118:19;;;7156:4;7179:1;7196:18;;;7223:146;;;;7383:1;7378:341;;;;7189:530;;7223:146;-1:-1:-1;;7265:24:3;;7251:12;;;7244:46;7337:14;;7330:22;7327:1;7323:30;7314:40;;7310:49;;;-1:-1:-1;7223:146:3;;7378:341;7409:5;7406:1;7399:16;7456:2;7453:1;7443:16;7481:1;7495:174;7509:6;7506:1;7503:13;7495:174;;;7596:14;;7578:11;;;7574:20;;7567:44;7639:16;;;;7524:10;;7495:174;;;7693:11;;7689:20;;;-1:-1:-1;;7189:530:3;;;;;;6953:772;;;;:::o;7730:393::-;-1:-1:-1;;;;;7932:32:3;;7914:51;;8001:2;7996;7981:18;;7974:30;;;-1:-1:-1;;8021:53:3;;8055:18;;8047:6;8021:53;:::i;:::-;8013:61;;8110:6;8105:2;8094:9;8090:18;8083:34;7730:393;;;;;;:::o;8472:168::-;8545:9;;;8576;;8593:15;;;8587:22;;8573:37;8563:71;;8614:18;;:::i;8645:128::-;8712:9;;;8733:11;;;8730:37;;;8747:18;;:::i;8778:322::-;-1:-1:-1;;;;;8952:32:3;;8934:51;;9021:2;9016;9001:18;;8994:30;;;-1:-1:-1;;9041:53:3;;9075:18;;9067:6;9041:53;:::i;:::-;9033:61;8778:322;-1:-1:-1;;;;8778:322:3:o;9105:353::-;9307:2;9289:21;;;9346:2;9326:18;;;9319:30;9385:31;9380:2;9365:18;;9358:59;9449:2;9434:18;;9105:353::o;9463:345::-;9665:2;9647:21;;;9704:2;9684:18;;;9677:30;-1:-1:-1;;;9738:2:3;9723:18;;9716:51;9799:2;9784:18;;9463:345::o;10519:112::-;10551:1;10577;10567:35;;10582:18;;:::i;:::-;-1:-1:-1;10616:9:3;;10519:112::o;10636:135::-;10675:3;10696:17;;;10693:43;;10716:18;;:::i;:::-;-1:-1:-1;10763:1:3;10752:13;;10636:135::o;10776:407::-;10978:2;10960:21;;;11017:2;10997:18;;;10990:30;11056:34;11051:2;11036:18;;11029:62;-1:-1:-1;;;11122:2:3;11107:18;;11100:41;11173:3;11158:19;;10776:407::o;12762:545::-;12864:2;12859:3;12856:11;12853:448;;;12900:1;12925:5;12921:2;12914:17;12970:4;12966:2;12956:19;13040:2;13028:10;13024:19;13021:1;13017:27;13011:4;13007:38;13076:4;13064:10;13061:20;13058:47;;;-1:-1:-1;13099:4:3;13058:47;13154:2;13149:3;13145:12;13142:1;13138:20;13132:4;13128:31;13118:41;;13209:82;13227:2;13220:5;13217:13;13209:82;;;13272:17;;;13253:1;13242:13;13209:82;;13483:1435;13602:3;13596:4;13593:13;13590:26;;13609:5;;13483:1435::o;13590:26::-;13639:37;13671:3;13665:10;13639:37;:::i;:::-;13699:18;13691:6;13688:30;13685:56;;;13721:18;;:::i;:::-;13750:97;13840:6;13800:38;13832:4;13826:11;13800:38;:::i;:::-;13794:4;13750:97;:::i;:::-;13873:1;13901:2;13893:6;13890:14;13918:1;13913:748;;;;14705:1;14722:6;14719:89;;;-1:-1:-1;14774:19:3;;;14768:26;14719:89;-1:-1:-1;;13440:1:3;13436:11;;;13432:24;13428:29;13418:40;13464:1;13460:11;;;13415:57;14821:81;;13883:1029;;13913:748;6900:1;6893:14;;;6937:4;6924:18;;-1:-1:-1;;13949:20:3;;;6900:1;6893:14;;;6937:4;6924:18;;14113:9;14135:251;14149:7;14146:1;14143:14;14135:251;;;14231:21;;;14225:28;14210:44;;14281:1;14354:18;;;;14309:15;;;;14172:4;14165:12;14135:251;;;14139:3;14414:6;14405:7;14402:19;14399:203;;;14475:21;;;14469:28;-1:-1:-1;;14560:1:3;14556:14;;;14572:3;14552:24;14548:37;14544:42;14529:58;14514:74;;14399:203;;;;14648:1;14639:6;14636:1;14632:14;14628:22;14622:4;14615:36;13883:1029;;;;13483:1435;;:::o;17232:573::-;-1:-1:-1;;;;;17473:32:3;;17455:51;;17542:3;17537:2;17522:18;;17515:31;;;-1:-1:-1;;17569:54:3;;17603:19;;17595:6;17569:54;:::i;:::-;17671:9;17663:6;17659:22;17654:2;17643:9;17639:18;17632:50;17699:41;17733:6;17725;17699:41;:::i;:::-;17691:49;;;17790:6;17783:14;17776:22;17771:2;17760:9;17756:18;17749:50;17232:573;;;;;;;:::o;18625:1352::-;18751:3;18745:10;18778:18;18770:6;18767:30;18764:56;;;18800:18;;:::i;:::-;18829:97;18919:6;18879:38;18911:4;18905:11;18879:38;:::i;18829:97::-;18981:4;;19045:2;19034:14;;19062:1;19057:663;;;;19764:1;19781:6;19778:89;;;-1:-1:-1;19833:19:3;;;19827:26;19778:89;-1:-1:-1;;13440:1:3;13436:11;;;13432:24;13428:29;13418:40;13464:1;13460:11;;;13415:57;19880:81;;19027:944;;19057:663;6900:1;6893:14;;;6937:4;6924:18;;-1:-1:-1;;19093:20:3;;;19211:236;19225:7;19222:1;19219:14;19211:236;;;19314:19;;;19308:26;19293:42;;19406:27;;;;19374:1;19362:14;;;;19241:19;;19211:236;;;19215:3;19475:6;19466:7;19463:19;19460:201;;;19536:19;;;19530:26;-1:-1:-1;;19619:1:3;19615:14;;;19631:3;19611:24;19607:37;19603:42;19588:58;19573:74;;19460:201;-1:-1:-1;;;;;19707:1:3;19691:14;;;19687:22;19674:36;;-1:-1:-1;18625:1352:3:o;20701:322::-;20875:2;20864:9;20857:21;20838:4;20895:53;20944:2;20933:9;20929:18;20921:6;20895:53;:::i;:::-;20887:61;;21013:1;21009;21004:3;21000:11;20996:19;20988:6;20984:32;20979:2;20968:9;20964:18;20957:60;20701:322;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    169,
    10539
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8362CECF GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xC01D373F GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDDBCEDA7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDDBCEDA7 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xE075BE21 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xF8200866 EQ PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC01D373F EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xCC3590BB EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xD60E831C EQ PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8362CECF EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x84D0643E EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x9BCBEA52 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xA99BC082 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xADF7D47A EQ PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4079761E GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x58C5A1E4 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x58C5A1E4 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x6AD7ED47 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x6B3EE32A EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x81EC0F0F EQ PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4079761E EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x48E11E2D EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x57FFFD4A EQ PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x49878F3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x1B586A3B EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x1B6C3517 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x1C7E9ED0 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x38EE821B EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x3ED2B77A EQ PUSH2 0x245 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x22EC JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D1 PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x22EC JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2321 JUMP JUMPDEST PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x2321 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1E5 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x22EC JUMP JUMPDEST PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2382 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x2321 JUMP JUMPDEST PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x22EC JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x2321 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E5 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x11E3 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x12EF JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x150E JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x15AA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1D1 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1D1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x356 PUSH2 0x341 CALLDATASIZE PUSH1 0x4 PUSH2 0x2321 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E5 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x17AC JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0x22EC JUMP JUMPDEST PUSH2 0x19AE JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x2321 JUMP JUMPDEST PUSH2 0x1D85 JUMP JUMPDEST PUSH2 0x2CF PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x1EDC JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2321 JUMP JUMPDEST PUSH2 0x1F77 JUMP JUMPDEST PUSH2 0x3CB PUSH2 0x20E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x24C2 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D5 JUMP JUMPDEST PUSH2 0x2177 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1D1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT PUSH2 0x447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x24B73B30B634B2103A32B0B69024A217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x49D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x2518 JUMP JUMPDEST PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x255D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x520 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x544 SWAP2 SWAP1 PUSH2 0x2518 JUMP JUMPDEST PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x255D JUMP JUMPDEST PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717569726573206174206C6561737420313030205169202B206551692074 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x3790383630BC97 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43E JUMP JUMPDEST DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x5CF JUMPI PUSH2 0x5CF PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x60B JUMPI PUSH2 0x60B PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x62B SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH32 0x421F2322493A06D9F34E676FFA1C281FFB19C3E128AE5F8EEE60EA3C83CDD8F6 SWAP3 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x687 JUMPI PUSH2 0x687 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD DUP4 PUSH1 0x40 MLOAD PUSH2 0x6A8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2651 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x185B1C9958591E481A5B881A985A5B PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 SWAP3 PUSH8 0xDE0B6B3A7640000 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x767 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x78B SWAP2 SWAP1 PUSH2 0x2518 JUMP JUMPDEST PUSH2 0x795 SWAP2 SWAP1 PUSH2 0x255D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH8 0xDE0B6B3A7640000 SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x2518 JUMP JUMPDEST PUSH2 0x81A SWAP2 SWAP1 PUSH2 0x255D JUMP JUMPDEST PUSH2 0x824 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 SWAP1 PUSH1 0xA SWAP1 PUSH2 0x85D SWAP1 DUP5 SWAP1 PUSH2 0x2685 JUMP JUMPDEST PUSH2 0x867 SWAP2 SWAP1 PUSH2 0x255D JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x9AF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x89C DUP3 PUSH1 0x2 PUSH2 0x2685 JUMP JUMPDEST PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8AF JUMPI PUSH2 0x8AF PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x910 JUMPI PUSH2 0x8D2 DUP3 PUSH1 0x2 PUSH2 0x2685 JUMP JUMPDEST PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8E5 JUMPI PUSH2 0x8E5 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x905 SWAP2 SWAP1 PUSH2 0x269C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x937 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x925 JUMPI PUSH2 0x925 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH32 0x3A20C27241F03F182FDEA2523631CB8DBE89E8C84A05CDB19F6F804D58F8F3C7 SWAP3 DUP8 SWAP3 SWAP2 DUP2 LT PUSH2 0x987 JUMPI PUSH2 0x987 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x9A6 SWAP3 SWAP2 SWAP1 PUSH2 0x26AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x9D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43E SWAP1 PUSH2 0x26DB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43E SWAP1 PUSH2 0x2712 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x5 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xA2F JUMPI PUSH2 0xA2F PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0xA9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768206D6F6E657920746F206275792061206D7973746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3C903137BC17 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x5 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAB3 JUMPI PUSH2 0xAB3 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAD3 SWAP2 SWAP1 PUSH2 0x269C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x64 TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB0D SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xB30 SWAP2 SWAP1 PUSH2 0x2741 JUMP JUMPDEST SWAP1 POP PUSH1 0x32 DUP2 LT PUSH2 0xCDB JUMPI PUSH1 0x41 DUP2 LT ISZERO PUSH2 0xB87 JUMPI PUSH1 0xC8 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xB58 JUMPI PUSH2 0xB58 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP3 POP PUSH2 0xCDB SWAP1 POP JUMP JUMPDEST PUSH1 0x55 DUP2 LT ISZERO PUSH2 0xC4C JUMPI PUSH1 0x2 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xBA5 JUMPI PUSH2 0xBA5 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBC5 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xBE1 JUMPI PUSH2 0xBE1 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC01 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xC1D JUMPI PUSH2 0xC1D PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC3D SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x2 SWAP3 POP PUSH2 0xCDB SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xCD5 JUMPI PUSH2 0xC9C PUSH1 0x64 PUSH2 0xC96 PUSH1 0x5A PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xC76 JUMPI PUSH2 0xC76 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0x22B3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCAF JUMPI PUSH2 0xCAF PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD SSTORE DUP1 PUSH2 0xCCD DUP2 PUSH2 0x2755 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC4F JUMP JUMPDEST POP PUSH1 0x3 SWAP2 POP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0xD00 SWAP1 DUP5 SWAP1 PUSH2 0x2571 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xD0E SWAP1 POP PUSH2 0x12EF JUMP JUMPDEST PUSH32 0x963F55B912749794FC60E09989F975D99E32135EBDC74C70CE5CA23C86828A77 CALLER PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xD43 JUMPI PUSH2 0xD43 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD DUP5 PUSH1 0x40 MLOAD PUSH2 0xD64 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2651 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP4 POP SWAP1 PUSH2 0xDA6 SWAP1 PUSH2 0x259A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDD2 SWAP1 PUSH2 0x259A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE1F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDF4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE1F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE02 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xE9C JUMPI POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xEB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43E SWAP1 PUSH2 0x276E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD CALLER DUP4 MSTORE SWAP2 KECCAK256 SLOAD EQ PUSH2 0xF3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742074616B6520736F6D656F6E65206F6E20616E6F746865722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x32B0B69037BABA1037B3103530B4B617 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH32 0x7C892458D566E30087DE155713D0B373EE96B70E37B90D1F057ABAB145B40666 SWAP3 DUP5 SWAP3 SWAP2 DUP2 LT PUSH2 0xFA0 JUMPI PUSH2 0xFA0 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0xFBF SWAP3 SWAP2 SWAP1 PUSH2 0x26AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0xFEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43E SWAP1 PUSH2 0x26DB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43E SWAP1 PUSH2 0x2712 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1044 JUMPI PUSH2 0x1044 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x10B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768206D6F6E657920746F207570677261646520656E6769 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x373297 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43E JUMP JUMPDEST PUSH2 0x10DF PUSH1 0x1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x10C8 JUMPI PUSH2 0x10C8 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD SLOAD SWAP1 PUSH2 0x22D4 JUMP JUMPDEST PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10F2 JUMPI PUSH2 0x10F2 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x113F PUSH1 0x1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x111F JUMPI PUSH2 0x111F PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x22E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1152 JUMPI PUSH2 0x1152 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11A0 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x11AE SWAP1 POP PUSH2 0x12EF JUMP JUMPDEST PUSH32 0xFDBB5B39CF560CD0A57D2342B964C7D29F734F63B301D6389A860883FCCDF697 CALLER PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xFA0 JUMPI PUSH2 0xFA0 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1248 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E2073746172742074686520726163 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3297 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1293 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x23B0B6B29030B63932B0B23C9039BA30B93A32B217 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x12E8 JUMPI PUSH1 0x1 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12C2 JUMPI PUSH2 0x12C2 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD SSTORE DUP1 PUSH2 0x12E0 DUP2 PUSH2 0x2755 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12A3 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x1311 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43E SWAP1 PUSH2 0x26DB JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1427 JUMPI PUSH1 0x0 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x132E SWAP2 SWAP1 PUSH2 0x269C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1344 JUMPI PUSH2 0x1344 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x1360 SWAP2 SWAP1 PUSH2 0x2685 JUMP JUMPDEST PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1373 JUMPI PUSH2 0x1373 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1393 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x6 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x13AF JUMPI PUSH2 0x13AF PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x13DB JUMPI POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x13D7 SWAP1 PUSH2 0x259A JUMP JUMPDEST ISZERO SWAP1 POP JUMPDEST ISZERO PUSH2 0x1414 JUMPI PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13F3 JUMPI PUSH2 0x13F3 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD PUSH1 0x1 SWAP1 DUP2 PUSH2 0x1412 SWAP2 SWAP1 PUSH2 0x27FF JUMP JUMPDEST POP JUMPDEST POP DUP1 PUSH2 0x141F DUP2 PUSH2 0x2755 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1314 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0x24EDE07B86B6E8AEEA97CE363C9B62C5A79ED1B54E95D3B017D17F66C75BC1A3 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x1464 JUMPI PUSH2 0x1464 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD SLOAD PUSH1 0x6 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x148A JUMPI PUSH2 0x148A PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD SLOAD PUSH1 0x6 PUSH1 0x2 DUP2 SLOAD DUP2 LT PUSH2 0x14B0 JUMPI PUSH2 0x14B0 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD SLOAD PUSH1 0x6 PUSH1 0x3 DUP2 SLOAD DUP2 LT PUSH2 0x14D6 JUMPI PUSH2 0x14D6 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE SWAP2 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1572 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E207069636B206361707461696E73 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x15CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43E SWAP1 PUSH2 0x26DB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x15FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43E SWAP1 PUSH2 0x2712 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1624 JUMPI PUSH2 0x1624 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x1690 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768206D6F6E657920746F20757067726164652061747461 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x31B597 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43E JUMP JUMPDEST PUSH2 0x16A8 PUSH1 0x1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x10C8 JUMPI PUSH2 0x10C8 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16BB JUMPI PUSH2 0x16BB PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1708 PUSH1 0x1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x16E8 JUMPI PUSH2 0x16E8 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD SLOAD PUSH2 0x22E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x171B JUMPI PUSH2 0x171B PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1769 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1777 SWAP1 POP PUSH2 0x12EF JUMP JUMPDEST PUSH32 0x7C0725A32355C8362AAA495B37BDB3B9CFCC9FC46DBF2B0C85E7CCCE4669E6B8 CALLER PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xFA0 JUMPI PUSH2 0xFA0 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x17CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43E SWAP1 PUSH2 0x26DB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x17FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43E SWAP1 PUSH2 0x2712 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1826 JUMPI PUSH2 0x1826 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x1892 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768206D6F6E657920746F20757067726164652064656665 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3739B297 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43E JUMP JUMPDEST PUSH2 0x18AA PUSH1 0x1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x10C8 JUMPI PUSH2 0x10C8 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18BD JUMPI PUSH2 0x18BD PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x190A PUSH1 0x1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x18EA JUMPI PUSH2 0x18EA PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD SLOAD PUSH2 0x22E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x191D JUMPI PUSH2 0x191D PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x196B SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1979 SWAP1 POP PUSH2 0x12EF JUMP JUMPDEST PUSH32 0x7CCB3DD8C961E6D97590C65C2CFB6296766D9B731FF7B6F73E59B0BEB50EE2D4 CALLER PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xFA0 JUMPI PUSH2 0xFA0 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x19D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43E SWAP1 PUSH2 0x26DB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1A00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43E SWAP1 PUSH2 0x2712 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT PUSH2 0x1A48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B2103A30B933B2BA103A32B0B697 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SUB PUSH2 0x1AA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742066697265206174206F776E207465616D2E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0x21 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x1AD1 JUMPI PUSH2 0x1AD1 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD SLOAD PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1AF6 JUMPI PUSH2 0x1AF6 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD SLOAD DUP3 PUSH2 0x1B13 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST LT ISZERO PUSH2 0x1B21 JUMPI POP PUSH1 0x1 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1B34 JUMPI PUSH2 0x1B34 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD SLOAD PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1B59 JUMPI PUSH2 0x1B59 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD SLOAD PUSH1 0x21 PUSH2 0x1B77 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH2 0x1B81 SWAP2 SWAP1 PUSH2 0x269C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x63 DUP2 GT ISZERO PUSH2 0x1B91 JUMPI POP PUSH1 0x63 JUMPDEST PUSH1 0x0 PUSH1 0x64 TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BC3 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x1BE6 SWAP2 SWAP1 PUSH2 0x2741 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1CC8 JUMPI PUSH2 0x1C0D PUSH1 0x64 PUSH2 0xC96 PUSH1 0x62 PUSH1 0x6 DUP10 DUP2 SLOAD DUP2 LT PUSH2 0xC76 JUMPI PUSH2 0xC76 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1C20 JUMPI PUSH2 0x1C20 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1C4A JUMPI PUSH2 0x1C4A PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x1CC3 JUMPI PUSH2 0x1C9A PUSH1 0x2 PUSH1 0x6 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x1C7A JUMPI PUSH2 0x1C7A PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x22D4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1CAD JUMPI PUSH2 0x1CAD PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 SWAP3 POP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1CED SWAP1 DUP5 SWAP1 PUSH2 0x2571 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1CFB SWAP1 POP PUSH2 0x12EF JUMP JUMPDEST PUSH32 0x1070E59B5639F0799BD97E9AA418E32193DB53C11A30E2BADAB45D1AC1F1E4E4 CALLER PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1D30 JUMPI PUSH2 0x1D30 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD PUSH1 0x6 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1D54 JUMPI PUSH2 0x1D54 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD DUP7 PUSH1 0x40 MLOAD PUSH2 0x1D76 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1DDA JUMPI POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1DF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43E SWAP1 PUSH2 0x276E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD CALLER DUP4 MSTORE SWAP2 KECCAK256 SLOAD EQ PUSH2 0x1E77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742070757420736F6D656F6E65206F6E20616E6F74686572207465 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x30B69034B7103530B4B617 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH32 0x3A20C27241F03F182FDEA2523631CB8DBE89E8C84A05CDB19F6F804D58F8F3C7 SWAP3 DUP5 SWAP3 SWAP2 DUP2 LT PUSH2 0xFA0 JUMPI PUSH2 0xFA0 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E206E616D6520746865207465616D PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3997 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43E JUMP JUMPDEST DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1F55 JUMPI PUSH2 0x1F55 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1F72 SWAP2 SWAP1 PUSH2 0x292A JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1FEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206361707461696E2063616E20646F20746869732E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD CALLER DUP4 MSTORE SWAP2 KECCAK256 SLOAD EQ PUSH2 0x2057 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4669727374206D617465206D757374206265206F6E20796F7572207465616D2E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP5 MSTORE PUSH1 0xB DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE CALLER DUP4 MSTORE MSTORE KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH32 0x793CE8F0C70B280A4C9C6008694F48260A4AA13D0A724BAB8F18A592EDFE5093 SWAP3 SWAP1 DUP2 LT PUSH2 0x20C9 JUMPI PUSH2 0x20C9 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD DUP3 PUSH1 0x40 MLOAD PUSH2 0xFBF SWAP3 SWAP2 SWAP1 PUSH2 0x29E4 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x20F6 SWAP1 PUSH2 0x259A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2122 SWAP1 PUSH2 0x259A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x216F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2144 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x216F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2152 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x21BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x27B7363C9037BBB732B917 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST DUP5 ISZERO PUSH2 0x21EB JUMPI DUP5 PUSH1 0x6 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x21D9 JUMPI PUSH2 0x21D9 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD SSTORE JUMPDEST DUP4 ISZERO PUSH2 0x221B JUMPI DUP4 PUSH1 0x6 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x2205 JUMPI PUSH2 0x2205 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 ISZERO PUSH2 0x224B JUMPI DUP3 PUSH1 0x6 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x2235 JUMPI PUSH2 0x2235 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 ISZERO PUSH2 0x227B JUMPI DUP2 PUSH1 0x6 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x2265 JUMPI PUSH2 0x2265 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 ISZERO PUSH2 0x22AB JUMPI DUP1 PUSH1 0x6 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x2295 JUMPI PUSH2 0x2295 PUSH2 0x2584 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BF DUP3 DUP5 PUSH2 0x2685 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BF DUP3 DUP5 PUSH2 0x255D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BF DUP3 DUP5 PUSH2 0x269C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BF DUP3 DUP5 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x231C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22BF DUP3 PUSH2 0x2305 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2362 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2346 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP8 DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x239B PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x233C JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP8 SWAP1 SWAP8 MSTORE POP PUSH1 0x60 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x23E8 PUSH1 0x20 DUP5 ADD PUSH2 0x2305 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x241A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x244D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x245F JUMPI PUSH2 0x245F PUSH2 0x23F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2487 JUMPI PUSH2 0x2487 PUSH2 0x23F1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x24A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x22BF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x233C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x24EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP5 CALLDATALOAD SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x252A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x256C JUMPI PUSH2 0x256C PUSH2 0x2531 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x22C2 JUMPI PUSH2 0x22C2 PUSH2 0x2547 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x25AE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x25CE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x25E1 DUP2 PUSH2 0x259A JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 PUSH1 0x1 DUP4 DUP2 AND DUP1 ISZERO PUSH2 0x25FE JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2618 JUMPI PUSH2 0x2646 JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP9 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP9 ADD DUP4 ADD SWAP6 POP PUSH2 0x2646 JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x263E JUMPI DUP2 SLOAD DUP11 DUP3 ADD DUP7 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP5 ADD PUSH2 0x2623 JUMP JUMPDEST DUP10 ADD DUP5 ADD SWAP7 POP POP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2675 SWAP1 DUP4 ADD DUP6 PUSH2 0x25D4 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x22C2 JUMPI PUSH2 0x22C2 PUSH2 0x2547 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x22C2 JUMPI PUSH2 0x22C2 PUSH2 0x2547 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x26D3 SWAP1 DUP4 ADD DUP5 PUSH2 0x25D4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x5468652067616D6520686173206E6F742073746172746564207965742E000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x2A3434B9903AB9B2B91034B99034B7103530B4B617 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2750 JUMPI PUSH2 0x2750 PUSH2 0x2531 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2767 JUMPI PUSH2 0x2767 PUSH2 0x2547 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206361707461696E206F72206669727374206D6174652063 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x30B7103237903A3434B997 PUSH1 0xA9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1F72 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x27E0 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x22AB JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x27EC JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x280A JUMPI POP POP JUMP JUMPDEST PUSH2 0x2814 DUP3 SLOAD PUSH2 0x259A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x282C JUMPI PUSH2 0x282C PUSH2 0x23F1 JUMP JUMPDEST PUSH2 0x2840 DUP2 PUSH2 0x283A DUP5 SLOAD PUSH2 0x259A JUMP JUMPDEST DUP5 PUSH2 0x27B9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2874 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x285C JUMPI POP DUP5 DUP3 ADD SLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x28D9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP5 AND SWAP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28AE JUMPI DUP3 DUP7 ADD SLOAD DUP3 SSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x288E JUMP JUMPDEST POP DUP6 DUP4 LT ISZERO PUSH2 0x28CC JUMPI DUP2 DUP6 ADD SLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP PUSH1 0x1 DUP4 PUSH1 0x1 SHL ADD DUP5 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2904 SWAP1 DUP4 ADD DUP7 PUSH2 0x25D4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2916 DUP2 DUP7 PUSH2 0x25D4 JUMP JUMPDEST SWAP2 POP POP DUP3 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2944 JUMPI PUSH2 0x2944 PUSH2 0x23F1 JUMP JUMPDEST PUSH2 0x2952 DUP2 PUSH2 0x283A DUP5 SLOAD PUSH2 0x259A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2987 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x296F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x29B6 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2997 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x29D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x29F7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x25D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xD2 CODECOPY 0xB1 SWAP7 DUP15 0xCC 0xB4 CALLDATACOPY SGT GAS SWAP3 0xE5 0xEA 0xAA XOR 0x4A MULMOD 0xF9 DUP14 DUP3 0xD1 0xB4 LOG3 0x2A 0x24 0x4B SWAP7 NUMBER ISZERO SWAP4 0x24 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        169,
        10539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18E"
    },
    "25": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8362CECF"
    },
    "38": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "GT",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDE"
    },
    "42": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC01D373F"
    },
    "49": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "GT",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDDBCEDA7"
    },
    "60": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "GT",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDDBCEDA7"
    },
    "71": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B0"
    },
    "75": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDFBF53AE"
    },
    "82": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C3"
    },
    "86": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE075BE21"
    },
    "93": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "94": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D8"
    },
    "97": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "98": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF8200866"
    },
    "104": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "105": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EB"
    },
    "108": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "109": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "REVERT",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "114": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "115": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC01D373F"
    },
    "120": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "121": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "124": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xCC3590BB"
    },
    "131": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "132": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x394"
    },
    "135": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "136": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "137": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD60E831C"
    },
    "142": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "143": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39D"
    },
    "146": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "147": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "150": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "REVERT",
      "path": "2"
    },
    "151": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "152": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "153": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8362CECF"
    },
    "158": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "159": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "162": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "163": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "164": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x84D0643E"
    },
    "169": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "170": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x308"
    },
    "173": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "174": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "175": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "180": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "181": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x320"
    },
    "184": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "185": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "186": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9BCBEA52"
    },
    "191": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "192": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x333"
    },
    "195": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "196": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "197": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA99BC082"
    },
    "202": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "203": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x366"
    },
    "206": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "207": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "208": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xADF7D47A"
    },
    "213": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "214": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36E"
    },
    "217": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "218": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "221": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "REVERT",
      "path": "2"
    },
    "222": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "223": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "224": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4079761E"
    },
    "229": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "GT",
      "path": "2"
    },
    "230": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14B"
    },
    "233": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "234": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "235": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x58C5A1E4"
    },
    "240": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "GT",
      "path": "2"
    },
    "241": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x125"
    },
    "244": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "245": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "246": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x58C5A1E4"
    },
    "251": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "252": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AF"
    },
    "255": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "256": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "257": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6AD7ED47"
    },
    "262": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "263": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DD"
    },
    "266": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "267": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "268": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6B3EE32A"
    },
    "273": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "274": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E5"
    },
    "277": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "278": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "279": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x81EC0F0F"
    },
    "284": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "285": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ED"
    },
    "288": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "289": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "292": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "REVERT",
      "path": "2"
    },
    "293": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "294": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "295": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4079761E"
    },
    "300": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "301": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26B"
    },
    "304": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "305": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "306": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x48E11E2D"
    },
    "311": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "312": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27E"
    },
    "315": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "316": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "317": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x57FFFD4A"
    },
    "322": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "323": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A7"
    },
    "326": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "327": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "329": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "330": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "REVERT",
      "path": "2"
    },
    "331": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "332": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "333": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x49878F3"
    },
    "338": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "339": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x193"
    },
    "342": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "343": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "344": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1B586A3B"
    },
    "349": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "350": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A8"
    },
    "353": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "354": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "355": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1B6C3517"
    },
    "360": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "361": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EE"
    },
    "364": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "365": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "366": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1C7E9ED0"
    },
    "371": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "372": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x201"
    },
    "375": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "376": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "377": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x38EE821B"
    },
    "382": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "383": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x209"
    },
    "386": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "387": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "388": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3ED2B77A"
    },
    "393": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "EQ",
      "path": "2"
    },
    "394": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x245"
    },
    "397": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "398": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "399": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "401": {
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "402": {
      "first_revert": true,
      "fn": null,
      "offset": [
        169,
        10539
      ],
      "op": "REVERT",
      "path": "2"
    },
    "403": {
      "fn": "PirateRace.join",
      "offset": [
        2739,
        3240
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "404": {
      "fn": "PirateRace.join",
      "offset": [
        2739,
        3240
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6"
    },
    "407": {
      "fn": "PirateRace.join",
      "offset": [
        2739,
        3240
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A1"
    },
    "410": {
      "fn": "PirateRace.join",
      "offset": [
        2739,
        3240
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "411": {
      "fn": "PirateRace.join",
      "offset": [
        2739,
        3240
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "413": {
      "fn": "PirateRace.join",
      "offset": [
        2739,
        3240
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22EC"
    },
    "416": {
      "fn": "PirateRace.join",
      "jump": "i",
      "offset": [
        2739,
        3240
      ],
      "op": "JUMP",
      "path": "2"
    },
    "417": {
      "fn": "PirateRace.join",
      "offset": [
        2739,
        3240
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "418": {
      "fn": "PirateRace.join",
      "offset": [
        2739,
        3240
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FE"
    },
    "421": {
      "fn": "PirateRace.join",
      "jump": "i",
      "offset": [
        2739,
        3240
      ],
      "op": "JUMP",
      "path": "2"
    },
    "422": {
      "fn": "PirateRace.join",
      "offset": [
        2739,
        3240
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "423": {
      "fn": "PirateRace.join",
      "offset": [
        2739,
        3240
      ],
      "op": "STOP",
      "path": "2"
    },
    "424": {
      "offset": [
        964,
        1007
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "425": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D1"
    },
    "428": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B6"
    },
    "431": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "432": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "434": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22EC"
    },
    "437": {
      "fn": "PirateRace.join",
      "jump": "i",
      "offset": [
        964,
        1007
      ],
      "op": "JUMP",
      "path": "2"
    },
    "438": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "439": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "441": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "443": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "444": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "446": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "447": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "DUP2",
      "path": "2"
    },
    "448": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "449": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "451": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "452": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "453": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "460": {
      "op": "SHL"
    },
    "461": {
      "op": "SUB"
    },
    "462": {
      "offset": [
        964,
        1007
      ],
      "op": "AND",
      "path": "2"
    },
    "463": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "DUP2",
      "path": "2"
    },
    "464": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "JUMP",
      "path": "2"
    },
    "465": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "466": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "468": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "475": {
      "op": "SHL"
    },
    "476": {
      "op": "SUB"
    },
    "477": {
      "op": "SWAP1"
    },
    "478": {
      "op": "SWAP2"
    },
    "479": {
      "op": "AND"
    },
    "480": {
      "op": "DUP2"
    },
    "481": {
      "op": "MSTORE"
    },
    "482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "484": {
      "op": "ADD"
    },
    "485": {
      "offset": [
        964,
        1007
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "486": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "488": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "489": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "DUP1",
      "path": "2"
    },
    "490": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "491": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "SUB",
      "path": "2"
    },
    "492": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "493": {
      "fn": "PirateRace.join",
      "offset": [
        964,
        1007
      ],
      "op": "RETURN",
      "path": "2"
    },
    "494": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8670,
        9327
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "495": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8670,
        9327
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6"
    },
    "498": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8670,
        9327
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FC"
    },
    "501": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8670,
        9327
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "502": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8670,
        9327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "504": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8670,
        9327
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2321"
    },
    "507": {
      "fn": "PirateRace.checkForgedPapers",
      "jump": "i",
      "offset": [
        8670,
        9327
      ],
      "op": "JUMP",
      "path": "2"
    },
    "508": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8670,
        9327
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "509": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8670,
        9327
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6B4"
    },
    "512": {
      "fn": "PirateRace.checkForgedPapers",
      "jump": "i",
      "offset": [
        8670,
        9327
      ],
      "op": "JUMP",
      "path": "2"
    },
    "513": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        6971,
        8111
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "514": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        6971,
        8111
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6"
    },
    "517": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        6971,
        8111
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B5"
    },
    "520": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        6971,
        8111
      ],
      "op": "JUMP",
      "path": "2"
    },
    "521": {
      "offset": [
        908,
        958
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "522": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x230"
    },
    "525": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x217"
    },
    "528": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "529": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "531": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2321"
    },
    "534": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        908,
        958
      ],
      "op": "JUMP",
      "path": "2"
    },
    "535": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "536": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "538": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "540": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "541": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "543": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "544": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "DUP2",
      "path": "2"
    },
    "545": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "546": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "548": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "549": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "550": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "DUP1",
      "path": "2"
    },
    "551": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "552": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "554": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "555": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "556": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "ADD",
      "path": "2"
    },
    "557": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "558": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "DUP3",
      "path": "2"
    },
    "559": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "JUMP",
      "path": "2"
    },
    "560": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "561": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "563": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "DUP1",
      "path": "2"
    },
    "564": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        908,
        958
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "565": {
      "op": "SWAP3"
    },
    "566": {
      "op": "DUP4"
    },
    "567": {
      "op": "MSTORE"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "570": {
      "op": "DUP4"
    },
    "571": {
      "op": "ADD"
    },
    "572": {
      "op": "SWAP2"
    },
    "573": {
      "op": "SWAP1"
    },
    "574": {
      "op": "SWAP2"
    },
    "575": {
      "op": "MSTORE"
    },
    "576": {
      "op": "ADD"
    },
    "577": {
      "offset": [
        908,
        958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E5"
    },
    "580": {
      "op": "JUMP"
    },
    "581": {
      "offset": [
        787,
        806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "582": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x258"
    },
    "585": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x253"
    },
    "588": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "589": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "591": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22EC"
    },
    "594": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        787,
        806
      ],
      "op": "JUMP",
      "path": "2"
    },
    "595": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "596": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD71"
    },
    "599": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        787,
        806
      ],
      "op": "JUMP",
      "path": "2"
    },
    "600": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "601": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "603": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "604": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E5"
    },
    "607": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "608": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "609": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "610": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "611": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "612": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "613": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "614": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "615": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2382"
    },
    "618": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        787,
        806
      ],
      "op": "JUMP",
      "path": "2"
    },
    "619": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8387,
        8664
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "620": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8387,
        8664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6"
    },
    "623": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8387,
        8664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x279"
    },
    "626": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8387,
        8664
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "627": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8387,
        8664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "629": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8387,
        8664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2321"
    },
    "632": {
      "fn": "PirateRace.takeOutOfJail",
      "jump": "i",
      "offset": [
        8387,
        8664
      ],
      "op": "JUMP",
      "path": "2"
    },
    "633": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8387,
        8664
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "634": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8387,
        8664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE47"
    },
    "637": {
      "fn": "PirateRace.takeOutOfJail",
      "jump": "i",
      "offset": [
        8387,
        8664
      ],
      "op": "JUMP",
      "path": "2"
    },
    "638": {
      "offset": [
        1013,
        1058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "639": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D1"
    },
    "642": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28C"
    },
    "645": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "646": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "648": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22EC"
    },
    "651": {
      "fn": "PirateRace.takeOutOfJail",
      "jump": "i",
      "offset": [
        1013,
        1058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "652": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "653": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "655": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "657": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "658": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "660": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "661": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "662": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "663": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "665": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "666": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "667": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "674": {
      "op": "SHL"
    },
    "675": {
      "op": "SUB"
    },
    "676": {
      "offset": [
        1013,
        1058
      ],
      "op": "AND",
      "path": "2"
    },
    "677": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "678": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        1013,
        1058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "679": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4285,
        4763
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "680": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4285,
        4763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6"
    },
    "683": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4285,
        4763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFCA"
    },
    "686": {
      "fn": "PirateRace.upgradeEngine",
      "jump": "i",
      "offset": [
        4285,
        4763
      ],
      "op": "JUMP",
      "path": "2"
    },
    "687": {
      "offset": [
        813,
        859
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "688": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CF"
    },
    "691": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BD"
    },
    "694": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "695": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "697": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2321"
    },
    "700": {
      "fn": "PirateRace.upgradeEngine",
      "jump": "i",
      "offset": [
        813,
        859
      ],
      "op": "JUMP",
      "path": "2"
    },
    "701": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "702": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "704": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "706": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "707": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "709": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "710": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "DUP2",
      "path": "2"
    },
    "711": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "712": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "714": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "715": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "716": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "717": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "DUP2",
      "path": "2"
    },
    "718": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "JUMP",
      "path": "2"
    },
    "719": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "720": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "722": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        813,
        859
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "723": {
      "op": "SWAP1"
    },
    "724": {
      "op": "DUP2"
    },
    "725": {
      "op": "MSTORE"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "728": {
      "op": "ADD"
    },
    "729": {
      "offset": [
        813,
        859
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E5"
    },
    "732": {
      "op": "JUMP"
    },
    "733": {
      "fn": "PirateRace.startRace",
      "offset": [
        1671,
        2000
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "734": {
      "fn": "PirateRace.startRace",
      "offset": [
        1671,
        2000
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6"
    },
    "737": {
      "fn": "PirateRace.startRace",
      "offset": [
        1671,
        2000
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11E3"
    },
    "740": {
      "fn": "PirateRace.startRace",
      "jump": "i",
      "offset": [
        1671,
        2000
      ],
      "op": "JUMP",
      "path": "2"
    },
    "741": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3753,
        4279
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "742": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3753,
        4279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6"
    },
    "745": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3753,
        4279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12EF"
    },
    "748": {
      "fn": "PirateRace.updateDistance",
      "jump": "i",
      "offset": [
        3753,
        4279
      ],
      "op": "JUMP",
      "path": "2"
    },
    "749": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3246,
        3428
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "750": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3246,
        3428
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6"
    },
    "753": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3246,
        3428
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FB"
    },
    "756": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3246,
        3428
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "757": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3246,
        3428
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "759": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3246,
        3428
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23C5"
    },
    "762": {
      "fn": "PirateRace.pickCaptain",
      "jump": "i",
      "offset": [
        3246,
        3428
      ],
      "op": "JUMP",
      "path": "2"
    },
    "763": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3246,
        3428
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "764": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3246,
        3428
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x150E"
    },
    "767": {
      "fn": "PirateRace.pickCaptain",
      "jump": "i",
      "offset": [
        3246,
        3428
      ],
      "op": "JUMP",
      "path": "2"
    },
    "768": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5260,
        5740
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "769": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5260,
        5740
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6"
    },
    "772": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5260,
        5740
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15AA"
    },
    "775": {
      "fn": "PirateRace.upgradeAttack",
      "jump": "i",
      "offset": [
        5260,
        5740
      ],
      "op": "JUMP",
      "path": "2"
    },
    "776": {
      "offset": [
        603,
        672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "777": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        603,
        672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "779": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        603,
        672
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "780": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        603,
        672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D1"
    },
    "783": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        603,
        672
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "784": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        603,
        672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "787": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        603,
        672
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "788": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        603,
        672
      ],
      "op": "DIV",
      "path": "2"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "795": {
      "op": "SHL"
    },
    "796": {
      "op": "SUB"
    },
    "797": {
      "offset": [
        603,
        672
      ],
      "op": "AND",
      "path": "2"
    },
    "798": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        603,
        672
      ],
      "op": "DUP2",
      "path": "2"
    },
    "799": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        603,
        672
      ],
      "op": "JUMP",
      "path": "2"
    },
    "800": {
      "offset": [
        480,
        500
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "801": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        480,
        500
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "803": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        480,
        500
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "804": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        480,
        500
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D1"
    },
    "807": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        480,
        500
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "814": {
      "op": "SHL"
    },
    "815": {
      "op": "SUB"
    },
    "816": {
      "offset": [
        480,
        500
      ],
      "op": "AND",
      "path": "2"
    },
    "817": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        480,
        500
      ],
      "op": "DUP2",
      "path": "2"
    },
    "818": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        480,
        500
      ],
      "op": "JUMP",
      "path": "2"
    },
    "819": {
      "offset": [
        865,
        902
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "820": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x356"
    },
    "823": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x341"
    },
    "826": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "827": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "829": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2321"
    },
    "832": {
      "fn": "PirateRace.upgradeAttack",
      "jump": "i",
      "offset": [
        865,
        902
      ],
      "op": "JUMP",
      "path": "2"
    },
    "833": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "834": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "836": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "838": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "839": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "841": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "842": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "DUP2",
      "path": "2"
    },
    "843": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "844": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "846": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "847": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "848": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "849": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "851": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "AND",
      "path": "2"
    },
    "852": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "DUP2",
      "path": "2"
    },
    "853": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "JUMP",
      "path": "2"
    },
    "854": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "855": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "857": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        865,
        902
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "858": {
      "op": "SWAP1"
    },
    "859": {
      "op": "ISZERO"
    },
    "860": {
      "op": "ISZERO"
    },
    "861": {
      "op": "DUP2"
    },
    "862": {
      "op": "MSTORE"
    },
    "863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "865": {
      "op": "ADD"
    },
    "866": {
      "offset": [
        865,
        902
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E5"
    },
    "869": {
      "op": "JUMP"
    },
    "870": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4769,
        5254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "871": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4769,
        5254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6"
    },
    "874": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4769,
        5254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17AC"
    },
    "877": {
      "fn": "PirateRace.upgradeDefense",
      "jump": "i",
      "offset": [
        4769,
        5254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "878": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5746,
        6965
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "879": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5746,
        6965
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6"
    },
    "882": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5746,
        6965
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37C"
    },
    "885": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5746,
        6965
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "886": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5746,
        6965
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "888": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5746,
        6965
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22EC"
    },
    "891": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        5746,
        6965
      ],
      "op": "JUMP",
      "path": "2"
    },
    "892": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5746,
        6965
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "893": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5746,
        6965
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19AE"
    },
    "896": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        5746,
        6965
      ],
      "op": "JUMP",
      "path": "2"
    },
    "897": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8117,
        8381
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "898": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8117,
        8381
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6"
    },
    "901": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8117,
        8381
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38F"
    },
    "904": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8117,
        8381
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "905": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8117,
        8381
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "907": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8117,
        8381
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2321"
    },
    "910": {
      "fn": "PirateRace.putInJail",
      "jump": "i",
      "offset": [
        8117,
        8381
      ],
      "op": "JUMP",
      "path": "2"
    },
    "911": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8117,
        8381
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "912": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8117,
        8381
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D85"
    },
    "915": {
      "fn": "PirateRace.putInJail",
      "jump": "i",
      "offset": [
        8117,
        8381
      ],
      "op": "JUMP",
      "path": "2"
    },
    "916": {
      "offset": [
        536,
        567
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "917": {
      "fn": "PirateRace.putInJail",
      "offset": [
        536,
        567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CF"
    },
    "920": {
      "fn": "PirateRace.putInJail",
      "offset": [
        536,
        567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "922": {
      "fn": "PirateRace.putInJail",
      "offset": [
        536,
        567
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "923": {
      "fn": "PirateRace.putInJail",
      "offset": [
        536,
        567
      ],
      "op": "DUP2",
      "path": "2"
    },
    "924": {
      "fn": "PirateRace.putInJail",
      "offset": [
        536,
        567
      ],
      "op": "JUMP",
      "path": "2"
    },
    "925": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2006,
        2197
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "926": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2006,
        2197
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6"
    },
    "929": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2006,
        2197
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AB"
    },
    "932": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2006,
        2197
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "933": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2006,
        2197
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "935": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2006,
        2197
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2407"
    },
    "938": {
      "fn": "PirateRace.nameTeam",
      "jump": "i",
      "offset": [
        2006,
        2197
      ],
      "op": "JUMP",
      "path": "2"
    },
    "939": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2006,
        2197
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "940": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2006,
        2197
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EDC"
    },
    "943": {
      "fn": "PirateRace.nameTeam",
      "jump": "i",
      "offset": [
        2006,
        2197
      ],
      "op": "JUMP",
      "path": "2"
    },
    "944": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3434,
        3706
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "945": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3434,
        3706
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6"
    },
    "948": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3434,
        3706
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BE"
    },
    "951": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3434,
        3706
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "952": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3434,
        3706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "954": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3434,
        3706
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2321"
    },
    "957": {
      "fn": "PirateRace.pickFirstMate",
      "jump": "i",
      "offset": [
        3434,
        3706
      ],
      "op": "JUMP",
      "path": "2"
    },
    "958": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3434,
        3706
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "959": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3434,
        3706
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F77"
    },
    "962": {
      "fn": "PirateRace.pickFirstMate",
      "jump": "i",
      "offset": [
        3434,
        3706
      ],
      "op": "JUMP",
      "path": "2"
    },
    "963": {
      "offset": [
        506,
        530
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "964": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CB"
    },
    "967": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20E9"
    },
    "970": {
      "fn": "PirateRace.pickFirstMate",
      "jump": "i",
      "offset": [
        506,
        530
      ],
      "op": "JUMP",
      "path": "2"
    },
    "971": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "972": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "974": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "975": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E5"
    },
    "978": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "979": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "980": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24C2"
    },
    "983": {
      "fn": "PirateRace.pickFirstMate",
      "jump": "i",
      "offset": [
        506,
        530
      ],
      "op": "JUMP",
      "path": "2"
    },
    "984": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2203,
        2709
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "985": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2203,
        2709
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6"
    },
    "988": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2203,
        2709
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E6"
    },
    "991": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2203,
        2709
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "992": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2203,
        2709
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "994": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2203,
        2709
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24D5"
    },
    "997": {
      "fn": "PirateRace.changeSettings",
      "jump": "i",
      "offset": [
        2203,
        2709
      ],
      "op": "JUMP",
      "path": "2"
    },
    "998": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2203,
        2709
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "999": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2203,
        2709
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2177"
    },
    "1002": {
      "fn": "PirateRace.changeSettings",
      "jump": "i",
      "offset": [
        2203,
        2709
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1003": {
      "offset": [
        678,
        748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1004": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        678,
        748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1006": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        678,
        748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1007": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        678,
        748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D1"
    },
    "1010": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        678,
        748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1017": {
      "op": "SHL"
    },
    "1018": {
      "op": "SUB"
    },
    "1019": {
      "offset": [
        678,
        748
      ],
      "op": "AND",
      "path": "2"
    },
    "1020": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        678,
        748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1021": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        678,
        748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1022": {
      "fn": "PirateRace.join",
      "offset": [
        2739,
        3240
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1023": {
      "fn": "PirateRace.join",
      "offset": [
        2803,
        2808
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x6"
    },
    "1025": {
      "fn": "PirateRace.join",
      "offset": [
        2803,
        2815
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1026": {
      "fn": "PirateRace.join",
      "offset": [
        2794,
        2815
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1027": {
      "branch": 85,
      "fn": "PirateRace.join",
      "offset": [
        2794,
        2815
      ],
      "op": "LT",
      "path": "2"
    },
    "1028": {
      "fn": "PirateRace.join",
      "offset": [
        2786,
        2836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x447"
    },
    "1031": {
      "branch": 85,
      "fn": "PirateRace.join",
      "offset": [
        2786,
        2836
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1032": {
      "fn": "PirateRace.join",
      "offset": [
        2786,
        2836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1034": {
      "fn": "PirateRace.join",
      "offset": [
        2786,
        2836
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1035": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1041": {
      "op": "SHL"
    },
    "1042": {
      "fn": "PirateRace.join",
      "offset": [
        2786,
        2836
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1043": {
      "fn": "PirateRace.join",
      "offset": [
        2786,
        2836
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1046": {
      "fn": "PirateRace.join",
      "offset": [
        2786,
        2836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1048": {
      "fn": "PirateRace.join",
      "offset": [
        2786,
        2836
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1049": {
      "fn": "PirateRace.join",
      "offset": [
        2786,
        2836
      ],
      "op": "ADD",
      "path": "2"
    },
    "1050": {
      "op": "MSTORE"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1055": {
      "op": "DUP3"
    },
    "1056": {
      "op": "ADD"
    },
    "1057": {
      "op": "MSTORE"
    },
    "1058": {
      "op": "PUSH16",
      "value": "0x24B73B30B634B2103A32B0B69024A217"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "1077": {
      "op": "SHL"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1080": {
      "op": "DUP3"
    },
    "1081": {
      "op": "ADD"
    },
    "1082": {
      "op": "MSTORE"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1085": {
      "op": "ADD"
    },
    "1086": {
      "fn": "PirateRace.join",
      "offset": [
        2786,
        2836
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1087": {
      "fn": "PirateRace.join",
      "offset": [
        2786,
        2836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1089": {
      "fn": "PirateRace.join",
      "offset": [
        2786,
        2836
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1090": {
      "fn": "PirateRace.join",
      "offset": [
        2786,
        2836
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1091": {
      "fn": "PirateRace.join",
      "offset": [
        2786,
        2836
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1092": {
      "fn": "PirateRace.join",
      "offset": [
        2786,
        2836
      ],
      "op": "SUB",
      "path": "2"
    },
    "1093": {
      "fn": "PirateRace.join",
      "offset": [
        2786,
        2836
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1094": {
      "fn": "PirateRace.join",
      "offset": [
        2786,
        2836
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "1095": {
      "fn": "PirateRace.join",
      "offset": [
        2786,
        2836
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1096": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2897
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1098": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2897
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1099": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2897
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1100": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1102": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1103": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1110": {
      "op": "SHL"
    },
    "1111": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1112": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1113": {
      "fn": "PirateRace.join",
      "offset": [
        2908,
        2918
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1114": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1115": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1116": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "ADD",
      "path": "2"
    },
    "1117": {
      "op": "SWAP3"
    },
    "1118": {
      "op": "SWAP1"
    },
    "1119": {
      "op": "SWAP3"
    },
    "1120": {
      "op": "MSTORE"
    },
    "1121": {
      "fn": "PirateRace.join",
      "offset": [
        2846,
        2859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1123": {
      "fn": "PirateRace.join",
      "offset": [
        2846,
        2859
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1124": {
      "fn": "PirateRace.join",
      "offset": [
        2920,
        2924
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xDE0B6B3A7640000"
    },
    "1133": {
      "fn": "PirateRace.join",
      "offset": [
        2920,
        2924
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1140": {
      "op": "SHL"
    },
    "1141": {
      "op": "SUB"
    },
    "1142": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2897
      ],
      "op": "AND",
      "path": "2"
    },
    "1143": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2897
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1144": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2907
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "1149": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2907
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1152": {
      "op": "ADD"
    },
    "1153": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1155": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1157": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1158": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1159": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1160": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "SUB",
      "path": "2"
    },
    "1161": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1162": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1163": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "GAS",
      "path": "2"
    },
    "1164": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "1165": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1166": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1167": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1168": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x49D"
    },
    "1171": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1172": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1173": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1175": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1176": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1177": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1178": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1180": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1181": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1182": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "POP",
      "path": "2"
    },
    "1183": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "POP",
      "path": "2"
    },
    "1184": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "POP",
      "path": "2"
    },
    "1185": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "POP",
      "path": "2"
    },
    "1186": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1188": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1189": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1190": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1192": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "NOT",
      "path": "2"
    },
    "1193": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1195": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1196": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "ADD",
      "path": "2"
    },
    "1197": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "AND",
      "path": "2"
    },
    "1198": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1199": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "ADD",
      "path": "2"
    },
    "1200": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1201": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1203": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1204": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "POP",
      "path": "2"
    },
    "1205": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1206": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "ADD",
      "path": "2"
    },
    "1207": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1208": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C1"
    },
    "1211": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1212": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1213": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2518"
    },
    "1216": {
      "fn": "PirateRace.join",
      "jump": "i",
      "offset": [
        2894,
        2919
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1217": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2919
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1218": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2924
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4CB"
    },
    "1221": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2924
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1222": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2924
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1223": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2924
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x255D"
    },
    "1226": {
      "fn": "PirateRace.join",
      "jump": "i",
      "offset": [
        2894,
        2924
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1227": {
      "fn": "PirateRace.join",
      "offset": [
        2894,
        2924
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1228": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1230": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2864
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1231": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1233": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1234": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1241": {
      "op": "SHL"
    },
    "1242": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1243": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1244": {
      "fn": "PirateRace.join",
      "offset": [
        2875,
        2885
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1245": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1247": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1248": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "ADD",
      "path": "2"
    },
    "1249": {
      "op": "MSTORE"
    },
    "1250": {
      "fn": "PirateRace.join",
      "offset": [
        2887,
        2891
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xDE0B6B3A7640000"
    },
    "1259": {
      "fn": "PirateRace.join",
      "offset": [
        2887,
        2891
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1260": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1263": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1264": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2864
      ],
      "op": "DIV",
      "path": "2"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1271": {
      "op": "SHL"
    },
    "1272": {
      "op": "SUB"
    },
    "1273": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2864
      ],
      "op": "AND",
      "path": "2"
    },
    "1274": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1275": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2874
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "1280": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2874
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1283": {
      "op": "ADD"
    },
    "1284": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1286": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1288": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1289": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1290": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1291": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "SUB",
      "path": "2"
    },
    "1292": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1293": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1294": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "GAS",
      "path": "2"
    },
    "1295": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "1296": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1297": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1298": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1299": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x520"
    },
    "1302": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1303": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1304": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1306": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1307": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1308": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1309": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1311": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1312": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1313": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "POP",
      "path": "2"
    },
    "1314": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "POP",
      "path": "2"
    },
    "1315": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "POP",
      "path": "2"
    },
    "1316": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "POP",
      "path": "2"
    },
    "1317": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1319": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1320": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1321": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1323": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "NOT",
      "path": "2"
    },
    "1324": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1326": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1327": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "ADD",
      "path": "2"
    },
    "1328": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "AND",
      "path": "2"
    },
    "1329": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1330": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "ADD",
      "path": "2"
    },
    "1331": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1332": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1334": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1335": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "POP",
      "path": "2"
    },
    "1336": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1337": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "ADD",
      "path": "2"
    },
    "1338": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1339": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x544"
    },
    "1342": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1343": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1344": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2518"
    },
    "1347": {
      "fn": "PirateRace.join",
      "jump": "i",
      "offset": [
        2862,
        2886
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1348": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2886
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1349": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2891
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x54E"
    },
    "1352": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2891
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1353": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2891
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1354": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2891
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x255D"
    },
    "1357": {
      "fn": "PirateRace.join",
      "jump": "i",
      "offset": [
        2862,
        2891
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1358": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2891
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1359": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2924
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x558"
    },
    "1362": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2924
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1363": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2924
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1364": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2924
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2571"
    },
    "1367": {
      "fn": "PirateRace.join",
      "jump": "i",
      "offset": [
        2862,
        2924
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1368": {
      "fn": "PirateRace.join",
      "offset": [
        2862,
        2924
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1369": {
      "fn": "PirateRace.join",
      "offset": [
        2846,
        2924
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1370": {
      "fn": "PirateRace.join",
      "offset": [
        2846,
        2924
      ],
      "op": "POP",
      "path": "2"
    },
    "1371": {
      "fn": "PirateRace.join",
      "offset": [
        2951,
        2954
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x64"
    },
    "1373": {
      "fn": "PirateRace.join",
      "offset": [
        2942,
        2947
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1374": {
      "fn": "PirateRace.join",
      "offset": [
        2942,
        2954
      ],
      "op": "LT",
      "path": "2"
    },
    "1375": {
      "branch": 86,
      "fn": "PirateRace.join",
      "offset": [
        2942,
        2954
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1376": {
      "fn": "PirateRace.join",
      "offset": [
        2934,
        2998
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5BB"
    },
    "1379": {
      "branch": 86,
      "fn": "PirateRace.join",
      "offset": [
        2934,
        2998
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1380": {
      "fn": "PirateRace.join",
      "offset": [
        2934,
        2998
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1382": {
      "fn": "PirateRace.join",
      "offset": [
        2934,
        2998
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1383": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1389": {
      "op": "SHL"
    },
    "1390": {
      "fn": "PirateRace.join",
      "offset": [
        2934,
        2998
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1391": {
      "fn": "PirateRace.join",
      "offset": [
        2934,
        2998
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1394": {
      "fn": "PirateRace.join",
      "offset": [
        2934,
        2998
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1396": {
      "fn": "PirateRace.join",
      "offset": [
        2934,
        2998
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1397": {
      "fn": "PirateRace.join",
      "offset": [
        2934,
        2998
      ],
      "op": "ADD",
      "path": "2"
    },
    "1398": {
      "op": "MSTORE"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1403": {
      "op": "DUP3"
    },
    "1404": {
      "op": "ADD"
    },
    "1405": {
      "op": "MSTORE"
    },
    "1406": {
      "op": "PUSH32",
      "value": "0x5265717569726573206174206C6561737420313030205169202B206551692074"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1441": {
      "op": "DUP3"
    },
    "1442": {
      "op": "ADD"
    },
    "1443": {
      "op": "MSTORE"
    },
    "1444": {
      "op": "PUSH7",
      "value": "0x3790383630BC97"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "1454": {
      "op": "SHL"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1457": {
      "op": "DUP3"
    },
    "1458": {
      "op": "ADD"
    },
    "1459": {
      "op": "MSTORE"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1462": {
      "op": "ADD"
    },
    "1463": {
      "fn": "PirateRace.join",
      "offset": [
        2934,
        2998
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "1466": {
      "op": "JUMP"
    },
    "1467": {
      "fn": "PirateRace.join",
      "offset": [
        2934,
        2998
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1468": {
      "fn": "PirateRace.join",
      "offset": [
        3037,
        3042
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 2
    },
    "1469": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3014
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "1471": {
      "fn": "PirateRace.join",
      "offset": [
        3015,
        3021
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1472": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1473": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1474": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1475": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "LT",
      "path": "2"
    },
    "1476": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CF"
    },
    "1479": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1480": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CF"
    },
    "1483": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "1486": {
      "fn": "PirateRace.join",
      "jump": "i",
      "offset": [
        3009,
        3022
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1487": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1488": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1489": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1491": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1492": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1494": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1496": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1497": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1498": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "1500": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "MUL",
      "path": "2"
    },
    "1501": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3022
      ],
      "op": "ADD",
      "path": "2"
    },
    "1502": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3033
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1504": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3033
      ],
      "op": "ADD",
      "path": "2"
    },
    "1505": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3033
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1507": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3042
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1508": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3042
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1509": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3042
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1510": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3042
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5EF"
    },
    "1513": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3042
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1514": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1515": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3042
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2571"
    },
    "1518": {
      "fn": "PirateRace.join",
      "jump": "i",
      "offset": [
        3009,
        3042
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1519": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3042
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1520": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3042
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1521": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3042
      ],
      "op": "POP",
      "path": "2"
    },
    "1522": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3042
      ],
      "op": "POP",
      "path": "2"
    },
    "1523": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3042
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1524": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1525": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3042
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1526": {
      "fn": "PirateRace.join",
      "offset": [
        3009,
        3042
      ],
      "op": "POP",
      "path": "2"
    },
    "1527": {
      "fn": "PirateRace.join",
      "offset": [
        3080,
        3081
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x1"
    },
    "1529": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3057
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "1531": {
      "fn": "PirateRace.join",
      "offset": [
        3058,
        3064
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1532": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1533": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1534": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1535": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "LT",
      "path": "2"
    },
    "1536": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60B"
    },
    "1539": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1540": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60B"
    },
    "1543": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "1546": {
      "fn": "PirateRace.join",
      "jump": "i",
      "offset": [
        3052,
        3065
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1547": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1548": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1549": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1551": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1552": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1554": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1556": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1557": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1558": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "1560": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "MUL",
      "path": "2"
    },
    "1561": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3065
      ],
      "op": "ADD",
      "path": "2"
    },
    "1562": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3076
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "1564": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3076
      ],
      "op": "ADD",
      "path": "2"
    },
    "1565": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3076
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1567": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3081
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1568": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3081
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1569": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3081
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1570": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3081
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x62B"
    },
    "1573": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3081
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1574": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3081
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1575": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3081
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2571"
    },
    "1578": {
      "fn": "PirateRace.join",
      "jump": "i",
      "offset": [
        3052,
        3081
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1579": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3081
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1580": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3081
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1581": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3081
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1582": {
      "fn": "PirateRace.join",
      "offset": [
        3052,
        3081
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1583": {
      "op": "POP"
    },
    "1584": {
      "op": "POP"
    },
    "1585": {
      "fn": "PirateRace.join",
      "offset": [
        3102,
        3112
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 4
    },
    "1586": {
      "fn": "PirateRace.join",
      "offset": [
        3091,
        3113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1588": {
      "fn": "PirateRace.join",
      "offset": [
        3091,
        3113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1589": {
      "fn": "PirateRace.join",
      "offset": [
        3091,
        3113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1590": {
      "fn": "PirateRace.join",
      "offset": [
        3091,
        3113
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1591": {
      "fn": "PirateRace.join",
      "offset": [
        3091,
        3101
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "1593": {
      "fn": "PirateRace.join",
      "offset": [
        3091,
        3113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1595": {
      "fn": "PirateRace.join",
      "offset": [
        3091,
        3113
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1596": {
      "fn": "PirateRace.join",
      "offset": [
        3091,
        3113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1597": {
      "fn": "PirateRace.join",
      "offset": [
        3091,
        3113
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1598": {
      "fn": "PirateRace.join",
      "offset": [
        3091,
        3113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1600": {
      "fn": "PirateRace.join",
      "offset": [
        3091,
        3113
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1601": {
      "fn": "PirateRace.join",
      "offset": [
        3091,
        3113
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1602": {
      "fn": "PirateRace.join",
      "offset": [
        3091,
        3113
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1603": {
      "fn": "PirateRace.join",
      "offset": [
        3091,
        3122
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1604": {
      "fn": "PirateRace.join",
      "offset": [
        3091,
        3122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1605": {
      "fn": "PirateRace.join",
      "offset": [
        3091,
        3122
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1606": {
      "fn": "PirateRace.join",
      "offset": [
        3132,
        3141
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x9"
    },
    "1608": {
      "fn": "PirateRace.join",
      "offset": [
        3132,
        3153
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1609": {
      "fn": "PirateRace.join",
      "offset": [
        3132,
        3153
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1610": {
      "fn": "PirateRace.join",
      "offset": [
        3132,
        3153
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1611": {
      "fn": "PirateRace.join",
      "offset": [
        3132,
        3153
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1612": {
      "fn": "PirateRace.join",
      "offset": [
        3132,
        3153
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1613": {
      "fn": "PirateRace.join",
      "offset": [
        3132,
        3167
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1614": {
      "fn": "PirateRace.join",
      "offset": [
        3132,
        3167
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1615": {
      "fn": "PirateRace.join",
      "offset": [
        3132,
        3167
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1616": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3208
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x6"
    },
    "1618": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1619": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1620": {
      "fn": "PirateRace.join",
      "offset": [
        3182,
        3233
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x421F2322493A06D9F34E676FFA1C281FFB19C3E128AE5F8EEE60EA3C83CDD8F6"
    },
    "1653": {
      "fn": "PirateRace.join",
      "offset": [
        3182,
        3233
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1654": {
      "fn": "PirateRace.join",
      "offset": [
        3102,
        3112
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1655": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1656": {
      "fn": "PirateRace.join",
      "offset": [
        3116,
        3122
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1657": {
      "fn": "PirateRace.join",
      "offset": [
        3116,
        3122
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1658": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1659": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "LT",
      "path": "2"
    },
    "1660": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x687"
    },
    "1663": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1664": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x687"
    },
    "1667": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "1670": {
      "fn": "PirateRace.join",
      "jump": "i",
      "offset": [
        3203,
        3216
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1671": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1672": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1673": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1675": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1676": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1678": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1680": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1681": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1682": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "1684": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "MUL",
      "path": "2"
    },
    "1685": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3216
      ],
      "op": "ADD",
      "path": "2"
    },
    "1686": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3225
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1688": {
      "fn": "PirateRace.join",
      "offset": [
        3203,
        3225
      ],
      "op": "ADD",
      "path": "2"
    },
    "1689": {
      "fn": "PirateRace.join",
      "offset": [
        3227,
        3232
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1690": {
      "fn": "PirateRace.join",
      "offset": [
        3182,
        3233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1692": {
      "fn": "PirateRace.join",
      "offset": [
        3182,
        3233
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1693": {
      "fn": "PirateRace.join",
      "offset": [
        3182,
        3233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A8"
    },
    "1696": {
      "fn": "PirateRace.join",
      "offset": [
        3182,
        3233
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1697": {
      "fn": "PirateRace.join",
      "offset": [
        3182,
        3233
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1698": {
      "fn": "PirateRace.join",
      "offset": [
        3182,
        3233
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1699": {
      "fn": "PirateRace.join",
      "offset": [
        3182,
        3233
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1700": {
      "fn": "PirateRace.join",
      "offset": [
        3182,
        3233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2651"
    },
    "1703": {
      "fn": "PirateRace.join",
      "jump": "i",
      "offset": [
        3182,
        3233
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1704": {
      "fn": "PirateRace.join",
      "offset": [
        3182,
        3233
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1705": {
      "fn": "PirateRace.join",
      "offset": [
        3182,
        3233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1707": {
      "fn": "PirateRace.join",
      "offset": [
        3182,
        3233
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1708": {
      "fn": "PirateRace.join",
      "offset": [
        3182,
        3233
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1709": {
      "fn": "PirateRace.join",
      "offset": [
        3182,
        3233
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1710": {
      "fn": "PirateRace.join",
      "offset": [
        3182,
        3233
      ],
      "op": "SUB",
      "path": "2"
    },
    "1711": {
      "fn": "PirateRace.join",
      "offset": [
        3182,
        3233
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1712": {
      "fn": "PirateRace.join",
      "offset": [
        3182,
        3233
      ],
      "op": "LOG1",
      "path": "2"
    },
    "1713": {
      "fn": "PirateRace.join",
      "offset": [
        2776,
        3240
      ],
      "op": "POP",
      "path": "2"
    },
    "1714": {
      "fn": "PirateRace.join",
      "offset": [
        2739,
        3240
      ],
      "op": "POP",
      "path": "2"
    },
    "1715": {
      "fn": "PirateRace.join",
      "jump": "o",
      "offset": [
        2739,
        3240
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1716": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8670,
        9327
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1723": {
      "op": "SHL"
    },
    "1724": {
      "op": "SUB"
    },
    "1725": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8737,
        8747
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 7
    },
    "1726": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8737,
        8747
      ],
      "op": "AND",
      "path": "2"
    },
    "1727": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8737,
        8747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1729": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8737,
        8747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1730": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8737,
        8747
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1731": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8737,
        8747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1732": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8737,
        8741
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "1734": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8737,
        8747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1736": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8737,
        8747
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1737": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8737,
        8747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1739": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8737,
        8747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1740": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8737,
        8747
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1741": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8737,
        8747
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1742": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8737,
        8747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1744": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8737,
        8747
      ],
      "op": "AND",
      "path": "2"
    },
    "1745": {
      "branch": 87,
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8736,
        8747
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1746": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8728,
        8767
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70F"
    },
    "1749": {
      "branch": 87,
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8728,
        8767
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1750": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8728,
        8767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1752": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8728,
        8767
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1753": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1759": {
      "op": "SHL"
    },
    "1760": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8728,
        8767
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1761": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8728,
        8767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1764": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8728,
        8767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1766": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8728,
        8767
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1767": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8728,
        8767
      ],
      "op": "ADD",
      "path": "2"
    },
    "1768": {
      "op": "MSTORE"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1773": {
      "op": "DUP3"
    },
    "1774": {
      "op": "ADD"
    },
    "1775": {
      "op": "MSTORE"
    },
    "1776": {
      "op": "PUSH15",
      "value": "0x185B1C9958591E481A5B881A985A5B"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "1794": {
      "op": "SHL"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1797": {
      "op": "DUP3"
    },
    "1798": {
      "op": "ADD"
    },
    "1799": {
      "op": "MSTORE"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1802": {
      "op": "ADD"
    },
    "1803": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8728,
        8767
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "1806": {
      "op": "JUMP"
    },
    "1807": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8728,
        8767
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1808": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1810": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8829
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1811": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8829
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1812": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1814": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1815": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1822": {
      "op": "SHL"
    },
    "1823": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1824": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1831": {
      "op": "SHL"
    },
    "1832": {
      "op": "SUB"
    },
    "1833": {
      "op": "DUP5"
    },
    "1834": {
      "op": "DUP2"
    },
    "1835": {
      "op": "AND"
    },
    "1836": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1837": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1838": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "ADD",
      "path": "2"
    },
    "1839": {
      "op": "SWAP4"
    },
    "1840": {
      "op": "SWAP1"
    },
    "1841": {
      "op": "SWAP4"
    },
    "1842": {
      "op": "MSTORE"
    },
    "1843": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8777,
        8797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1845": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8777,
        8797
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1846": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8846,
        8850
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xDE0B6B3A7640000"
    },
    "1855": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8846,
        8850
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1856": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8829
      ],
      "op": "AND",
      "path": "2"
    },
    "1857": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8829
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1858": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8839
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "1863": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8839
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1866": {
      "op": "ADD"
    },
    "1867": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1869": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1871": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1872": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1873": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1874": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "SUB",
      "path": "2"
    },
    "1875": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1876": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1877": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "GAS",
      "path": "2"
    },
    "1878": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "1879": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1880": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1881": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1882": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x767"
    },
    "1885": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1886": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1887": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1889": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1890": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1891": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1892": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1894": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1895": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1896": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "POP",
      "path": "2"
    },
    "1897": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "POP",
      "path": "2"
    },
    "1898": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "POP",
      "path": "2"
    },
    "1899": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "POP",
      "path": "2"
    },
    "1900": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1902": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1903": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1904": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1906": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "NOT",
      "path": "2"
    },
    "1907": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1909": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1910": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "ADD",
      "path": "2"
    },
    "1911": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "AND",
      "path": "2"
    },
    "1912": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1913": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "ADD",
      "path": "2"
    },
    "1914": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1915": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1917": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1918": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "POP",
      "path": "2"
    },
    "1919": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1920": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "ADD",
      "path": "2"
    },
    "1921": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1922": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x78B"
    },
    "1925": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1926": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1927": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2518"
    },
    "1930": {
      "fn": "PirateRace.checkForgedPapers",
      "jump": "i",
      "offset": [
        8826,
        8845
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1931": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8845
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1932": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8850
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x795"
    },
    "1935": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8850
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1936": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8850
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1937": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8850
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x255D"
    },
    "1940": {
      "fn": "PirateRace.checkForgedPapers",
      "jump": "i",
      "offset": [
        8826,
        8850
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1941": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8826,
        8850
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1942": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1944": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8802
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1945": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1947": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1948": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1955": {
      "op": "SHL"
    },
    "1956": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1957": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1964": {
      "op": "SHL"
    },
    "1965": {
      "op": "SUB"
    },
    "1966": {
      "op": "DUP6"
    },
    "1967": {
      "op": "DUP2"
    },
    "1968": {
      "op": "AND"
    },
    "1969": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1971": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1972": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "ADD",
      "path": "2"
    },
    "1973": {
      "op": "MSTORE"
    },
    "1974": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8819,
        8823
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xDE0B6B3A7640000"
    },
    "1983": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8819,
        8823
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1984": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1987": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1988": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8802
      ],
      "op": "DIV",
      "path": "2"
    },
    "1989": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8802
      ],
      "op": "AND",
      "path": "2"
    },
    "1990": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1991": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8812
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "1996": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8812
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1999": {
      "op": "ADD"
    },
    "2000": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2002": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2004": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2005": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2006": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2007": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "SUB",
      "path": "2"
    },
    "2008": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2009": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2010": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "GAS",
      "path": "2"
    },
    "2011": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2012": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2013": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2014": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2015": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7EC"
    },
    "2018": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2019": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2020": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2022": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2023": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2024": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2025": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2027": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2028": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2029": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "POP",
      "path": "2"
    },
    "2030": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "POP",
      "path": "2"
    },
    "2031": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "POP",
      "path": "2"
    },
    "2032": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "POP",
      "path": "2"
    },
    "2033": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2035": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2036": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2037": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2039": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "NOT",
      "path": "2"
    },
    "2040": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2042": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2043": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "ADD",
      "path": "2"
    },
    "2044": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "AND",
      "path": "2"
    },
    "2045": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2046": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "ADD",
      "path": "2"
    },
    "2047": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2048": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2050": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2051": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "POP",
      "path": "2"
    },
    "2052": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2053": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "ADD",
      "path": "2"
    },
    "2054": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2055": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x810"
    },
    "2058": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2059": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2060": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2518"
    },
    "2063": {
      "fn": "PirateRace.checkForgedPapers",
      "jump": "i",
      "offset": [
        8800,
        8818
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2064": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8818
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2065": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8823
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x81A"
    },
    "2068": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2069": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2070": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8823
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x255D"
    },
    "2073": {
      "fn": "PirateRace.checkForgedPapers",
      "jump": "i",
      "offset": [
        8800,
        8823
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2074": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8823
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2075": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8850
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x824"
    },
    "2078": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8850
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2079": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8850
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2080": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8850
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2571"
    },
    "2083": {
      "fn": "PirateRace.checkForgedPapers",
      "jump": "i",
      "offset": [
        8800,
        8850
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2084": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8800,
        8850
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2091": {
      "op": "SHL"
    },
    "2092": {
      "op": "SUB"
    },
    "2093": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8899
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2094": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8899
      ],
      "op": "AND",
      "path": "2"
    },
    "2095": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8860,
        8881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2097": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8899
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2098": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8899
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2099": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8899
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2100": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8893
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "2102": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2104": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8899
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2105": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8899
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2106": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8899
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2107": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2109": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8899
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2110": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8899
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2111": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8899
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2112": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8905
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2113": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8932,
        8942
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2115": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8932,
        8948
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2116": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8932,
        8948
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2117": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8932,
        8948
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2118": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8932,
        8948
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2119": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8932,
        8948
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2120": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8932,
        8948
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2121": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8932,
        8948
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2122": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8777,
        8850
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2123": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8777,
        8850
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2124": {
      "op": "POP"
    },
    "2125": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8905
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2126": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8905
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2127": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8932,
        8948
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2128": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8994,
        8996
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "2130": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8994,
        8996
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2131": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8978,
        8993
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85D"
    },
    "2134": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8978,
        8993
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2135": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8905
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2136": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8884,
        8905
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2137": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8978,
        8993
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2685"
    },
    "2140": {
      "fn": "PirateRace.checkForgedPapers",
      "jump": "i",
      "offset": [
        8978,
        8993
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2141": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8978,
        8993
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2142": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8978,
        8996
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x867"
    },
    "2145": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8978,
        8996
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2146": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8978,
        8996
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2147": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8978,
        8996
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x255D"
    },
    "2150": {
      "fn": "PirateRace.checkForgedPapers",
      "jump": "i",
      "offset": [
        8978,
        8996
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2151": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8978,
        8996
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2152": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8963,
        8975
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2153": {
      "branch": 88,
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8963,
        8996
      ],
      "op": "LT",
      "path": "2"
    },
    "2154": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8959,
        9320
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2155": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8959,
        9320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9AF"
    },
    "2158": {
      "branch": 88,
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8959,
        9320
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2165": {
      "op": "SHL"
    },
    "2166": {
      "op": "SUB"
    },
    "2167": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9012,
        9022
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 8
    },
    "2168": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9012,
        9022
      ],
      "op": "AND",
      "path": "2"
    },
    "2169": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9012,
        9022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2171": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9012,
        9022
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2172": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9012,
        9022
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2173": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9012,
        9022
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2174": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9012,
        9016
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "2176": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9012,
        9022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2178": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9012,
        9022
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2179": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9012,
        9022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2181": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9012,
        9022
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2182": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9012,
        9022
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2183": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9012,
        9029
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2184": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9012,
        9029
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2187": {
      "op": "NOT"
    },
    "2188": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9012,
        9029
      ],
      "op": "AND",
      "path": "2"
    },
    "2189": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9025,
        9029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2191": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9012,
        9029
      ],
      "op": "OR",
      "path": "2"
    },
    "2192": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9012,
        9029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2193": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9012,
        9029
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2194": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9074,
        9091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x89C"
    },
    "2197": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9074,
        9087
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2198": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9090,
        9091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2200": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9074,
        9091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2685"
    },
    "2203": {
      "fn": "PirateRace.checkForgedPapers",
      "jump": "i",
      "offset": [
        9074,
        9091
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2204": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9074,
        9091
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2205": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9052
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2207": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9053,
        9059
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2208": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2209": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2210": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2211": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "LT",
      "path": "2"
    },
    "2212": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8AF"
    },
    "2215": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2216": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8AF"
    },
    "2219": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "2222": {
      "fn": "PirateRace.checkForgedPapers",
      "jump": "i",
      "offset": [
        9047,
        9060
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2223": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2224": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2225": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2227": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2228": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2230": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2232": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2233": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2234": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2236": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "MUL",
      "path": "2"
    },
    "2237": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9060
      ],
      "op": "ADD",
      "path": "2"
    },
    "2238": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9071
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2240": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9071
      ],
      "op": "ADD",
      "path": "2"
    },
    "2241": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9071
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2242": {
      "branch": 89,
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9047,
        9091
      ],
      "op": "GT",
      "path": "2"
    },
    "2243": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9043,
        9244
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2244": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9043,
        9244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x910"
    },
    "2247": {
      "branch": 89,
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9043,
        9244
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2248": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9147,
        9164
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 9,
      "value": "0x8D2"
    },
    "2251": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9147,
        9160
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2252": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9163,
        9164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2254": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9147,
        9164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2685"
    },
    "2257": {
      "fn": "PirateRace.checkForgedPapers",
      "jump": "i",
      "offset": [
        9147,
        9164
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2258": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9147,
        9164
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2259": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9124
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2261": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9125,
        9131
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2262": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2263": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2264": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2265": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "LT",
      "path": "2"
    },
    "2266": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E5"
    },
    "2269": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2270": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E5"
    },
    "2273": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "2276": {
      "fn": "PirateRace.checkForgedPapers",
      "jump": "i",
      "offset": [
        9119,
        9132
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2277": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2278": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2279": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2281": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2282": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2284": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2286": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2287": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2288": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2290": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "MUL",
      "path": "2"
    },
    "2291": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9132
      ],
      "op": "ADD",
      "path": "2"
    },
    "2292": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2294": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9143
      ],
      "op": "ADD",
      "path": "2"
    },
    "2295": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2297": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9164
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2298": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9164
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2299": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9164
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2300": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x905"
    },
    "2303": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9164
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2304": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9164
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2305": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x269C"
    },
    "2308": {
      "fn": "PirateRace.checkForgedPapers",
      "jump": "i",
      "offset": [
        9119,
        9164
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2309": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9164
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2310": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9164
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2311": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9164
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2312": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9119,
        9164
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2313": {
      "op": "POP"
    },
    "2314": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9043,
        9244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x937"
    },
    "2317": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9043,
        9244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2318": {
      "op": "POP"
    },
    "2319": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9043,
        9244
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2320": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9043,
        9244
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2321": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9228,
        9229
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 10,
      "value": "0x0"
    },
    "2323": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9206
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2325": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9207,
        9213
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2326": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2327": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2328": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2329": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "LT",
      "path": "2"
    },
    "2330": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x925"
    },
    "2333": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2334": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x925"
    },
    "2337": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "2340": {
      "fn": "PirateRace.checkForgedPapers",
      "jump": "i",
      "offset": [
        9201,
        9214
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2341": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2342": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2344": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2345": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2346": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2347": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2349": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2350": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2351": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2352": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2354": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2355": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2356": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "MUL",
      "path": "2"
    },
    "2357": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9214
      ],
      "op": "ADD",
      "path": "2"
    },
    "2358": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9201,
        9229
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2359": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9043,
        9244
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2366": {
      "op": "SHL"
    },
    "2367": {
      "op": "SUB"
    },
    "2368": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9282,
        9298
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 11
    },
    "2369": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9282,
        9298
      ],
      "op": "AND",
      "path": "2"
    },
    "2370": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9282,
        9298
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2372": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9282,
        9298
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2373": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9282,
        9298
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2374": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9282,
        9298
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2375": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9282,
        9292
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2377": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9282,
        9298
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2379": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9282,
        9298
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2380": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9282,
        9298
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2382": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9282,
        9298
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2383": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9282,
        9298
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2384": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9282,
        9298
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2385": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2387": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2388": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2389": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9263,
        9309
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x3A20C27241F03F182FDEA2523631CB8DBE89E8C84A05CDB19F6F804D58F8F3C7"
    },
    "2422": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9263,
        9309
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2423": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9270,
        9274
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2424": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9270,
        9274
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2425": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9281
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2426": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2427": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "LT",
      "path": "2"
    },
    "2428": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x987"
    },
    "2431": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2432": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x987"
    },
    "2435": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "2438": {
      "fn": "PirateRace.checkForgedPapers",
      "jump": "i",
      "offset": [
        9276,
        9299
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2439": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2440": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2441": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2443": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2444": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2446": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2448": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2449": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2450": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2452": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "MUL",
      "path": "2"
    },
    "2453": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9299
      ],
      "op": "ADD",
      "path": "2"
    },
    "2454": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9308
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2456": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9276,
        9308
      ],
      "op": "ADD",
      "path": "2"
    },
    "2457": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9263,
        9309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2459": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9263,
        9309
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2460": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9263,
        9309
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A6"
    },
    "2463": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9263,
        9309
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2464": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9263,
        9309
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2465": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9263,
        9309
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2466": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9263,
        9309
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26AF"
    },
    "2469": {
      "fn": "PirateRace.checkForgedPapers",
      "jump": "i",
      "offset": [
        9263,
        9309
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2470": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9263,
        9309
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2471": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9263,
        9309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2473": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9263,
        9309
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2474": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9263,
        9309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2475": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9263,
        9309
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2476": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9263,
        9309
      ],
      "op": "SUB",
      "path": "2"
    },
    "2477": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9263,
        9309
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2478": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        9263,
        9309
      ],
      "op": "LOG1",
      "path": "2"
    },
    "2479": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8959,
        9320
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2480": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8718,
        9327
      ],
      "op": "POP",
      "path": "2"
    },
    "2481": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8718,
        9327
      ],
      "op": "POP",
      "path": "2"
    },
    "2482": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8718,
        9327
      ],
      "op": "POP",
      "path": "2"
    },
    "2483": {
      "fn": "PirateRace.checkForgedPapers",
      "offset": [
        8670,
        9327
      ],
      "op": "POP",
      "path": "2"
    },
    "2484": {
      "fn": "PirateRace.checkForgedPapers",
      "jump": "o",
      "offset": [
        8670,
        9327
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2485": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        6971,
        8111
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2486": {
      "offset": [
        9376,
        9387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2488": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9376,
        9387
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2489": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9376,
        9387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2491": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9376,
        9387
      ],
      "op": "AND",
      "path": "2"
    },
    "2492": {
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9D7"
    },
    "2495": {
      "offset": [
        9368,
        9421
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2496": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2498": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9368,
        9421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2499": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2505": {
      "op": "SHL"
    },
    "2506": {
      "offset": [
        9368,
        9421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2507": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9368,
        9421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2508": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2510": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9368,
        9421
      ],
      "op": "ADD",
      "path": "2"
    },
    "2511": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "2514": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9368,
        9421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2515": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26DB"
    },
    "2518": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        9368,
        9421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2519": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9368,
        9421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2520": {
      "offset": [
        9850,
        9860
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2521": {
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2523": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9845,
        9861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2524": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9845,
        9861
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2525": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9845,
        9861
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2526": {
      "offset": [
        9845,
        9849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "2528": {
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2530": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9845,
        9861
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2531": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2533": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9845,
        9861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2534": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9845,
        9861
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2535": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9845,
        9861
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2536": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2538": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9845,
        9861
      ],
      "op": "AND",
      "path": "2"
    },
    "2539": {
      "offset": [
        9844,
        9861
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2540": {
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA07"
    },
    "2543": {
      "offset": [
        9836,
        9887
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2544": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2546": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9836,
        9887
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2547": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2553": {
      "op": "SHL"
    },
    "2554": {
      "offset": [
        9836,
        9887
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2555": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9836,
        9887
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2556": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2558": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9836,
        9887
      ],
      "op": "ADD",
      "path": "2"
    },
    "2559": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "2562": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9836,
        9887
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2563": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2712"
    },
    "2566": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        9836,
        9887
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2567": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        9836,
        9887
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2568": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7065,
        7075
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2569": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7037,
        7051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2571": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7054,
        7076
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2572": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7054,
        7076
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2573": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7054,
        7076
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2574": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7054,
        7064
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2576": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7054,
        7076
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2578": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7054,
        7076
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2579": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7054,
        7076
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2581": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7054,
        7076
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2582": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7054,
        7076
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2583": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7054,
        7076
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2584": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7099
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x6"
    },
    "2586": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2587": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2588": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7122,
        7123
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2590": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7122,
        7123
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2591": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7099
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2592": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7054,
        7076
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2593": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7054,
        7076
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2594": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2595": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "LT",
      "path": "2"
    },
    "2596": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA2F"
    },
    "2599": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2600": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA2F"
    },
    "2603": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "2606": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        7094,
        7107
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2607": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2608": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2609": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2611": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2612": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2614": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2616": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2617": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2618": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2620": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "MUL",
      "path": "2"
    },
    "2621": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7107
      ],
      "op": "ADD",
      "path": "2"
    },
    "2622": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2624": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7118
      ],
      "op": "ADD",
      "path": "2"
    },
    "2625": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2626": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7123
      ],
      "op": "LT",
      "path": "2"
    },
    "2627": {
      "branch": 90,
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7094,
        7123
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2628": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7086,
        7166
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA9E"
    },
    "2631": {
      "branch": 90,
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7086,
        7166
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2632": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7086,
        7166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2634": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7086,
        7166
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2635": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2641": {
      "op": "SHL"
    },
    "2642": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7086,
        7166
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2643": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7086,
        7166
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2646": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7086,
        7166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2648": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7086,
        7166
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2649": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7086,
        7166
      ],
      "op": "ADD",
      "path": "2"
    },
    "2650": {
      "op": "MSTORE"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2655": {
      "op": "DUP3"
    },
    "2656": {
      "op": "ADD"
    },
    "2657": {
      "op": "MSTORE"
    },
    "2658": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F756768206D6F6E657920746F206275792061206D7973746572"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2693": {
      "op": "DUP3"
    },
    "2694": {
      "op": "ADD"
    },
    "2695": {
      "op": "MSTORE"
    },
    "2696": {
      "op": "PUSH6",
      "value": "0x3C903137BC17"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "2705": {
      "op": "SHL"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2708": {
      "op": "DUP3"
    },
    "2709": {
      "op": "ADD"
    },
    "2710": {
      "op": "MSTORE"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2713": {
      "op": "ADD"
    },
    "2714": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7086,
        7166
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "2717": {
      "op": "JUMP"
    },
    "2718": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7086,
        7166
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2719": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7204,
        7205
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 13,
      "value": "0x5"
    },
    "2721": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7181
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2723": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7182,
        7188
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2724": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2725": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2726": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2727": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "LT",
      "path": "2"
    },
    "2728": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAB3"
    },
    "2731": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2732": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAB3"
    },
    "2735": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "2738": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        7176,
        7189
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2739": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2740": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2741": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2743": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2744": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2746": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2748": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2749": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2750": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2752": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "MUL",
      "path": "2"
    },
    "2753": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7189
      ],
      "op": "ADD",
      "path": "2"
    },
    "2754": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2756": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7200
      ],
      "op": "ADD",
      "path": "2"
    },
    "2757": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2759": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7205
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2760": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7205
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2761": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7205
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2762": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAD3"
    },
    "2765": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7205
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2766": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7205
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2767": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x269C"
    },
    "2770": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        7176,
        7205
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2771": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2772": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7205
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2773": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7205
      ],
      "op": "POP",
      "path": "2"
    },
    "2774": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7205
      ],
      "op": "POP",
      "path": "2"
    },
    "2775": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7205
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2776": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7205
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2777": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7205
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2778": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7176,
        7205
      ],
      "op": "POP",
      "path": "2"
    },
    "2779": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7224,
        7238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2781": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7252,
        7269
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2782": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7340,
        7343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "2784": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7307,
        7322
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "2785": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7324,
        7334
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2786": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2788": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2789": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2791": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "ADD",
      "path": "2"
    },
    "2792": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0D"
    },
    "2795": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2796": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2797": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2798": {
      "op": "SWAP2"
    },
    "2799": {
      "op": "DUP3"
    },
    "2800": {
      "op": "MSTORE"
    },
    "2801": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2803": {
      "op": "SHL"
    },
    "2804": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2817": {
      "op": "NOT"
    },
    "2818": {
      "op": "AND"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2821": {
      "op": "DUP3"
    },
    "2822": {
      "op": "ADD"
    },
    "2823": {
      "op": "MSTORE"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "2826": {
      "op": "ADD"
    },
    "2827": {
      "op": "SWAP1"
    },
    "2828": {
      "op": "JUMP"
    },
    "2829": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2830": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2832": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2833": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2835": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2836": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2837": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "SUB",
      "path": "2"
    },
    "2838": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "SUB",
      "path": "2"
    },
    "2839": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2840": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2841": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2842": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2844": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7290,
        7335
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2845": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7280,
        7336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2846": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7280,
        7336
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2847": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7280,
        7336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2848": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7280,
        7336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2850": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7280,
        7336
      ],
      "op": "ADD",
      "path": "2"
    },
    "2851": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7280,
        7336
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2852": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7272,
        7337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2854": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7272,
        7337
      ],
      "op": "SHR",
      "path": "2"
    },
    "2855": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7272,
        7343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB30"
    },
    "2858": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7272,
        7343
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2859": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7272,
        7343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2860": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7272,
        7343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2741"
    },
    "2863": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        7272,
        7343
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2864": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7272,
        7343
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2865": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7252,
        7343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2866": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7252,
        7343
      ],
      "op": "POP",
      "path": "2"
    },
    "2867": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7378,
        7380
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x32"
    },
    "2869": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7366,
        7375
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2870": {
      "branch": 91,
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7366,
        7380
      ],
      "op": "LT",
      "path": "2"
    },
    "2871": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7362,
        7957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCDB"
    },
    "2874": {
      "branch": 91,
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7362,
        7957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2875": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7446,
        7448
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x41"
    },
    "2877": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7434,
        7443
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2878": {
      "branch": 92,
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7434,
        7448
      ],
      "op": "LT",
      "path": "2"
    },
    "2879": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7430,
        7957
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2880": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7430,
        7957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB87"
    },
    "2883": {
      "branch": 92,
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7430,
        7957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2884": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7506,
        7509
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 14,
      "value": "0xC8"
    },
    "2886": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7483
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2888": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7484,
        7490
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2889": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2890": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2891": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2892": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "LT",
      "path": "2"
    },
    "2893": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB58"
    },
    "2896": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2897": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB58"
    },
    "2900": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "2903": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        7478,
        7491
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2904": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2905": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2906": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2908": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2909": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2911": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2913": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2914": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2915": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2917": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "MUL",
      "path": "2"
    },
    "2918": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7491
      ],
      "op": "ADD",
      "path": "2"
    },
    "2919": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7502
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2921": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7502
      ],
      "op": "ADD",
      "path": "2"
    },
    "2922": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7502
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2924": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7509
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2925": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7509
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2926": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7509
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2927": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7509
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB78"
    },
    "2930": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7509
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2931": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7509
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2932": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7509
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2571"
    },
    "2935": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        7478,
        7509
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2936": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7509
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2937": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7509
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2938": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7509
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2939": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7478,
        7509
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2940": {
      "op": "POP"
    },
    "2941": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7532,
        7533
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 15,
      "value": "0x1"
    },
    "2943": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7532,
        7533
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2944": {
      "op": "POP"
    },
    "2945": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7430,
        7957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCDB"
    },
    "2948": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7430,
        7957
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2949": {
      "op": "POP"
    },
    "2950": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7430,
        7957
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2951": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7430,
        7957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2952": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7566,
        7568
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x55"
    },
    "2954": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7554,
        7563
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2955": {
      "branch": 93,
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7554,
        7568
      ],
      "op": "LT",
      "path": "2"
    },
    "2956": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7550,
        7957
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2957": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7550,
        7957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4C"
    },
    "2960": {
      "branch": 93,
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7550,
        7957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2961": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7624,
        7625
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 16,
      "value": "0x2"
    },
    "2963": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2965": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7607,
        7613
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2966": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2967": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2968": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2969": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "LT",
      "path": "2"
    },
    "2970": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBA5"
    },
    "2973": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2974": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBA5"
    },
    "2977": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "2980": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        7601,
        7614
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2981": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2982": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2983": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2985": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2986": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2988": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2990": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2991": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2992": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2994": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "MUL",
      "path": "2"
    },
    "2995": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7614
      ],
      "op": "ADD",
      "path": "2"
    },
    "2996": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2998": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7620
      ],
      "op": "ADD",
      "path": "2"
    },
    "2999": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3001": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7625
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3002": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7625
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3003": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7625
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3004": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7625
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC5"
    },
    "3007": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7625
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3008": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7625
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3009": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7625
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2571"
    },
    "3012": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        7601,
        7625
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3013": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7625
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3014": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7625
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3015": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7625
      ],
      "op": "POP",
      "path": "2"
    },
    "3016": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7625
      ],
      "op": "POP",
      "path": "2"
    },
    "3017": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7625
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3018": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7625
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3019": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7625
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3020": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7601,
        7625
      ],
      "op": "POP",
      "path": "2"
    },
    "3021": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7664,
        7665
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0x2"
    },
    "3023": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "3025": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7645,
        7651
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3026": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3027": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3028": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3029": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "LT",
      "path": "2"
    },
    "3030": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBE1"
    },
    "3033": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3034": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBE1"
    },
    "3037": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "3040": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        7639,
        7652
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3041": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3042": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3043": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3045": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3046": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3048": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3050": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3051": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3052": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3054": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "MUL",
      "path": "2"
    },
    "3055": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7652
      ],
      "op": "ADD",
      "path": "2"
    },
    "3056": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3058": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7660
      ],
      "op": "ADD",
      "path": "2"
    },
    "3059": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3061": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7665
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3062": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7665
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3063": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7665
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3064": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC01"
    },
    "3067": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7665
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3068": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3069": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2571"
    },
    "3072": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        7639,
        7665
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3073": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7665
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3074": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7665
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3075": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7665
      ],
      "op": "POP",
      "path": "2"
    },
    "3076": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7665
      ],
      "op": "POP",
      "path": "2"
    },
    "3077": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7665
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3078": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3079": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7665
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3080": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7639,
        7665
      ],
      "op": "POP",
      "path": "2"
    },
    "3081": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7703,
        7704
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 18,
      "value": "0x2"
    },
    "3083": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "3085": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7685,
        7691
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3086": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3087": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3088": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3089": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "LT",
      "path": "2"
    },
    "3090": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC1D"
    },
    "3093": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3094": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC1D"
    },
    "3097": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "3100": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        7679,
        7692
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3101": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3102": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3103": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3105": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3106": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3108": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3110": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3111": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3112": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3114": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "MUL",
      "path": "2"
    },
    "3115": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7692
      ],
      "op": "ADD",
      "path": "2"
    },
    "3116": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "3118": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7699
      ],
      "op": "ADD",
      "path": "2"
    },
    "3119": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3121": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7704
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3122": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7704
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3123": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7704
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3124": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3D"
    },
    "3127": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7704
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3128": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7704
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3129": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2571"
    },
    "3132": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        7679,
        7704
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3133": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7704
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3134": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7704
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3135": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7704
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3136": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7679,
        7704
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3137": {
      "op": "POP"
    },
    "3138": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7727,
        7728
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 19,
      "value": "0x2"
    },
    "3140": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7727,
        7728
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3141": {
      "op": "POP"
    },
    "3142": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7550,
        7957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCDB"
    },
    "3145": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7550,
        7957
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3146": {
      "op": "POP"
    },
    "3147": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7550,
        7957
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3148": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7550,
        7957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3149": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7794,
        7803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3151": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7789,
        7902
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3152": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7813,
        7818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "3154": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7813,
        7825
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3155": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7809,
        7825
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3156": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7809,
        7825
      ],
      "op": "LT",
      "path": "2"
    },
    "3157": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7789,
        7902
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3158": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7789,
        7902
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD5"
    },
    "3161": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7789,
        7902
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3162": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7902
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 20,
      "value": "0xC9C"
    },
    "3165": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7898,
        7901
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "3167": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7893
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC96"
    },
    "3170": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7890,
        7892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5A"
    },
    "3172": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7873
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "3174": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7874,
        7875
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3175": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3176": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3177": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3178": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "LT",
      "path": "2"
    },
    "3179": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC76"
    },
    "3182": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3183": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC76"
    },
    "3186": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "3189": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        7868,
        7876
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3190": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3191": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3192": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3194": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3195": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3197": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3199": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3200": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3201": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3203": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "MUL",
      "path": "2"
    },
    "3204": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7876
      ],
      "op": "ADD",
      "path": "2"
    },
    "3205": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7885
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3207": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7885
      ],
      "op": "ADD",
      "path": "2"
    },
    "3208": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7885
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3209": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7889
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B3"
    },
    "3212": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7889
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3213": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7893
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3214": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7893
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3215": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7893
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "3220": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7893
      ],
      "op": "AND",
      "path": "2"
    },
    "3221": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        7868,
        7893
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3222": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7893
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3223": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7897
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3224": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7897
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22C8"
    },
    "3227": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        7868,
        7902
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3228": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7868,
        7902
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3229": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7853
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "3231": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7854,
        7855
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3232": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3233": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3234": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3235": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "LT",
      "path": "2"
    },
    "3236": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCAF"
    },
    "3239": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3240": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCAF"
    },
    "3243": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "3246": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        7848,
        7856
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3247": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3248": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3250": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3251": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3252": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3253": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3255": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3256": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3257": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3258": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3260": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3262": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3263": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3264": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "MUL",
      "path": "2"
    },
    "3265": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7856
      ],
      "op": "ADD",
      "path": "2"
    },
    "3266": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7865
      ],
      "op": "ADD",
      "path": "2"
    },
    "3267": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7848,
        7902
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3268": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7827,
        7830
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 21
    },
    "3269": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7827,
        7830
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCCD"
    },
    "3272": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7827,
        7830
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3273": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7827,
        7830
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2755"
    },
    "3276": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        7827,
        7830
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3277": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7827,
        7830
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3278": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7827,
        7830
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3279": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7827,
        7830
      ],
      "op": "POP",
      "path": "2"
    },
    "3280": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7827,
        7830
      ],
      "op": "POP",
      "path": "2"
    },
    "3281": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7789,
        7902
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4F"
    },
    "3284": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7789,
        7902
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3285": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7789,
        7902
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3286": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7789,
        7902
      ],
      "op": "POP",
      "path": "2"
    },
    "3287": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7945,
        7946
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 22,
      "value": "0x3"
    },
    "3289": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7936,
        7946
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3290": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7936,
        7946
      ],
      "op": "POP",
      "path": "2"
    },
    "3291": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7550,
        7957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3292": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7985,
        7995
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 23
    },
    "3293": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        7996
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3295": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        7996
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3296": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        7996
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3297": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        7996
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3298": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        7984
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "3300": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        7996
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3302": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        7996
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3303": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        7996
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3305": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        7996
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3306": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        7996
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3307": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8008,
        8009
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3309": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        8004
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3310": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        8004
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3311": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        8004
      ],
      "op": "ADD",
      "path": "2"
    },
    "3312": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        8009
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3313": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        8009
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3314": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8008,
        8009
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3315": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8008,
        8009
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3316": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        8004
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3317": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        8004
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3318": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        8009
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD00"
    },
    "3321": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        8009
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3322": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8008,
        8009
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3323": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8008,
        8009
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3324": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        8009
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2571"
    },
    "3327": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        7975,
        8009
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3328": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        8009
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3329": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        8009
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3330": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        8009
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3331": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7975,
        8009
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3332": {
      "op": "POP"
    },
    "3333": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8019,
        8035
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 24,
      "value": "0xD0E"
    },
    "3336": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8019,
        8035
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3337": {
      "op": "POP"
    },
    "3338": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8019,
        8033
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12EF"
    },
    "3341": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        8019,
        8035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3342": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8019,
        8035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3343": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8050,
        8104
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 25,
      "value": "0x963F55B912749794FC60E09989F975D99E32135EBDC74C70CE5CA23C86828A77"
    },
    "3376": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8061,
        8071
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3377": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8078
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "3379": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8079,
        8085
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3380": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3381": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3382": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3383": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "LT",
      "path": "2"
    },
    "3384": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD43"
    },
    "3387": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3388": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD43"
    },
    "3391": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "3394": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        8073,
        8086
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3395": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3396": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3397": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3399": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3400": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3402": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3404": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3405": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3406": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3408": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "MUL",
      "path": "2"
    },
    "3409": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8086
      ],
      "op": "ADD",
      "path": "2"
    },
    "3410": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3412": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8073,
        8095
      ],
      "op": "ADD",
      "path": "2"
    },
    "3413": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8097,
        8103
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3414": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8050,
        8104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3416": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8050,
        8104
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3417": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8050,
        8104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD64"
    },
    "3420": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8050,
        8104
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3421": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8050,
        8104
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3422": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8050,
        8104
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3423": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8050,
        8104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3424": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8050,
        8104
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2651"
    },
    "3427": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        8050,
        8104
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3428": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8050,
        8104
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3429": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8050,
        8104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3431": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8050,
        8104
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3432": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8050,
        8104
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3433": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8050,
        8104
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3434": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8050,
        8104
      ],
      "op": "SUB",
      "path": "2"
    },
    "3435": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8050,
        8104
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3436": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        8050,
        8104
      ],
      "op": "LOG1",
      "path": "2"
    },
    "3437": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7027,
        8111
      ],
      "op": "POP",
      "path": "2"
    },
    "3438": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7027,
        8111
      ],
      "op": "POP",
      "path": "2"
    },
    "3439": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        7027,
        8111
      ],
      "op": "POP",
      "path": "2"
    },
    "3440": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "o",
      "offset": [
        6971,
        8111
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3441": {
      "offset": [
        787,
        806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3442": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "3444": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3445": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3446": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3447": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3448": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "LT",
      "path": "2"
    },
    "3449": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD81"
    },
    "3452": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3453": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3455": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3456": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3457": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3458": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3460": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3461": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3462": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3463": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3465": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3466": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3467": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3468": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3470": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3471": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3472": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "MUL",
      "path": "2"
    },
    "3473": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "ADD",
      "path": "2"
    },
    "3474": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3475": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3476": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3478": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3479": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "ADD",
      "path": "2"
    },
    "3480": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3481": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3482": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3483": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3484": {
      "op": "POP"
    },
    "3485": {
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3486": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA6"
    },
    "3489": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3490": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x259A"
    },
    "3493": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        787,
        806
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3494": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3495": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3496": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3498": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "ADD",
      "path": "2"
    },
    "3499": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3501": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3502": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3503": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DIV",
      "path": "2"
    },
    "3504": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "MUL",
      "path": "2"
    },
    "3505": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3507": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "ADD",
      "path": "2"
    },
    "3508": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3510": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3511": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3512": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3513": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "ADD",
      "path": "2"
    },
    "3514": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3516": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3517": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3518": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3519": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3520": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3521": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3522": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3523": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3524": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3526": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "ADD",
      "path": "2"
    },
    "3527": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3528": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3529": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3530": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDD2"
    },
    "3533": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3534": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x259A"
    },
    "3537": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "i",
      "offset": [
        787,
        806
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3538": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3539": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3540": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3541": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE1F"
    },
    "3544": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3545": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3546": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3548": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "LT",
      "path": "2"
    },
    "3549": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF4"
    },
    "3552": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3553": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3556": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3557": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3558": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3559": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DIV",
      "path": "2"
    },
    "3560": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "MUL",
      "path": "2"
    },
    "3561": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3562": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3563": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3564": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3566": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "ADD",
      "path": "2"
    },
    "3567": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3568": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE1F"
    },
    "3571": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3572": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3573": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3574": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "ADD",
      "path": "2"
    },
    "3575": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3576": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3577": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3579": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3580": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3582": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3584": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3585": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3586": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3587": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3588": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3589": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3590": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3591": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3592": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3594": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "ADD",
      "path": "2"
    },
    "3595": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3596": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3598": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "ADD",
      "path": "2"
    },
    "3599": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3600": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3601": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "GT",
      "path": "2"
    },
    "3602": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE02"
    },
    "3605": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3606": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3607": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3608": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SUB",
      "path": "2"
    },
    "3609": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3611": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "AND",
      "path": "2"
    },
    "3612": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3613": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "ADD",
      "path": "2"
    },
    "3614": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3615": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3616": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "POP",
      "path": "2"
    },
    "3617": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "POP",
      "path": "2"
    },
    "3618": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "POP",
      "path": "2"
    },
    "3619": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "POP",
      "path": "2"
    },
    "3620": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "POP",
      "path": "2"
    },
    "3621": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3622": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3623": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3625": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "ADD",
      "path": "2"
    },
    "3626": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3627": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3628": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3629": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3631": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "ADD",
      "path": "2"
    },
    "3632": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3633": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3634": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3635": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3637": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "ADD",
      "path": "2"
    },
    "3638": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3639": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3640": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3641": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "3643": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "ADD",
      "path": "2"
    },
    "3644": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3645": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3646": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3647": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "3649": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "ADD",
      "path": "2"
    },
    "3650": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3651": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3652": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "POP",
      "path": "2"
    },
    "3653": {
      "fn": "PirateRace.buyMysteryBox",
      "offset": [
        787,
        806
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3654": {
      "fn": "PirateRace.buyMysteryBox",
      "jump": "o",
      "offset": [
        787,
        806
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3655": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8387,
        8664
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3656": {
      "offset": [
        9672,
        9682
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3657": {
      "offset": [
        9637,
        9668
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3659": {
      "offset": [
        9645,
        9667
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3660": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9645,
        9667
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3661": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9645,
        9667
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3662": {
      "offset": [
        9645,
        9655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3664": {
      "offset": [
        9645,
        9667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3666": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9645,
        9667
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3667": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9645,
        9667
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3668": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9645,
        9667
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3669": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9645,
        9667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3671": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9645,
        9667
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3672": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9645,
        9667
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3673": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9645,
        9667
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3674": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9645,
        9667
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3675": {
      "offset": [
        9637,
        9668
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3676": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9637,
        9668
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3677": {
      "offset": [
        9637,
        9644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "3679": {
      "offset": [
        9637,
        9668
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3680": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9637,
        9668
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3681": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9637,
        9668
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3682": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9637,
        9668
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3683": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9637,
        9668
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3684": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9637,
        9668
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3691": {
      "op": "SHL"
    },
    "3692": {
      "op": "SUB"
    },
    "3693": {
      "offset": [
        9637,
        9668
      ],
      "op": "AND",
      "path": "2"
    },
    "3694": {
      "offset": [
        9637,
        9682
      ],
      "op": "EQ",
      "path": "2"
    },
    "3695": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9637,
        9682
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3696": {
      "offset": [
        9637,
        9733
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE9C"
    },
    "3699": {
      "offset": [
        9637,
        9733
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3700": {
      "op": "POP"
    },
    "3701": {
      "offset": [
        9723,
        9733
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3702": {
      "offset": [
        9686,
        9719
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3704": {
      "offset": [
        9696,
        9718
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3705": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9696,
        9718
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3706": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9696,
        9718
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3707": {
      "offset": [
        9696,
        9706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3709": {
      "offset": [
        9696,
        9718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3711": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9696,
        9718
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3712": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9696,
        9718
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3713": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9696,
        9718
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3714": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9696,
        9718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3716": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9696,
        9718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3717": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9696,
        9718
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3718": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9696,
        9718
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3719": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9696,
        9718
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3720": {
      "offset": [
        9686,
        9719
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3721": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9686,
        9719
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3722": {
      "offset": [
        9686,
        9695
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "3724": {
      "offset": [
        9686,
        9719
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3725": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9686,
        9719
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3726": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9686,
        9719
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3727": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9686,
        9719
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3728": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9686,
        9719
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3729": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9686,
        9719
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3736": {
      "op": "SHL"
    },
    "3737": {
      "op": "SUB"
    },
    "3738": {
      "offset": [
        9686,
        9719
      ],
      "op": "AND",
      "path": "2"
    },
    "3739": {
      "offset": [
        9686,
        9733
      ],
      "op": "EQ",
      "path": "2"
    },
    "3740": {
      "offset": [
        9637,
        9733
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3741": {
      "offset": [
        9629,
        9781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEB8"
    },
    "3744": {
      "offset": [
        9629,
        9781
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3745": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9629,
        9781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3747": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9629,
        9781
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3748": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3754": {
      "op": "SHL"
    },
    "3755": {
      "offset": [
        9629,
        9781
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3756": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9629,
        9781
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3757": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9629,
        9781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3759": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9629,
        9781
      ],
      "op": "ADD",
      "path": "2"
    },
    "3760": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9629,
        9781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "3763": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9629,
        9781
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3764": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9629,
        9781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x276E"
    },
    "3767": {
      "fn": "PirateRace.takeOutOfJail",
      "jump": "i",
      "offset": [
        9629,
        9781
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3768": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        9629,
        9781
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3775": {
      "op": "SHL"
    },
    "3776": {
      "op": "SUB"
    },
    "3777": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8496,
        8512
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 26
    },
    "3778": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8496,
        8512
      ],
      "op": "AND",
      "path": "2"
    },
    "3779": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8496,
        8512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3781": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8496,
        8512
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3782": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8496,
        8512
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3783": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8496,
        8512
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3784": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8496,
        8506
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3786": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8496,
        8512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3788": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8496,
        8512
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3789": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8496,
        8512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3791": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8496,
        8512
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3792": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8496,
        8512
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3793": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8496,
        8512
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3794": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8496,
        8512
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3795": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8481,
        8491
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3796": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8470,
        8492
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3797": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8470,
        8492
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3798": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8470,
        8492
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3799": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8470,
        8492
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3800": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8470,
        8492
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3801": {
      "branch": 94,
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8470,
        8512
      ],
      "op": "EQ",
      "path": "2"
    },
    "3802": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8462,
        8565
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF3E"
    },
    "3805": {
      "branch": 94,
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8462,
        8565
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3806": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8462,
        8565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3808": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8462,
        8565
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3809": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3815": {
      "op": "SHL"
    },
    "3816": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8462,
        8565
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3817": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8462,
        8565
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3820": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8462,
        8565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3822": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8462,
        8565
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3823": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8462,
        8565
      ],
      "op": "ADD",
      "path": "2"
    },
    "3824": {
      "op": "MSTORE"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3829": {
      "op": "DUP3"
    },
    "3830": {
      "op": "ADD"
    },
    "3831": {
      "op": "MSTORE"
    },
    "3832": {
      "op": "PUSH32",
      "value": "0x43616E6E6F742074616B6520736F6D656F6E65206F6E20616E6F746865722074"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3867": {
      "op": "DUP3"
    },
    "3868": {
      "op": "ADD"
    },
    "3869": {
      "op": "MSTORE"
    },
    "3870": {
      "op": "PUSH16",
      "value": "0x32B0B69037BABA1037B3103530B4B617"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "3889": {
      "op": "SHL"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3892": {
      "op": "DUP3"
    },
    "3893": {
      "op": "ADD"
    },
    "3894": {
      "op": "MSTORE"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3897": {
      "op": "ADD"
    },
    "3898": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8462,
        8565
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "3901": {
      "op": "JUMP"
    },
    "3902": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8462,
        8565
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3909": {
      "op": "SHL"
    },
    "3910": {
      "op": "SUB"
    },
    "3911": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8585
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 27
    },
    "3912": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8585
      ],
      "op": "AND",
      "path": "2"
    },
    "3913": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8588,
        8593
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3915": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8585
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3916": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8585
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3917": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8585
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3918": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8579
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "3920": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3922": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8585
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3923": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8585
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3924": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8585
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3925": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3927": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8585
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3928": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8585
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3929": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8585
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3930": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8593
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3931": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8593
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3934": {
      "op": "NOT"
    },
    "3935": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8593
      ],
      "op": "AND",
      "path": "2"
    },
    "3936": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8593
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3937": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8575,
        8593
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3938": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8630,
        8640
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 28,
      "value": "0x7"
    },
    "3940": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8630,
        8646
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3941": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8630,
        8646
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3942": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8630,
        8646
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3943": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8630,
        8646
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3944": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8630,
        8646
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3945": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8630,
        8646
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3946": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "3948": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3949": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3950": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8608,
        8657
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x7C892458D566E30087DE155713D0B373EE96B70E37B90D1F057ABAB145B40666"
    },
    "3983": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8608,
        8657
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3984": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8580,
        8584
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3985": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8580,
        8584
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3986": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8629
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3987": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3988": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "LT",
      "path": "2"
    },
    "3989": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFA0"
    },
    "3992": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3993": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFA0"
    },
    "3996": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "3999": {
      "fn": "PirateRace.takeOutOfJail",
      "jump": "i",
      "offset": [
        8624,
        8647
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4000": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4001": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4002": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4004": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4005": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4007": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4009": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4010": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4011": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4013": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "MUL",
      "path": "2"
    },
    "4014": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8647
      ],
      "op": "ADD",
      "path": "2"
    },
    "4015": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8656
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4017": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8624,
        8656
      ],
      "op": "ADD",
      "path": "2"
    },
    "4018": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8608,
        8657
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4020": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8608,
        8657
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4021": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8608,
        8657
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBF"
    },
    "4024": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8608,
        8657
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4025": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8608,
        8657
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4026": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8608,
        8657
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4027": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8608,
        8657
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26AF"
    },
    "4030": {
      "fn": "PirateRace.takeOutOfJail",
      "jump": "i",
      "offset": [
        8608,
        8657
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4031": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8608,
        8657
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4032": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8608,
        8657
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4034": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8608,
        8657
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4035": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8608,
        8657
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4036": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8608,
        8657
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4037": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8608,
        8657
      ],
      "op": "SUB",
      "path": "2"
    },
    "4038": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8608,
        8657
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4039": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8608,
        8657
      ],
      "op": "LOG1",
      "path": "2"
    },
    "4040": {
      "fn": "PirateRace.takeOutOfJail",
      "offset": [
        8387,
        8664
      ],
      "op": "POP",
      "path": "2"
    },
    "4041": {
      "fn": "PirateRace.takeOutOfJail",
      "jump": "o",
      "offset": [
        8387,
        8664
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4042": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4285,
        4763
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4043": {
      "offset": [
        9376,
        9387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4045": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9376,
        9387
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4046": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9376,
        9387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4048": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9376,
        9387
      ],
      "op": "AND",
      "path": "2"
    },
    "4049": {
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFEC"
    },
    "4052": {
      "offset": [
        9368,
        9421
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4053": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4055": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9368,
        9421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4056": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4062": {
      "op": "SHL"
    },
    "4063": {
      "offset": [
        9368,
        9421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4064": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9368,
        9421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4065": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4067": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9368,
        9421
      ],
      "op": "ADD",
      "path": "2"
    },
    "4068": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "4071": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9368,
        9421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4072": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26DB"
    },
    "4075": {
      "fn": "PirateRace.upgradeEngine",
      "jump": "i",
      "offset": [
        9368,
        9421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4076": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9368,
        9421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4077": {
      "offset": [
        9850,
        9860
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4078": {
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4080": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9845,
        9861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4081": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9845,
        9861
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4082": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9845,
        9861
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4083": {
      "offset": [
        9845,
        9849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "4085": {
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4087": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9845,
        9861
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4088": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4090": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9845,
        9861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4091": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9845,
        9861
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4092": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9845,
        9861
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4093": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4095": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9845,
        9861
      ],
      "op": "AND",
      "path": "2"
    },
    "4096": {
      "offset": [
        9844,
        9861
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4097": {
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101C"
    },
    "4100": {
      "offset": [
        9836,
        9887
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4101": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4103": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9836,
        9887
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4104": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4110": {
      "op": "SHL"
    },
    "4111": {
      "offset": [
        9836,
        9887
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4112": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9836,
        9887
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4113": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4115": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9836,
        9887
      ],
      "op": "ADD",
      "path": "2"
    },
    "4116": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "4119": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9836,
        9887
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4120": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2712"
    },
    "4123": {
      "fn": "PirateRace.upgradeEngine",
      "jump": "i",
      "offset": [
        9836,
        9887
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4124": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        9836,
        9887
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4125": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4379,
        4389
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4126": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4351,
        4365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4128": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4368,
        4390
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4129": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4368,
        4390
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4130": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4368,
        4390
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4131": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4368,
        4378
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4133": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4368,
        4390
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4135": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4368,
        4390
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4136": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4368,
        4390
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4138": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4368,
        4390
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4139": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4368,
        4390
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4140": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4368,
        4390
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4141": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4413
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 29,
      "value": "0x6"
    },
    "4143": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4144": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4145": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4436,
        4437
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4147": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4436,
        4437
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4148": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4413
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4149": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4368,
        4390
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4150": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4368,
        4390
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4151": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4152": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "LT",
      "path": "2"
    },
    "4153": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1044"
    },
    "4156": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4157": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1044"
    },
    "4160": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "4163": {
      "fn": "PirateRace.upgradeEngine",
      "jump": "i",
      "offset": [
        4408,
        4421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4164": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4165": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4166": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4168": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4169": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4171": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4173": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4174": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4175": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4177": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "MUL",
      "path": "2"
    },
    "4178": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4421
      ],
      "op": "ADD",
      "path": "2"
    },
    "4179": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4432
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4181": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4432
      ],
      "op": "ADD",
      "path": "2"
    },
    "4182": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4432
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4183": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4437
      ],
      "op": "LT",
      "path": "2"
    },
    "4184": {
      "branch": 95,
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4408,
        4437
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4185": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4400,
        4477
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10B0"
    },
    "4188": {
      "branch": 95,
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4400,
        4477
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4189": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4400,
        4477
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4191": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4400,
        4477
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4192": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4198": {
      "op": "SHL"
    },
    "4199": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4400,
        4477
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4200": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4400,
        4477
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4203": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4400,
        4477
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4205": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4400,
        4477
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4206": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4400,
        4477
      ],
      "op": "ADD",
      "path": "2"
    },
    "4207": {
      "op": "MSTORE"
    },
    "4208": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4212": {
      "op": "DUP3"
    },
    "4213": {
      "op": "ADD"
    },
    "4214": {
      "op": "MSTORE"
    },
    "4215": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F756768206D6F6E657920746F207570677261646520656E6769"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4250": {
      "op": "DUP3"
    },
    "4251": {
      "op": "ADD"
    },
    "4252": {
      "op": "MSTORE"
    },
    "4253": {
      "op": "PUSH3",
      "value": "0x373297"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "4259": {
      "op": "SHL"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4262": {
      "op": "DUP3"
    },
    "4263": {
      "op": "ADD"
    },
    "4264": {
      "op": "MSTORE"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4267": {
      "op": "ADD"
    },
    "4268": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4400,
        4477
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "4271": {
      "op": "JUMP"
    },
    "4272": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4400,
        4477
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4273": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4554
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 30,
      "value": "0x10DF"
    },
    "4276": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4552,
        4553
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4278": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "4280": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4529,
        4535
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4281": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4282": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4283": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4284": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "LT",
      "path": "2"
    },
    "4285": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10C8"
    },
    "4288": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4289": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10C8"
    },
    "4292": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "4295": {
      "fn": "PirateRace.upgradeEngine",
      "jump": "i",
      "offset": [
        4523,
        4536
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4296": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4297": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4299": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4300": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4301": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4302": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4304": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4305": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4306": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4307": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4309": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4310": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4311": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "MUL",
      "path": "2"
    },
    "4312": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4536
      ],
      "op": "ADD",
      "path": "2"
    },
    "4313": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4547
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4314": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4547
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4315": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22D4"
    },
    "4318": {
      "fn": "PirateRace.upgradeEngine",
      "jump": "i",
      "offset": [
        4523,
        4554
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4319": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4523,
        4554
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4320": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4501
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "4322": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4502,
        4508
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4323": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4324": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4325": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4326": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "LT",
      "path": "2"
    },
    "4327": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10F2"
    },
    "4330": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4331": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10F2"
    },
    "4334": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "4337": {
      "fn": "PirateRace.upgradeEngine",
      "jump": "i",
      "offset": [
        4496,
        4509
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4338": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4339": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4340": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4342": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4343": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4345": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4347": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4348": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4349": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4351": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "MUL",
      "path": "2"
    },
    "4352": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4509
      ],
      "op": "ADD",
      "path": "2"
    },
    "4353": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4355": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4520
      ],
      "op": "ADD",
      "path": "2"
    },
    "4356": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4554
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4357": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4554
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4358": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4554
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4359": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4496,
        4554
      ],
      "op": "POP",
      "path": "2"
    },
    "4360": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4612
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 31,
      "value": "0x113F"
    },
    "4363": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4610,
        4611
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4365": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "4367": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4592,
        4598
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4368": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4369": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4370": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4371": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "LT",
      "path": "2"
    },
    "4372": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x111F"
    },
    "4375": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4376": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x111F"
    },
    "4379": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "4382": {
      "fn": "PirateRace.upgradeEngine",
      "jump": "i",
      "offset": [
        4586,
        4599
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4383": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4384": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4385": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4387": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4388": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4390": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4392": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4393": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4394": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4396": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "MUL",
      "path": "2"
    },
    "4397": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4599
      ],
      "op": "ADD",
      "path": "2"
    },
    "4398": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4400": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4605
      ],
      "op": "ADD",
      "path": "2"
    },
    "4401": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4605
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4402": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4609
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22E0"
    },
    "4405": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4609
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4406": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4612
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4407": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4612
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4408": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4612
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "4413": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4612
      ],
      "op": "AND",
      "path": "2"
    },
    "4414": {
      "fn": "PirateRace.upgradeEngine",
      "jump": "i",
      "offset": [
        4586,
        4612
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4415": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4586,
        4612
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4416": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "4418": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4570,
        4576
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4419": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4420": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4421": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4422": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "LT",
      "path": "2"
    },
    "4423": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1152"
    },
    "4426": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4427": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1152"
    },
    "4430": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "4433": {
      "fn": "PirateRace.upgradeEngine",
      "jump": "i",
      "offset": [
        4564,
        4577
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4434": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4435": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4436": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4438": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4439": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4441": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4443": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4444": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4445": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4447": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "MUL",
      "path": "2"
    },
    "4448": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4577
      ],
      "op": "ADD",
      "path": "2"
    },
    "4449": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4451": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4583
      ],
      "op": "ADD",
      "path": "2"
    },
    "4452": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4612
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4453": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4612
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4454": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4612
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4455": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4564,
        4612
      ],
      "op": "POP",
      "path": "2"
    },
    "4456": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4664,
        4665
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 32,
      "value": "0x1"
    },
    "4458": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4640
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "4460": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4462": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4641,
        4651
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4469": {
      "op": "SHL"
    },
    "4470": {
      "op": "SUB"
    },
    "4471": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4652
      ],
      "op": "AND",
      "path": "2"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4478": {
      "op": "SHL"
    },
    "4479": {
      "op": "SUB"
    },
    "4480": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4652
      ],
      "op": "AND",
      "path": "2"
    },
    "4481": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4652
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4482": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4652
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4483": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4485": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4652
      ],
      "op": "ADD",
      "path": "2"
    },
    "4486": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4652
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4487": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4652
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4488": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4652
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4489": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4491": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4652
      ],
      "op": "ADD",
      "path": "2"
    },
    "4492": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4494": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4652
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4495": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4497": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4660
      ],
      "op": "ADD",
      "path": "2"
    },
    "4498": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4500": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4665
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4501": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4665
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4502": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4665
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4503": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11A0"
    },
    "4506": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4665
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4507": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4508": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2571"
    },
    "4511": {
      "fn": "PirateRace.upgradeEngine",
      "jump": "i",
      "offset": [
        4631,
        4665
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4512": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4665
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4513": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4514": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4665
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4515": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4631,
        4665
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4516": {
      "op": "POP"
    },
    "4517": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4675,
        4691
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 33,
      "value": "0x11AE"
    },
    "4520": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4675,
        4691
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4521": {
      "op": "POP"
    },
    "4522": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4675,
        4689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12EF"
    },
    "4525": {
      "fn": "PirateRace.upgradeEngine",
      "jump": "i",
      "offset": [
        4675,
        4691
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4526": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4675,
        4691
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4527": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4706,
        4756
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 34,
      "value": "0xFDBB5B39CF560CD0A57D2342B964C7D29F734F63B301D6389A860883FCCDF697"
    },
    "4560": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4721,
        4731
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4561": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4733,
        4738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "4563": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4739,
        4745
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4564": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4733,
        4746
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4565": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4733,
        4746
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4566": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4733,
        4746
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4567": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4733,
        4746
      ],
      "op": "LT",
      "path": "2"
    },
    "4568": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4733,
        4746
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFA0"
    },
    "4571": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4733,
        4746
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4572": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4733,
        4746
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFA0"
    },
    "4575": {
      "fn": "PirateRace.upgradeEngine",
      "offset": [
        4733,
        4746
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "4578": {
      "fn": "PirateRace.upgradeEngine",
      "jump": "i",
      "offset": [
        4733,
        4746
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4579": {
      "fn": "PirateRace.startRace",
      "offset": [
        1671,
        2000
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4580": {
      "fn": "PirateRace.startRace",
      "offset": [
        1731,
        1736
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 35,
      "value": "0x0"
    },
    "4582": {
      "fn": "PirateRace.startRace",
      "offset": [
        1731,
        1736
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4589": {
      "op": "SHL"
    },
    "4590": {
      "op": "SUB"
    },
    "4591": {
      "fn": "PirateRace.startRace",
      "offset": [
        1731,
        1736
      ],
      "op": "AND",
      "path": "2"
    },
    "4592": {
      "fn": "PirateRace.startRace",
      "offset": [
        1717,
        1727
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4593": {
      "branch": 96,
      "fn": "PirateRace.startRace",
      "offset": [
        1717,
        1736
      ],
      "op": "EQ",
      "path": "2"
    },
    "4594": {
      "fn": "PirateRace.startRace",
      "offset": [
        1709,
        1775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1248"
    },
    "4597": {
      "branch": 96,
      "fn": "PirateRace.startRace",
      "offset": [
        1709,
        1775
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4598": {
      "fn": "PirateRace.startRace",
      "offset": [
        1709,
        1775
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4600": {
      "fn": "PirateRace.startRace",
      "offset": [
        1709,
        1775
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4601": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4607": {
      "op": "SHL"
    },
    "4608": {
      "fn": "PirateRace.startRace",
      "offset": [
        1709,
        1775
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4609": {
      "fn": "PirateRace.startRace",
      "offset": [
        1709,
        1775
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4612": {
      "fn": "PirateRace.startRace",
      "offset": [
        1709,
        1775
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4614": {
      "fn": "PirateRace.startRace",
      "offset": [
        1709,
        1775
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4615": {
      "fn": "PirateRace.startRace",
      "offset": [
        1709,
        1775
      ],
      "op": "ADD",
      "path": "2"
    },
    "4616": {
      "op": "MSTORE"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4621": {
      "op": "DUP3"
    },
    "4622": {
      "op": "ADD"
    },
    "4623": {
      "op": "MSTORE"
    },
    "4624": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920746865206F776E65722063616E2073746172742074686520726163"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4659": {
      "op": "DUP3"
    },
    "4660": {
      "op": "ADD"
    },
    "4661": {
      "op": "MSTORE"
    },
    "4662": {
      "op": "PUSH2",
      "value": "0x3297"
    },
    "4665": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "4667": {
      "op": "SHL"
    },
    "4668": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4670": {
      "op": "DUP3"
    },
    "4671": {
      "op": "ADD"
    },
    "4672": {
      "op": "MSTORE"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4675": {
      "op": "ADD"
    },
    "4676": {
      "fn": "PirateRace.startRace",
      "offset": [
        1709,
        1775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "4679": {
      "op": "JUMP"
    },
    "4680": {
      "fn": "PirateRace.startRace",
      "offset": [
        1709,
        1775
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4681": {
      "fn": "PirateRace.startRace",
      "offset": [
        1794,
        1805
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 36,
      "value": "0x3"
    },
    "4683": {
      "fn": "PirateRace.startRace",
      "offset": [
        1794,
        1805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4684": {
      "fn": "PirateRace.startRace",
      "offset": [
        1794,
        1805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4686": {
      "fn": "PirateRace.startRace",
      "offset": [
        1794,
        1805
      ],
      "op": "AND",
      "path": "2"
    },
    "4687": {
      "branch": 97,
      "fn": "PirateRace.startRace",
      "offset": [
        1793,
        1805
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4688": {
      "fn": "PirateRace.startRace",
      "offset": [
        1785,
        1831
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1293"
    },
    "4691": {
      "branch": 97,
      "fn": "PirateRace.startRace",
      "offset": [
        1785,
        1831
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4692": {
      "fn": "PirateRace.startRace",
      "offset": [
        1785,
        1831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4694": {
      "fn": "PirateRace.startRace",
      "offset": [
        1785,
        1831
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4695": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4701": {
      "op": "SHL"
    },
    "4702": {
      "fn": "PirateRace.startRace",
      "offset": [
        1785,
        1831
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4703": {
      "fn": "PirateRace.startRace",
      "offset": [
        1785,
        1831
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4706": {
      "fn": "PirateRace.startRace",
      "offset": [
        1785,
        1831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4708": {
      "fn": "PirateRace.startRace",
      "offset": [
        1785,
        1831
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4709": {
      "fn": "PirateRace.startRace",
      "offset": [
        1785,
        1831
      ],
      "op": "ADD",
      "path": "2"
    },
    "4710": {
      "op": "MSTORE"
    },
    "4711": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "4713": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4715": {
      "op": "DUP3"
    },
    "4716": {
      "op": "ADD"
    },
    "4717": {
      "op": "MSTORE"
    },
    "4718": {
      "op": "PUSH21",
      "value": "0x23B0B6B29030B63932B0B23C9039BA30B93A32B217"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "4742": {
      "op": "SHL"
    },
    "4743": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4745": {
      "op": "DUP3"
    },
    "4746": {
      "op": "ADD"
    },
    "4747": {
      "op": "MSTORE"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4750": {
      "op": "ADD"
    },
    "4751": {
      "fn": "PirateRace.startRace",
      "offset": [
        1785,
        1831
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "4754": {
      "op": "JUMP"
    },
    "4755": {
      "fn": "PirateRace.startRace",
      "offset": [
        1785,
        1831
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4756": {
      "fn": "PirateRace.startRace",
      "offset": [
        1841,
        1852
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 37,
      "value": "0x3"
    },
    "4758": {
      "fn": "PirateRace.startRace",
      "offset": [
        1841,
        1859
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4759": {
      "fn": "PirateRace.startRace",
      "offset": [
        1841,
        1859
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4762": {
      "op": "NOT"
    },
    "4763": {
      "fn": "PirateRace.startRace",
      "offset": [
        1841,
        1859
      ],
      "op": "AND",
      "path": "2"
    },
    "4764": {
      "fn": "PirateRace.startRace",
      "offset": [
        1855,
        1859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4766": {
      "fn": "PirateRace.startRace",
      "offset": [
        1841,
        1859
      ],
      "op": "OR",
      "path": "2"
    },
    "4767": {
      "fn": "PirateRace.startRace",
      "offset": [
        1841,
        1859
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4768": {
      "fn": "PirateRace.startRace",
      "offset": [
        1841,
        1859
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4769": {
      "fn": "PirateRace.startRace",
      "offset": [
        1841,
        1852
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4771": {
      "fn": "PirateRace.startRace",
      "offset": [
        1869,
        1955
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4772": {
      "fn": "PirateRace.startRace",
      "offset": [
        1893,
        1898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "4774": {
      "fn": "PirateRace.startRace",
      "offset": [
        1893,
        1905
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4775": {
      "fn": "PirateRace.startRace",
      "offset": [
        1889,
        1905
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4776": {
      "fn": "PirateRace.startRace",
      "offset": [
        1889,
        1905
      ],
      "op": "LT",
      "path": "2"
    },
    "4777": {
      "fn": "PirateRace.startRace",
      "offset": [
        1869,
        1955
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4778": {
      "fn": "PirateRace.startRace",
      "offset": [
        1869,
        1955
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E8"
    },
    "4781": {
      "fn": "PirateRace.startRace",
      "offset": [
        1869,
        1955
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4782": {
      "fn": "PirateRace.startRace",
      "offset": [
        1943,
        1944
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 38,
      "value": "0x1"
    },
    "4784": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1931
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "4786": {
      "fn": "PirateRace.startRace",
      "offset": [
        1932,
        1933
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4787": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4788": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4789": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4790": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "LT",
      "path": "2"
    },
    "4791": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12C2"
    },
    "4794": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4795": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12C2"
    },
    "4798": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "4801": {
      "fn": "PirateRace.startRace",
      "jump": "i",
      "offset": [
        1926,
        1934
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4802": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4803": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4805": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4806": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4807": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4808": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4810": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4811": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4812": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4813": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4815": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4817": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4818": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4819": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "MUL",
      "path": "2"
    },
    "4820": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1934
      ],
      "op": "ADD",
      "path": "2"
    },
    "4821": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1940
      ],
      "op": "ADD",
      "path": "2"
    },
    "4822": {
      "fn": "PirateRace.startRace",
      "offset": [
        1926,
        1944
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4823": {
      "fn": "PirateRace.startRace",
      "offset": [
        1907,
        1910
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 39
    },
    "4824": {
      "fn": "PirateRace.startRace",
      "offset": [
        1907,
        1910
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E0"
    },
    "4827": {
      "fn": "PirateRace.startRace",
      "offset": [
        1907,
        1910
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4828": {
      "fn": "PirateRace.startRace",
      "offset": [
        1907,
        1910
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2755"
    },
    "4831": {
      "fn": "PirateRace.startRace",
      "jump": "i",
      "offset": [
        1907,
        1910
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4832": {
      "fn": "PirateRace.startRace",
      "offset": [
        1907,
        1910
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4833": {
      "fn": "PirateRace.startRace",
      "offset": [
        1907,
        1910
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4834": {
      "fn": "PirateRace.startRace",
      "offset": [
        1907,
        1910
      ],
      "op": "POP",
      "path": "2"
    },
    "4835": {
      "fn": "PirateRace.startRace",
      "offset": [
        1907,
        1910
      ],
      "op": "POP",
      "path": "2"
    },
    "4836": {
      "fn": "PirateRace.startRace",
      "offset": [
        1869,
        1955
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12A3"
    },
    "4839": {
      "fn": "PirateRace.startRace",
      "offset": [
        1869,
        1955
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4840": {
      "fn": "PirateRace.startRace",
      "offset": [
        1869,
        1955
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4841": {
      "op": "POP"
    },
    "4842": {
      "fn": "PirateRace.startRace",
      "offset": [
        1978,
        1993
      ],
      "op": "TIMESTAMP",
      "path": "2",
      "statement": 40
    },
    "4843": {
      "fn": "PirateRace.startRace",
      "offset": [
        1964,
        1975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4845": {
      "fn": "PirateRace.startRace",
      "offset": [
        1964,
        1993
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4846": {
      "fn": "PirateRace.startRace",
      "jump": "o",
      "offset": [
        1671,
        2000
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4847": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3753,
        4279
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4848": {
      "offset": [
        9376,
        9387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4850": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        9376,
        9387
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4851": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        9376,
        9387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4853": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        9376,
        9387
      ],
      "op": "AND",
      "path": "2"
    },
    "4854": {
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1311"
    },
    "4857": {
      "offset": [
        9368,
        9421
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4858": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4860": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        9368,
        9421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4861": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4867": {
      "op": "SHL"
    },
    "4868": {
      "offset": [
        9368,
        9421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4869": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        9368,
        9421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4870": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4872": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        9368,
        9421
      ],
      "op": "ADD",
      "path": "2"
    },
    "4873": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "4876": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        9368,
        9421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4877": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26DB"
    },
    "4880": {
      "fn": "PirateRace.updateDistance",
      "jump": "i",
      "offset": [
        9368,
        9421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4881": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        9368,
        9421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4882": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3815,
        3824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4884": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3810,
        4128
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4885": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3834,
        3839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "4887": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3834,
        3846
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4888": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3830,
        3846
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4889": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3830,
        3846
      ],
      "op": "LT",
      "path": "2"
    },
    "4890": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3810,
        4128
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4891": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3810,
        4128
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1427"
    },
    "4894": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3810,
        4128
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4895": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3867,
        3885
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4897": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3906,
        3917
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4899": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3906,
        3917
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4900": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3888,
        3903
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4901": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3888,
        3917
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x132E"
    },
    "4904": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3888,
        3917
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4905": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3888,
        3917
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4906": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3888,
        3917
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x269C"
    },
    "4909": {
      "fn": "PirateRace.updateDistance",
      "jump": "i",
      "offset": [
        3888,
        3917
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4910": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3888,
        3917
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4911": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3867,
        3917
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4912": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3867,
        3917
      ],
      "op": "POP",
      "path": "2"
    },
    "4913": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3969,
        3979
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 41
    },
    "4914": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "4916": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3958,
        3959
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4917": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4918": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4919": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4920": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "LT",
      "path": "2"
    },
    "4921": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1344"
    },
    "4924": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4925": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1344"
    },
    "4928": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "4931": {
      "fn": "PirateRace.updateDistance",
      "jump": "i",
      "offset": [
        3952,
        3960
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4932": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4933": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4934": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4936": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4937": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4939": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4941": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4942": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4943": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4945": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "MUL",
      "path": "2"
    },
    "4946": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3960
      ],
      "op": "ADD",
      "path": "2"
    },
    "4947": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3966
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4949": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3966
      ],
      "op": "ADD",
      "path": "2"
    },
    "4950": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3966
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4951": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1360"
    },
    "4954": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3979
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4955": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3979
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4956": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2685"
    },
    "4959": {
      "fn": "PirateRace.updateDistance",
      "jump": "i",
      "offset": [
        3952,
        3979
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4960": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3952,
        3979
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4961": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "4963": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3937,
        3938
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4964": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4965": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4966": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4967": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "LT",
      "path": "2"
    },
    "4968": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1373"
    },
    "4971": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4972": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1373"
    },
    "4975": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "4978": {
      "fn": "PirateRace.updateDistance",
      "jump": "i",
      "offset": [
        3931,
        3939
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4979": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4980": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4981": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4983": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4984": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4986": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4988": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4989": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4990": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4992": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "MUL",
      "path": "2"
    },
    "4993": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3939
      ],
      "op": "ADD",
      "path": "2"
    },
    "4994": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4996": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3948
      ],
      "op": "ADD",
      "path": "2"
    },
    "4997": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4999": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3979
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5000": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3979
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5001": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3979
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5002": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1393"
    },
    "5005": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3979
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5006": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3979
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5007": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2571"
    },
    "5010": {
      "fn": "PirateRace.updateDistance",
      "jump": "i",
      "offset": [
        3931,
        3979
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5011": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3979
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5012": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3979
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5013": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3979
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5014": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3931,
        3979
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5015": {
      "op": "POP"
    },
    "5016": {
      "op": "POP"
    },
    "5017": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4018,
        4028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5019": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4018,
        4028
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5020": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "5022": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5023": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5024": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4003,
        4004
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5025": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4003,
        4004
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5026": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5027": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "LT",
      "path": "2"
    },
    "5028": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13AF"
    },
    "5031": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5032": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13AF"
    },
    "5035": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "5038": {
      "fn": "PirateRace.updateDistance",
      "jump": "i",
      "offset": [
        3997,
        4005
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5039": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5040": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5041": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5043": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5044": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5046": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5048": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5049": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5050": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5052": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "MUL",
      "path": "2"
    },
    "5053": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4005
      ],
      "op": "ADD",
      "path": "2"
    },
    "5054": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4014
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5056": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4014
      ],
      "op": "ADD",
      "path": "2"
    },
    "5057": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4014
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5058": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4028
      ],
      "op": "LT",
      "path": "2"
    },
    "5059": {
      "branch": 98,
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4028
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5060": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4057
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5061": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4057
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5062": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4057
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13DB"
    },
    "5065": {
      "branch": 98,
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4057
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5066": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4057
      ],
      "op": "POP",
      "path": "2"
    },
    "5067": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4038,
        4044
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5069": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4032,
        4052
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5070": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4032,
        4052
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5071": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13D7"
    },
    "5074": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4032,
        4052
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5075": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4032,
        4052
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x259A"
    },
    "5078": {
      "fn": "PirateRace.updateDistance",
      "jump": "i",
      "offset": [
        4032,
        4052
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5079": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4032,
        4052
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5080": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4032,
        4057
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5081": {
      "branch": 99,
      "fn": "PirateRace.updateDistance",
      "offset": [
        4032,
        4057
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5082": {
      "op": "POP"
    },
    "5083": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3997,
        4057
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5084": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3993,
        4118
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5085": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3993,
        4118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1414"
    },
    "5088": {
      "branch": 99,
      "fn": "PirateRace.updateDistance",
      "offset": [
        3993,
        4118
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5089": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4091
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 42,
      "value": "0x6"
    },
    "5091": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4092,
        4093
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5092": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5093": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5094": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5095": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "LT",
      "path": "2"
    },
    "5096": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F3"
    },
    "5099": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5100": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F3"
    },
    "5103": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "5106": {
      "fn": "PirateRace.updateDistance",
      "jump": "i",
      "offset": [
        4086,
        4094
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5107": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5108": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5109": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5111": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5112": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5114": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5116": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5117": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5118": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5120": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "MUL",
      "path": "2"
    },
    "5121": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4094
      ],
      "op": "ADD",
      "path": "2"
    },
    "5122": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4103
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5124": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4086,
        4103
      ],
      "op": "ADD",
      "path": "2"
    },
    "5125": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4077,
        4083
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5127": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4077,
        4103
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5128": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4077,
        4103
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5129": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4077,
        4103
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1412"
    },
    "5132": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4077,
        4103
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5133": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4077,
        4103
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5134": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4077,
        4103
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27FF"
    },
    "5137": {
      "fn": "PirateRace.updateDistance",
      "jump": "i",
      "offset": [
        4077,
        4103
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5138": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4077,
        4103
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5139": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4077,
        4103
      ],
      "op": "POP",
      "path": "2"
    },
    "5140": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3993,
        4118
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5141": {
      "op": "POP"
    },
    "5142": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3848,
        3851
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 43
    },
    "5143": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3848,
        3851
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x141F"
    },
    "5146": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3848,
        3851
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5147": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3848,
        3851
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2755"
    },
    "5150": {
      "fn": "PirateRace.updateDistance",
      "jump": "i",
      "offset": [
        3848,
        3851
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5151": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3848,
        3851
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5152": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3848,
        3851
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5153": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3848,
        3851
      ],
      "op": "POP",
      "path": "2"
    },
    "5154": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3848,
        3851
      ],
      "op": "POP",
      "path": "2"
    },
    "5155": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3810,
        4128
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1314"
    },
    "5158": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3810,
        4128
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5159": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3810,
        4128
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5160": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        3810,
        4128
      ],
      "op": "POP",
      "path": "2"
    },
    "5161": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4151,
        4166
      ],
      "op": "TIMESTAMP",
      "path": "2",
      "statement": 44
    },
    "5162": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4137,
        4148
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "5164": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4137,
        4166
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5165": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4137,
        4166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5166": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4137,
        4166
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5167": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4137,
        4166
      ],
      "op": "POP",
      "path": "2"
    },
    "5168": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4181,
        4272
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 45,
      "value": "0x24EDE07B86B6E8AEEA97CE363C9B62C5A79ED1B54E95D3B017D17F66C75BC1A3"
    },
    "5201": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "5203": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4203,
        4204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5205": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5206": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5207": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5208": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "LT",
      "path": "2"
    },
    "5209": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1464"
    },
    "5212": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5213": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1464"
    },
    "5216": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "5219": {
      "fn": "PirateRace.updateDistance",
      "jump": "i",
      "offset": [
        4197,
        4205
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5220": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5221": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5222": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5224": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5225": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5227": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5229": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5230": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5231": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5233": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "MUL",
      "path": "2"
    },
    "5234": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4205
      ],
      "op": "ADD",
      "path": "2"
    },
    "5235": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5237": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4214
      ],
      "op": "ADD",
      "path": "2"
    },
    "5238": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4197,
        4214
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5239": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4221
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "5241": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4222,
        4223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5243": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5244": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5245": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5246": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "LT",
      "path": "2"
    },
    "5247": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x148A"
    },
    "5250": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5251": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x148A"
    },
    "5254": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "5257": {
      "fn": "PirateRace.updateDistance",
      "jump": "i",
      "offset": [
        4216,
        4224
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5258": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5259": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5260": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5262": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5263": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5265": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5267": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5268": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5269": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5271": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "MUL",
      "path": "2"
    },
    "5272": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4224
      ],
      "op": "ADD",
      "path": "2"
    },
    "5273": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5275": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4233
      ],
      "op": "ADD",
      "path": "2"
    },
    "5276": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4216,
        4233
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5277": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4240
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "5279": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4241,
        4242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5281": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5282": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5283": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5284": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "LT",
      "path": "2"
    },
    "5285": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14B0"
    },
    "5288": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5289": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14B0"
    },
    "5292": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "5295": {
      "fn": "PirateRace.updateDistance",
      "jump": "i",
      "offset": [
        4235,
        4243
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5296": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5297": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5298": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5300": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5301": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5303": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5305": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5306": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5307": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5309": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "MUL",
      "path": "2"
    },
    "5310": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4243
      ],
      "op": "ADD",
      "path": "2"
    },
    "5311": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4252
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5313": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4252
      ],
      "op": "ADD",
      "path": "2"
    },
    "5314": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4235,
        4252
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5315": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4259
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "5317": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4260,
        4261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5319": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5320": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5321": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5322": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "LT",
      "path": "2"
    },
    "5323": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14D6"
    },
    "5326": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5327": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14D6"
    },
    "5330": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "5333": {
      "fn": "PirateRace.updateDistance",
      "jump": "i",
      "offset": [
        4254,
        4262
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5334": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5335": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5337": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5338": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5339": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5340": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5342": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5343": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5344": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5345": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5346": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5348": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5350": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5351": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5352": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "MUL",
      "path": "2"
    },
    "5353": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4262
      ],
      "op": "ADD",
      "path": "2"
    },
    "5354": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4271
      ],
      "op": "ADD",
      "path": "2"
    },
    "5355": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4254,
        4271
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5356": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4181,
        4272
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5358": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4181,
        4272
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5359": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4181,
        4272
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5360": {
      "op": "SWAP6"
    },
    "5361": {
      "op": "DUP7"
    },
    "5362": {
      "op": "MSTORE"
    },
    "5363": {
      "op": "SWAP2"
    },
    "5364": {
      "op": "DUP6"
    },
    "5365": {
      "op": "ADD"
    },
    "5366": {
      "op": "SWAP4"
    },
    "5367": {
      "op": "SWAP1"
    },
    "5368": {
      "op": "SWAP4"
    },
    "5369": {
      "op": "MSTORE"
    },
    "5370": {
      "op": "DUP4"
    },
    "5371": {
      "op": "ADD"
    },
    "5372": {
      "op": "MSTORE"
    },
    "5373": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5375": {
      "op": "DUP3"
    },
    "5376": {
      "op": "ADD"
    },
    "5377": {
      "op": "MSTORE"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5380": {
      "op": "ADD"
    },
    "5381": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4181,
        4272
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5383": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4181,
        4272
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5384": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4181,
        4272
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5385": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4181,
        4272
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5386": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4181,
        4272
      ],
      "op": "SUB",
      "path": "2"
    },
    "5387": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4181,
        4272
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5388": {
      "fn": "PirateRace.updateDistance",
      "offset": [
        4181,
        4272
      ],
      "op": "LOG1",
      "path": "2"
    },
    "5389": {
      "fn": "PirateRace.updateDistance",
      "jump": "o",
      "offset": [
        3753,
        4279
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5390": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3246,
        3428
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5391": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3336,
        3341
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 46,
      "value": "0x0"
    },
    "5393": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3336,
        3341
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5400": {
      "op": "SHL"
    },
    "5401": {
      "op": "SUB"
    },
    "5402": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3336,
        3341
      ],
      "op": "AND",
      "path": "2"
    },
    "5403": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3322,
        3332
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5404": {
      "branch": 100,
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3322,
        3341
      ],
      "op": "EQ",
      "path": "2"
    },
    "5405": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3314,
        3379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1572"
    },
    "5408": {
      "branch": 100,
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3314,
        3379
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5409": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3314,
        3379
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5411": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3314,
        3379
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5412": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5416": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5418": {
      "op": "SHL"
    },
    "5419": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3314,
        3379
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5420": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3314,
        3379
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5423": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3314,
        3379
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5425": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3314,
        3379
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5426": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3314,
        3379
      ],
      "op": "ADD",
      "path": "2"
    },
    "5427": {
      "op": "MSTORE"
    },
    "5428": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5430": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5432": {
      "op": "DUP3"
    },
    "5433": {
      "op": "ADD"
    },
    "5434": {
      "op": "MSTORE"
    },
    "5435": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920746865206F776E65722063616E207069636B206361707461696E73"
    },
    "5468": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5470": {
      "op": "DUP3"
    },
    "5471": {
      "op": "ADD"
    },
    "5472": {
      "op": "MSTORE"
    },
    "5473": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "5475": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "5477": {
      "op": "SHL"
    },
    "5478": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5480": {
      "op": "DUP3"
    },
    "5481": {
      "op": "ADD"
    },
    "5482": {
      "op": "MSTORE"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5485": {
      "op": "ADD"
    },
    "5486": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3314,
        3379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "5489": {
      "op": "JUMP"
    },
    "5490": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3314,
        3379
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5497": {
      "op": "SHL"
    },
    "5498": {
      "op": "SUB"
    },
    "5499": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3397,
        3413
      ],
      "op": "AND",
      "path": "2",
      "statement": 47
    },
    "5500": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3389,
        3414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5502": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3397,
        3413
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5503": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3397,
        3413
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5504": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3397,
        3413
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5505": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3397,
        3407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5507": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3397,
        3413
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5509": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3397,
        3413
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5510": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3397,
        3413
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5511": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3397,
        3413
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5512": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3397,
        3413
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5514": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3397,
        3413
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5515": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3397,
        3413
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5516": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3397,
        3413
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5517": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3397,
        3413
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5518": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3389,
        3414
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5519": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3389,
        3414
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5520": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3389,
        3396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "5522": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3389,
        3414
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5523": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3389,
        3414
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5524": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3389,
        3414
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5525": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3389,
        3414
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5526": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3389,
        3414
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5527": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3389,
        3421
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5528": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3389,
        3421
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5535": {
      "op": "SHL"
    },
    "5536": {
      "op": "SUB"
    },
    "5537": {
      "op": "NOT"
    },
    "5538": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3389,
        3421
      ],
      "op": "AND",
      "path": "2"
    },
    "5539": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3389,
        3421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5540": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3389,
        3421
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5541": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3389,
        3421
      ],
      "op": "OR",
      "path": "2"
    },
    "5542": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3389,
        3421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5543": {
      "fn": "PirateRace.pickCaptain",
      "offset": [
        3389,
        3421
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5544": {
      "op": "POP"
    },
    "5545": {
      "fn": "PirateRace.pickCaptain",
      "jump": "o",
      "offset": [
        3246,
        3428
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5546": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5260,
        5740
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5547": {
      "offset": [
        9376,
        9387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5549": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9376,
        9387
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5550": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9376,
        9387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5552": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9376,
        9387
      ],
      "op": "AND",
      "path": "2"
    },
    "5553": {
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15CC"
    },
    "5556": {
      "offset": [
        9368,
        9421
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5557": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5559": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9368,
        9421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5560": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5564": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5566": {
      "op": "SHL"
    },
    "5567": {
      "offset": [
        9368,
        9421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5568": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9368,
        9421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5569": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5571": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9368,
        9421
      ],
      "op": "ADD",
      "path": "2"
    },
    "5572": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "5575": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9368,
        9421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5576": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26DB"
    },
    "5579": {
      "fn": "PirateRace.upgradeAttack",
      "jump": "i",
      "offset": [
        9368,
        9421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5580": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9368,
        9421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5581": {
      "offset": [
        9850,
        9860
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5582": {
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5584": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9845,
        9861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5585": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9845,
        9861
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5586": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9845,
        9861
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5587": {
      "offset": [
        9845,
        9849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5589": {
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5591": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9845,
        9861
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5592": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5594": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9845,
        9861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5595": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9845,
        9861
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5596": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9845,
        9861
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5597": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5599": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9845,
        9861
      ],
      "op": "AND",
      "path": "2"
    },
    "5600": {
      "offset": [
        9844,
        9861
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5601": {
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15FC"
    },
    "5604": {
      "offset": [
        9836,
        9887
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5605": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5607": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9836,
        9887
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5608": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5614": {
      "op": "SHL"
    },
    "5615": {
      "offset": [
        9836,
        9887
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5616": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9836,
        9887
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5617": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5619": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9836,
        9887
      ],
      "op": "ADD",
      "path": "2"
    },
    "5620": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "5623": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9836,
        9887
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5624": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2712"
    },
    "5627": {
      "fn": "PirateRace.upgradeAttack",
      "jump": "i",
      "offset": [
        9836,
        9887
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5628": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        9836,
        9887
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5629": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5354,
        5364
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5630": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5326,
        5340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5632": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5343,
        5365
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5633": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5343,
        5365
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5634": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5343,
        5365
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5635": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5343,
        5353
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5637": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5343,
        5365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5639": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5343,
        5365
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5640": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5343,
        5365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5642": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5343,
        5365
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5643": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5343,
        5365
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5644": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5343,
        5365
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5645": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5388
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 48,
      "value": "0x6"
    },
    "5647": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5648": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5649": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5411,
        5412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5651": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5411,
        5412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5652": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5653": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5343,
        5365
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5654": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5343,
        5365
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5655": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5656": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "LT",
      "path": "2"
    },
    "5657": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1624"
    },
    "5660": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5661": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1624"
    },
    "5664": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "5667": {
      "fn": "PirateRace.upgradeAttack",
      "jump": "i",
      "offset": [
        5383,
        5396
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5668": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5669": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5670": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5672": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5673": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5675": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5677": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5678": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5679": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5681": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "MUL",
      "path": "2"
    },
    "5682": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5396
      ],
      "op": "ADD",
      "path": "2"
    },
    "5683": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5685": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5407
      ],
      "op": "ADD",
      "path": "2"
    },
    "5686": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5407
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5687": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5412
      ],
      "op": "LT",
      "path": "2"
    },
    "5688": {
      "branch": 101,
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5383,
        5412
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5689": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5375,
        5452
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1690"
    },
    "5692": {
      "branch": 101,
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5375,
        5452
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5693": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5375,
        5452
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5695": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5375,
        5452
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5696": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5700": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5702": {
      "op": "SHL"
    },
    "5703": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5375,
        5452
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5704": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5375,
        5452
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5707": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5375,
        5452
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5709": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5375,
        5452
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5710": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5375,
        5452
      ],
      "op": "ADD",
      "path": "2"
    },
    "5711": {
      "op": "MSTORE"
    },
    "5712": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "5714": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5716": {
      "op": "DUP3"
    },
    "5717": {
      "op": "ADD"
    },
    "5718": {
      "op": "MSTORE"
    },
    "5719": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F756768206D6F6E657920746F20757067726164652061747461"
    },
    "5752": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5754": {
      "op": "DUP3"
    },
    "5755": {
      "op": "ADD"
    },
    "5756": {
      "op": "MSTORE"
    },
    "5757": {
      "op": "PUSH3",
      "value": "0x31B597"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "5763": {
      "op": "SHL"
    },
    "5764": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5766": {
      "op": "DUP3"
    },
    "5767": {
      "op": "ADD"
    },
    "5768": {
      "op": "MSTORE"
    },
    "5769": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5771": {
      "op": "ADD"
    },
    "5772": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5375,
        5452
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "5775": {
      "op": "JUMP"
    },
    "5776": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5375,
        5452
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5777": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5498,
        5529
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 49,
      "value": "0x16A8"
    },
    "5780": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5527,
        5528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5782": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5498,
        5503
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "5784": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5504,
        5510
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5785": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5498,
        5511
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5786": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5498,
        5511
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5787": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5498,
        5511
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5788": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5498,
        5511
      ],
      "op": "LT",
      "path": "2"
    },
    "5789": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5498,
        5511
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10C8"
    },
    "5792": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5498,
        5511
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5793": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5498,
        5511
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10C8"
    },
    "5796": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5498,
        5511
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "5799": {
      "fn": "PirateRace.upgradeAttack",
      "jump": "i",
      "offset": [
        5498,
        5511
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5800": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5498,
        5529
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5801": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "5803": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5477,
        5483
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5804": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5805": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5806": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5807": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "LT",
      "path": "2"
    },
    "5808": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16BB"
    },
    "5811": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5812": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16BB"
    },
    "5815": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "5818": {
      "fn": "PirateRace.upgradeAttack",
      "jump": "i",
      "offset": [
        5471,
        5484
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5819": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5820": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5821": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5823": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5824": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5826": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5828": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5829": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5830": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5832": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "MUL",
      "path": "2"
    },
    "5833": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5484
      ],
      "op": "ADD",
      "path": "2"
    },
    "5834": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5836": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5495
      ],
      "op": "ADD",
      "path": "2"
    },
    "5837": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5529
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5838": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5529
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5839": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5529
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5840": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5471,
        5529
      ],
      "op": "POP",
      "path": "2"
    },
    "5841": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5589
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 50,
      "value": "0x1708"
    },
    "5844": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5587,
        5588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5846": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "5848": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5568,
        5574
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5849": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5850": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5851": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5852": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "LT",
      "path": "2"
    },
    "5853": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16E8"
    },
    "5856": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5857": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16E8"
    },
    "5860": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "5863": {
      "fn": "PirateRace.upgradeAttack",
      "jump": "i",
      "offset": [
        5562,
        5575
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5864": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5865": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5866": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5868": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5869": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5871": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5873": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5874": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5875": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5877": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "MUL",
      "path": "2"
    },
    "5878": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5575
      ],
      "op": "ADD",
      "path": "2"
    },
    "5879": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "5881": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5582
      ],
      "op": "ADD",
      "path": "2"
    },
    "5882": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5582
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5883": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22E0"
    },
    "5886": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5586
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5887": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5589
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5888": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5589
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5889": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5589
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "5894": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5589
      ],
      "op": "AND",
      "path": "2"
    },
    "5895": {
      "fn": "PirateRace.upgradeAttack",
      "jump": "i",
      "offset": [
        5562,
        5589
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5896": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5562,
        5589
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5897": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "5899": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5900": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5901": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5902": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5903": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "LT",
      "path": "2"
    },
    "5904": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x171B"
    },
    "5907": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5908": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x171B"
    },
    "5911": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "5914": {
      "fn": "PirateRace.upgradeAttack",
      "jump": "i",
      "offset": [
        5539,
        5552
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5915": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5916": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5917": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5919": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5920": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5922": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5924": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5925": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5926": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5928": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "MUL",
      "path": "2"
    },
    "5929": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5552
      ],
      "op": "ADD",
      "path": "2"
    },
    "5930": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "5932": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5559
      ],
      "op": "ADD",
      "path": "2"
    },
    "5933": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5589
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5934": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5589
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5935": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5589
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5936": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5539,
        5589
      ],
      "op": "POP",
      "path": "2"
    },
    "5937": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5641,
        5642
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 51,
      "value": "0x1"
    },
    "5939": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5617
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "5941": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5943": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5618,
        5628
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5950": {
      "op": "SHL"
    },
    "5951": {
      "op": "SUB"
    },
    "5952": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5629
      ],
      "op": "AND",
      "path": "2"
    },
    "5953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5959": {
      "op": "SHL"
    },
    "5960": {
      "op": "SUB"
    },
    "5961": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5629
      ],
      "op": "AND",
      "path": "2"
    },
    "5962": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5629
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5963": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5629
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5964": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5966": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5629
      ],
      "op": "ADD",
      "path": "2"
    },
    "5967": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5629
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5968": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5629
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5969": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5629
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5970": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5972": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5629
      ],
      "op": "ADD",
      "path": "2"
    },
    "5973": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5975": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5629
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5976": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5978": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5637
      ],
      "op": "ADD",
      "path": "2"
    },
    "5979": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5981": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5642
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5982": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5642
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5983": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5642
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5984": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5642
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1769"
    },
    "5987": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5642
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5988": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5989": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5642
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2571"
    },
    "5992": {
      "fn": "PirateRace.upgradeAttack",
      "jump": "i",
      "offset": [
        5608,
        5642
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5993": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5642
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5994": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5995": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5642
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5996": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5608,
        5642
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5997": {
      "op": "POP"
    },
    "5998": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5652,
        5668
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 52,
      "value": "0x1777"
    },
    "6001": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5652,
        5668
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6002": {
      "op": "POP"
    },
    "6003": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5652,
        5666
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12EF"
    },
    "6006": {
      "fn": "PirateRace.upgradeAttack",
      "jump": "i",
      "offset": [
        5652,
        5668
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6007": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5652,
        5668
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6008": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5683,
        5733
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 53,
      "value": "0x7C0725A32355C8362AAA495B37BDB3B9CFCC9FC46DBF2B0C85E7CCCE4669E6B8"
    },
    "6041": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5698,
        5708
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6042": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5710,
        5715
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6044": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5716,
        5722
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6045": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5710,
        5723
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6046": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5710,
        5723
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6047": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5710,
        5723
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6048": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5710,
        5723
      ],
      "op": "LT",
      "path": "2"
    },
    "6049": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5710,
        5723
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFA0"
    },
    "6052": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5710,
        5723
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6053": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5710,
        5723
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFA0"
    },
    "6056": {
      "fn": "PirateRace.upgradeAttack",
      "offset": [
        5710,
        5723
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "6059": {
      "fn": "PirateRace.upgradeAttack",
      "jump": "i",
      "offset": [
        5710,
        5723
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6060": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4769,
        5254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6061": {
      "offset": [
        9376,
        9387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6063": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9376,
        9387
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6064": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9376,
        9387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6066": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9376,
        9387
      ],
      "op": "AND",
      "path": "2"
    },
    "6067": {
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17CE"
    },
    "6070": {
      "offset": [
        9368,
        9421
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6071": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6073": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9368,
        9421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6074": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6078": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6080": {
      "op": "SHL"
    },
    "6081": {
      "offset": [
        9368,
        9421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6082": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9368,
        9421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6083": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6085": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9368,
        9421
      ],
      "op": "ADD",
      "path": "2"
    },
    "6086": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "6089": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9368,
        9421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6090": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26DB"
    },
    "6093": {
      "fn": "PirateRace.upgradeDefense",
      "jump": "i",
      "offset": [
        9368,
        9421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6094": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9368,
        9421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6095": {
      "offset": [
        9850,
        9860
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6096": {
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6098": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9845,
        9861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6099": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9845,
        9861
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6100": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9845,
        9861
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6101": {
      "offset": [
        9845,
        9849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "6103": {
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6105": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9845,
        9861
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6106": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6108": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9845,
        9861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6109": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9845,
        9861
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6110": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9845,
        9861
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6111": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6113": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9845,
        9861
      ],
      "op": "AND",
      "path": "2"
    },
    "6114": {
      "offset": [
        9844,
        9861
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6115": {
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17FE"
    },
    "6118": {
      "offset": [
        9836,
        9887
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6119": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6121": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9836,
        9887
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6122": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6128": {
      "op": "SHL"
    },
    "6129": {
      "offset": [
        9836,
        9887
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6130": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9836,
        9887
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6131": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6133": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9836,
        9887
      ],
      "op": "ADD",
      "path": "2"
    },
    "6134": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "6137": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9836,
        9887
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6138": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2712"
    },
    "6141": {
      "fn": "PirateRace.upgradeDefense",
      "jump": "i",
      "offset": [
        9836,
        9887
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6142": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        9836,
        9887
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6143": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4864,
        4874
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6144": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4836,
        4850
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6146": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4853,
        4875
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6147": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4853,
        4875
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6148": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4853,
        4875
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6149": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4853,
        4863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6151": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4853,
        4875
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6153": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4853,
        4875
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6154": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4853,
        4875
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6156": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4853,
        4875
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6157": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4853,
        4875
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6158": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4853,
        4875
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6159": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4898
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 54,
      "value": "0x6"
    },
    "6161": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6162": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6163": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4921,
        4922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6165": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4921,
        4922
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6166": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6167": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4853,
        4875
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6168": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4853,
        4875
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6169": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6170": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "LT",
      "path": "2"
    },
    "6171": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1826"
    },
    "6174": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6175": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1826"
    },
    "6178": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "6181": {
      "fn": "PirateRace.upgradeDefense",
      "jump": "i",
      "offset": [
        4893,
        4906
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6182": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6183": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6184": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6186": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6187": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6189": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6191": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6192": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6193": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6195": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "MUL",
      "path": "2"
    },
    "6196": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4906
      ],
      "op": "ADD",
      "path": "2"
    },
    "6197": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4917
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6199": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4917
      ],
      "op": "ADD",
      "path": "2"
    },
    "6200": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4917
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6201": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4922
      ],
      "op": "LT",
      "path": "2"
    },
    "6202": {
      "branch": 102,
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4893,
        4922
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6203": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4885,
        4963
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1892"
    },
    "6206": {
      "branch": 102,
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4885,
        4963
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6207": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4885,
        4963
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6209": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4885,
        4963
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6210": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6214": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6216": {
      "op": "SHL"
    },
    "6217": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4885,
        4963
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6218": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4885,
        4963
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6221": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4885,
        4963
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6223": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4885,
        4963
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6224": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4885,
        4963
      ],
      "op": "ADD",
      "path": "2"
    },
    "6225": {
      "op": "MSTORE"
    },
    "6226": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6228": {
      "op": "DUP1"
    },
    "6229": {
      "op": "DUP3"
    },
    "6230": {
      "op": "ADD"
    },
    "6231": {
      "op": "MSTORE"
    },
    "6232": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F756768206D6F6E657920746F20757067726164652064656665"
    },
    "6265": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6267": {
      "op": "DUP3"
    },
    "6268": {
      "op": "ADD"
    },
    "6269": {
      "op": "MSTORE"
    },
    "6270": {
      "op": "PUSH4",
      "value": "0x3739B297"
    },
    "6275": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6277": {
      "op": "SHL"
    },
    "6278": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6280": {
      "op": "DUP3"
    },
    "6281": {
      "op": "ADD"
    },
    "6282": {
      "op": "MSTORE"
    },
    "6283": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6285": {
      "op": "ADD"
    },
    "6286": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4885,
        4963
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "6289": {
      "op": "JUMP"
    },
    "6290": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4885,
        4963
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6291": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5009,
        5040
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 55,
      "value": "0x18AA"
    },
    "6294": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5038,
        5039
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6296": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5009,
        5014
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6298": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5015,
        5021
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6299": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5009,
        5022
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6300": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5009,
        5022
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6301": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5009,
        5022
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6302": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5009,
        5022
      ],
      "op": "LT",
      "path": "2"
    },
    "6303": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5009,
        5022
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10C8"
    },
    "6306": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5009,
        5022
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6307": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5009,
        5022
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10C8"
    },
    "6310": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5009,
        5022
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "6313": {
      "fn": "PirateRace.upgradeDefense",
      "jump": "i",
      "offset": [
        5009,
        5022
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6314": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5009,
        5040
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6315": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4987
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6317": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4988,
        4994
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6318": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6319": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6320": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6321": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "LT",
      "path": "2"
    },
    "6322": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18BD"
    },
    "6325": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6326": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18BD"
    },
    "6329": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "6332": {
      "fn": "PirateRace.upgradeDefense",
      "jump": "i",
      "offset": [
        4982,
        4995
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6333": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6334": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6335": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6337": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6338": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6340": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6342": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6343": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6344": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6346": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "MUL",
      "path": "2"
    },
    "6347": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        4995
      ],
      "op": "ADD",
      "path": "2"
    },
    "6348": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        5006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6350": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        5006
      ],
      "op": "ADD",
      "path": "2"
    },
    "6351": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        5040
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6352": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        5040
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6353": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        5040
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6354": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        4982,
        5040
      ],
      "op": "POP",
      "path": "2"
    },
    "6355": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5102
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 56,
      "value": "0x190A"
    },
    "6358": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5100,
        5101
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6360": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6362": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5080,
        5086
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6363": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6364": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6365": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6366": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "LT",
      "path": "2"
    },
    "6367": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18EA"
    },
    "6370": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6371": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18EA"
    },
    "6374": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "6377": {
      "fn": "PirateRace.upgradeDefense",
      "jump": "i",
      "offset": [
        5074,
        5087
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6378": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6379": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6380": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6382": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6383": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6385": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6387": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6388": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6389": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6391": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "MUL",
      "path": "2"
    },
    "6392": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5087
      ],
      "op": "ADD",
      "path": "2"
    },
    "6393": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6395": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5095
      ],
      "op": "ADD",
      "path": "2"
    },
    "6396": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5095
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6397": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5099
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22E0"
    },
    "6400": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5099
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6401": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5102
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6402": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5102
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6403": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5102
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "6408": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5102
      ],
      "op": "AND",
      "path": "2"
    },
    "6409": {
      "fn": "PirateRace.upgradeDefense",
      "jump": "i",
      "offset": [
        5074,
        5102
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6410": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5074,
        5102
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6411": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5055
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6413": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5056,
        5062
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6414": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6415": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6416": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6417": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "LT",
      "path": "2"
    },
    "6418": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x191D"
    },
    "6421": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6422": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x191D"
    },
    "6425": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "6428": {
      "fn": "PirateRace.upgradeDefense",
      "jump": "i",
      "offset": [
        5050,
        5063
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6429": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6430": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6431": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6433": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6434": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6436": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6438": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6439": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6440": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6442": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "MUL",
      "path": "2"
    },
    "6443": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5063
      ],
      "op": "ADD",
      "path": "2"
    },
    "6444": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5071
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6446": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5071
      ],
      "op": "ADD",
      "path": "2"
    },
    "6447": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5102
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6448": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5102
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6449": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5102
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6450": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5050,
        5102
      ],
      "op": "POP",
      "path": "2"
    },
    "6451": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5154,
        5155
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 57,
      "value": "0x1"
    },
    "6453": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5130
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "6455": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5142
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6457": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5131,
        5141
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6464": {
      "op": "SHL"
    },
    "6465": {
      "op": "SUB"
    },
    "6466": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5142
      ],
      "op": "AND",
      "path": "2"
    },
    "6467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6473": {
      "op": "SHL"
    },
    "6474": {
      "op": "SUB"
    },
    "6475": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5142
      ],
      "op": "AND",
      "path": "2"
    },
    "6476": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5142
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6477": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5142
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6478": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5142
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6480": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5142
      ],
      "op": "ADD",
      "path": "2"
    },
    "6481": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5142
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6482": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5142
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6483": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5142
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6484": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5142
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6486": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5142
      ],
      "op": "ADD",
      "path": "2"
    },
    "6487": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5142
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6489": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5142
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6490": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6492": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5150
      ],
      "op": "ADD",
      "path": "2"
    },
    "6493": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6495": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5155
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6496": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5155
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6497": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5155
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6498": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5155
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x196B"
    },
    "6501": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5155
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6502": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5155
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6503": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5155
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2571"
    },
    "6506": {
      "fn": "PirateRace.upgradeDefense",
      "jump": "i",
      "offset": [
        5121,
        5155
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6507": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5155
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6508": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5155
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6509": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5155
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6510": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5121,
        5155
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6511": {
      "op": "POP"
    },
    "6512": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5165,
        5181
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 58,
      "value": "0x1979"
    },
    "6515": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5165,
        5181
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6516": {
      "op": "POP"
    },
    "6517": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5165,
        5179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12EF"
    },
    "6520": {
      "fn": "PirateRace.upgradeDefense",
      "jump": "i",
      "offset": [
        5165,
        5181
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6521": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5165,
        5181
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6522": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5196,
        5247
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 59,
      "value": "0x7CCB3DD8C961E6D97590C65C2CFB6296766D9B731FF7B6F73E59B0BEB50EE2D4"
    },
    "6555": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5212,
        5222
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6556": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5224,
        5229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6558": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5230,
        5236
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6559": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5224,
        5237
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6560": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5224,
        5237
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6561": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5224,
        5237
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6562": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5224,
        5237
      ],
      "op": "LT",
      "path": "2"
    },
    "6563": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5224,
        5237
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFA0"
    },
    "6566": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5224,
        5237
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6567": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5224,
        5237
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFA0"
    },
    "6570": {
      "fn": "PirateRace.upgradeDefense",
      "offset": [
        5224,
        5237
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "6573": {
      "fn": "PirateRace.upgradeDefense",
      "jump": "i",
      "offset": [
        5224,
        5237
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6574": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5746,
        6965
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6575": {
      "offset": [
        9376,
        9387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6577": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9376,
        9387
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6578": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9376,
        9387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6580": {
      "branch": 103,
      "fn": "PirateRace.fireCannon",
      "offset": [
        9376,
        9387
      ],
      "op": "AND",
      "path": "2"
    },
    "6581": {
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19D0"
    },
    "6584": {
      "branch": 103,
      "offset": [
        9368,
        9421
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6585": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6587": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9368,
        9421
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6588": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6592": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6594": {
      "op": "SHL"
    },
    "6595": {
      "offset": [
        9368,
        9421
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6596": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9368,
        9421
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6597": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6599": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9368,
        9421
      ],
      "op": "ADD",
      "path": "2"
    },
    "6600": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "6603": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9368,
        9421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6604": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9368,
        9421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26DB"
    },
    "6607": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        9368,
        9421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6608": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9368,
        9421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6609": {
      "offset": [
        9850,
        9860
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6610": {
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6612": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9845,
        9861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6613": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9845,
        9861
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6614": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9845,
        9861
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6615": {
      "offset": [
        9845,
        9849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "6617": {
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6619": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9845,
        9861
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6620": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6622": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9845,
        9861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6623": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9845,
        9861
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6624": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9845,
        9861
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6625": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9845,
        9861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6627": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9845,
        9861
      ],
      "op": "AND",
      "path": "2"
    },
    "6628": {
      "offset": [
        9844,
        9861
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6629": {
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A00"
    },
    "6632": {
      "offset": [
        9836,
        9887
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6633": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6635": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9836,
        9887
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6636": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6640": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6642": {
      "op": "SHL"
    },
    "6643": {
      "offset": [
        9836,
        9887
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6644": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9836,
        9887
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6645": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6647": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9836,
        9887
      ],
      "op": "ADD",
      "path": "2"
    },
    "6648": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "6651": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9836,
        9887
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6652": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9836,
        9887
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2712"
    },
    "6655": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        9836,
        9887
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6656": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        9836,
        9887
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6657": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5848,
        5853
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 60,
      "value": "0x6"
    },
    "6659": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5848,
        5860
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6660": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5835,
        5860
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6661": {
      "branch": 104,
      "fn": "PirateRace.fireCannon",
      "offset": [
        5835,
        5860
      ],
      "op": "LT",
      "path": "2"
    },
    "6662": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5827,
        5885
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A48"
    },
    "6665": {
      "branch": 104,
      "fn": "PirateRace.fireCannon",
      "offset": [
        5827,
        5885
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6666": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5827,
        5885
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6668": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5827,
        5885
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6669": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6673": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6675": {
      "op": "SHL"
    },
    "6676": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5827,
        5885
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6677": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5827,
        5885
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6680": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5827,
        5885
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6682": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5827,
        5885
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6683": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5827,
        5885
      ],
      "op": "ADD",
      "path": "2"
    },
    "6684": {
      "op": "MSTORE"
    },
    "6685": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "6687": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6689": {
      "op": "DUP3"
    },
    "6690": {
      "op": "ADD"
    },
    "6691": {
      "op": "MSTORE"
    },
    "6692": {
      "op": "PUSH20",
      "value": "0x24B73B30B634B2103A30B933B2BA103A32B0B697"
    },
    "6713": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "6715": {
      "op": "SHL"
    },
    "6716": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6718": {
      "op": "DUP3"
    },
    "6719": {
      "op": "ADD"
    },
    "6720": {
      "op": "MSTORE"
    },
    "6721": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6723": {
      "op": "ADD"
    },
    "6724": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5827,
        5885
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "6727": {
      "op": "JUMP"
    },
    "6728": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5827,
        5885
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6729": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5928,
        5938
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 61
    },
    "6730": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5917,
        5939
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6732": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5917,
        5939
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6733": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5917,
        5939
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6734": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5917,
        5939
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6735": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5917,
        5927
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6737": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5917,
        5939
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6739": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5917,
        5939
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6740": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5917,
        5939
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6742": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5917,
        5939
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6743": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5917,
        5939
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6744": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5917,
        5939
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6745": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5903,
        5939
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6746": {
      "branch": 105,
      "fn": "PirateRace.fireCannon",
      "offset": [
        5903,
        5939
      ],
      "op": "SUB",
      "path": "2"
    },
    "6747": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5895,
        5968
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA6"
    },
    "6750": {
      "branch": 105,
      "fn": "PirateRace.fireCannon",
      "offset": [
        5895,
        5968
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6751": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5895,
        5968
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6753": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5895,
        5968
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6754": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6758": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6760": {
      "op": "SHL"
    },
    "6761": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5895,
        5968
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6762": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5895,
        5968
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6763": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6765": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5895,
        5968
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6767": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5895,
        5968
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6768": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5895,
        5968
      ],
      "op": "ADD",
      "path": "2"
    },
    "6769": {
      "op": "MSTORE"
    },
    "6770": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6772": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6774": {
      "op": "DUP3"
    },
    "6775": {
      "op": "ADD"
    },
    "6776": {
      "op": "MSTORE"
    },
    "6777": {
      "op": "PUSH32",
      "value": "0x43616E6E6F742066697265206174206F776E207465616D2E0000000000000000"
    },
    "6810": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6812": {
      "op": "DUP3"
    },
    "6813": {
      "op": "ADD"
    },
    "6814": {
      "op": "MSTORE"
    },
    "6815": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6817": {
      "op": "ADD"
    },
    "6818": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5895,
        5968
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "6821": {
      "op": "JUMP"
    },
    "6822": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5895,
        5968
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6823": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6015,
        6025
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6824": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5987,
        6001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6826": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6004,
        6026
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6827": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6004,
        6026
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6828": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6004,
        6026
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6829": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6004,
        6014
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6831": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6004,
        6026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6833": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6004,
        6026
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6834": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6004,
        6026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6836": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6004,
        6026
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6837": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6004,
        6026
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6838": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6004,
        6026
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6839": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6841": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6842": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6843": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6004,
        6026
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6844": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6004,
        6026
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6845": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5987,
        6001
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6846": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6082,
        6084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x21"
    },
    "6848": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6082,
        6084
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6849": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6147
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6850": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6148,
        6158
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6851": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6148,
        6158
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6852": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6853": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "LT",
      "path": "2"
    },
    "6854": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AD1"
    },
    "6857": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6858": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AD1"
    },
    "6861": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "6864": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6142,
        6159
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6865": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6866": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6867": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6869": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6870": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6872": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6874": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6875": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6876": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6878": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "MUL",
      "path": "2"
    },
    "6879": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6159
      ],
      "op": "ADD",
      "path": "2"
    },
    "6880": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6167
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6882": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6167
      ],
      "op": "ADD",
      "path": "2"
    },
    "6883": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6142,
        6167
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6884": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6124
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6886": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6125,
        6131
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6887": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6888": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6889": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6890": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "LT",
      "path": "2"
    },
    "6891": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AF6"
    },
    "6894": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6895": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AF6"
    },
    "6898": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "6901": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6119,
        6132
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6902": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6903": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6904": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6906": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6907": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6909": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6911": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6912": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6913": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6915": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "MUL",
      "path": "2"
    },
    "6916": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6132
      ],
      "op": "ADD",
      "path": "2"
    },
    "6917": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6919": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6139
      ],
      "op": "ADD",
      "path": "2"
    },
    "6920": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6119,
        6139
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6921": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6107,
        6116
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6922": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6107,
        6139
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B13"
    },
    "6925": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6107,
        6139
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6926": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6107,
        6139
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6927": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6107,
        6139
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2571"
    },
    "6930": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6107,
        6139
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6931": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6107,
        6139
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6932": {
      "branch": 106,
      "fn": "PirateRace.fireCannon",
      "offset": [
        6107,
        6167
      ],
      "op": "LT",
      "path": "2"
    },
    "6933": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6104,
        6290
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6934": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6104,
        6290
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B21"
    },
    "6937": {
      "branch": 106,
      "fn": "PirateRace.fireCannon",
      "offset": [
        6104,
        6290
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6938": {
      "op": "POP"
    },
    "6939": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6181,
        6182
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 62,
      "value": "0x1"
    },
    "6941": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6104,
        6290
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B84"
    },
    "6944": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6104,
        6290
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6945": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6104,
        6290
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6946": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6270
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 63,
      "value": "0x6"
    },
    "6948": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6271,
        6281
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6949": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6950": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6951": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6952": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "LT",
      "path": "2"
    },
    "6953": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B34"
    },
    "6956": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6957": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B34"
    },
    "6960": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "6963": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6265,
        6282
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6964": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6965": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6966": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6968": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6969": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6971": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6973": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6974": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6975": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6977": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "MUL",
      "path": "2"
    },
    "6978": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6282
      ],
      "op": "ADD",
      "path": "2"
    },
    "6979": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6981": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6290
      ],
      "op": "ADD",
      "path": "2"
    },
    "6982": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6265,
        6290
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6983": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "6985": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6248,
        6254
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6986": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6987": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6988": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6989": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "LT",
      "path": "2"
    },
    "6990": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B59"
    },
    "6993": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6994": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B59"
    },
    "6997": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "7000": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6242,
        6255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7001": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7002": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7003": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7005": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7006": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7008": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7010": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7011": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7012": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7014": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "MUL",
      "path": "2"
    },
    "7015": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6255
      ],
      "op": "ADD",
      "path": "2"
    },
    "7016": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7018": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6262
      ],
      "op": "ADD",
      "path": "2"
    },
    "7019": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6242,
        6262
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7020": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6237,
        6239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x21"
    },
    "7022": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6237,
        6262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B77"
    },
    "7025": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6237,
        6262
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7026": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6237,
        6262
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7027": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6237,
        6262
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2571"
    },
    "7030": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6237,
        6262
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7031": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6237,
        6262
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7032": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6237,
        6290
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B81"
    },
    "7035": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6237,
        6290
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7036": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6237,
        6290
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7037": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6237,
        6290
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x269C"
    },
    "7040": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6237,
        6290
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7041": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6237,
        6290
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7042": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6225,
        6290
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7043": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6225,
        6290
      ],
      "op": "POP",
      "path": "2"
    },
    "7044": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6104,
        6290
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7045": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6348,
        6350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x63"
    },
    "7047": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6336,
        6345
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7048": {
      "branch": 107,
      "fn": "PirateRace.fireCannon",
      "offset": [
        6336,
        6350
      ],
      "op": "GT",
      "path": "2"
    },
    "7049": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6333,
        6366
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7050": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6333,
        6366
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B91"
    },
    "7053": {
      "branch": 107,
      "fn": "PirateRace.fireCannon",
      "offset": [
        6333,
        6366
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7054": {
      "op": "POP"
    },
    "7055": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6364,
        6366
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 64,
      "value": "0x63"
    },
    "7057": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6333,
        6366
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7058": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6404,
        6418
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7060": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6489,
        6492
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "7062": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6456,
        6471
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "7063": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6473,
        6483
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7064": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7066": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7067": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7069": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "ADD",
      "path": "2"
    },
    "7070": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BC3"
    },
    "7073": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7074": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7075": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7076": {
      "op": "SWAP2"
    },
    "7077": {
      "op": "DUP3"
    },
    "7078": {
      "op": "MSTORE"
    },
    "7079": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7081": {
      "op": "SHL"
    },
    "7082": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "7095": {
      "op": "NOT"
    },
    "7096": {
      "op": "AND"
    },
    "7097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7099": {
      "op": "DUP3"
    },
    "7100": {
      "op": "ADD"
    },
    "7101": {
      "op": "MSTORE"
    },
    "7102": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "7104": {
      "op": "ADD"
    },
    "7105": {
      "op": "SWAP1"
    },
    "7106": {
      "op": "JUMP"
    },
    "7107": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7108": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7110": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7111": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7113": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7114": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7115": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "SUB",
      "path": "2"
    },
    "7116": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "SUB",
      "path": "2"
    },
    "7117": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7118": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7119": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7120": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7122": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6439,
        6484
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7123": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6429,
        6485
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7124": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6429,
        6485
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7125": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6429,
        6485
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7126": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6429,
        6485
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7128": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6429,
        6485
      ],
      "op": "ADD",
      "path": "2"
    },
    "7129": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6429,
        6485
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7130": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6421,
        6486
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7132": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6421,
        6486
      ],
      "op": "SHR",
      "path": "2"
    },
    "7133": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6421,
        6492
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BE6"
    },
    "7136": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6421,
        6492
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7137": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6421,
        6492
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7138": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6421,
        6492
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2741"
    },
    "7141": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6421,
        6492
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7142": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6421,
        6492
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7143": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6404,
        6492
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7144": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6404,
        6492
      ],
      "op": "POP",
      "path": "2"
    },
    "7145": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6516,
        6525
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7146": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6507,
        6513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7147": {
      "branch": 108,
      "fn": "PirateRace.fireCannon",
      "offset": [
        6507,
        6525
      ],
      "op": "LT",
      "path": "2"
    },
    "7148": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6503,
        6785
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7149": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6503,
        6785
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CC8"
    },
    "7152": {
      "branch": 108,
      "fn": "PirateRace.fireCannon",
      "offset": [
        6503,
        6785
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7153": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6570,
        6613
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 65,
      "value": "0x1C0D"
    },
    "7156": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6609,
        6612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "7158": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6570,
        6604
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC96"
    },
    "7161": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6601,
        6603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x62"
    },
    "7163": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6570,
        6575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7165": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6576,
        6586
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7166": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6570,
        6587
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7167": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6570,
        6587
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7168": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6570,
        6587
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7169": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6570,
        6587
      ],
      "op": "LT",
      "path": "2"
    },
    "7170": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6570,
        6587
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC76"
    },
    "7173": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6570,
        6587
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7174": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6570,
        6587
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC76"
    },
    "7177": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6570,
        6587
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "7180": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6570,
        6587
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7181": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6570,
        6613
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7182": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7184": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6547,
        6557
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7185": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7186": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7187": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7188": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "LT",
      "path": "2"
    },
    "7189": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C20"
    },
    "7192": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7193": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C20"
    },
    "7196": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "7199": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6541,
        6558
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7200": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7201": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7202": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7204": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7205": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7207": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7209": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7210": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7211": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7213": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "MUL",
      "path": "2"
    },
    "7214": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6558
      ],
      "op": "ADD",
      "path": "2"
    },
    "7215": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7217": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6567
      ],
      "op": "ADD",
      "path": "2"
    },
    "7218": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6613
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7219": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6613
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7220": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6613
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7221": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6541,
        6613
      ],
      "op": "POP",
      "path": "2"
    },
    "7222": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6676,
        6677
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7224": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7226": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6656,
        6666
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7227": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7228": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7229": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7230": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "LT",
      "path": "2"
    },
    "7231": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C4A"
    },
    "7234": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7235": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C4A"
    },
    "7238": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "7241": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6650,
        6667
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7242": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7243": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7244": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7246": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7247": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7249": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7251": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7252": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7253": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7255": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "MUL",
      "path": "2"
    },
    "7256": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6667
      ],
      "op": "ADD",
      "path": "2"
    },
    "7257": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7259": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6673
      ],
      "op": "ADD",
      "path": "2"
    },
    "7260": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6673
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7261": {
      "branch": 109,
      "fn": "PirateRace.fireCannon",
      "offset": [
        6650,
        6677
      ],
      "op": "GT",
      "path": "2"
    },
    "7262": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6646,
        6735
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7263": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6646,
        6735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CC3"
    },
    "7266": {
      "branch": 109,
      "fn": "PirateRace.fireCannon",
      "offset": [
        6646,
        6735
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7267": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6735
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 66,
      "value": "0x1C9A"
    },
    "7270": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6733,
        6734
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7272": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6710
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7274": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6711,
        6721
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7275": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7276": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7277": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7278": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "LT",
      "path": "2"
    },
    "7279": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C7A"
    },
    "7282": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7283": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C7A"
    },
    "7286": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "7289": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6705,
        6722
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7290": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7291": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7292": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7294": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7295": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7297": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7299": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7300": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7301": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7303": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "MUL",
      "path": "2"
    },
    "7304": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6722
      ],
      "op": "ADD",
      "path": "2"
    },
    "7305": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6728
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7307": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6728
      ],
      "op": "ADD",
      "path": "2"
    },
    "7308": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6728
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7309": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6732
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22D4"
    },
    "7312": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6732
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7313": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6735
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7314": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7315": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6735
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "7320": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6735
      ],
      "op": "AND",
      "path": "2"
    },
    "7321": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6705,
        6735
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7322": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6705,
        6735
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7323": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7325": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6685,
        6695
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7326": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7327": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7328": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7329": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "LT",
      "path": "2"
    },
    "7330": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CAD"
    },
    "7333": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7334": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CAD"
    },
    "7337": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "7340": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6679,
        6696
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7341": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7342": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7343": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7345": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7346": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7348": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7350": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7351": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7352": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7354": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "MUL",
      "path": "2"
    },
    "7355": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6696
      ],
      "op": "ADD",
      "path": "2"
    },
    "7356": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7358": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6702
      ],
      "op": "ADD",
      "path": "2"
    },
    "7359": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6735
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7360": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7361": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6735
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7362": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6679,
        6735
      ],
      "op": "POP",
      "path": "2"
    },
    "7363": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6646,
        6735
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7364": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6770,
        6774
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 67,
      "value": "0x1"
    },
    "7366": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6764,
        6774
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7367": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6764,
        6774
      ],
      "op": "POP",
      "path": "2"
    },
    "7368": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6503,
        6785
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7369": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6813,
        6823
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 68
    },
    "7370": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7372": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6824
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7373": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6824
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7374": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6824
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7375": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6812
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7377": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7379": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6824
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7380": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7382": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6824
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7383": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6824
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7384": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6836,
        6837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7386": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6832
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7387": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6832
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7388": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6832
      ],
      "op": "ADD",
      "path": "2"
    },
    "7389": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6837
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7390": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6837
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7391": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6836,
        6837
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7392": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6836,
        6837
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7393": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6832
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7394": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6832
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7395": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6837
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CED"
    },
    "7398": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6837
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7399": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6836,
        6837
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7400": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6836,
        6837
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7401": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6837
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2571"
    },
    "7404": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6803,
        6837
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7405": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6837
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7406": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6837
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7407": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6837
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7408": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6803,
        6837
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7409": {
      "op": "POP"
    },
    "7410": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6847,
        6863
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 69,
      "value": "0x1CFB"
    },
    "7413": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6847,
        6863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7414": {
      "op": "POP"
    },
    "7415": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6847,
        6861
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12EF"
    },
    "7418": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6847,
        6863
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7419": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6847,
        6863
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7420": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6878,
        6958
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 70,
      "value": "0x1070E59B5639F0799BD97E9AA418E32193DB53C11A30E2BADAB45D1AC1F1E4E4"
    },
    "7453": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6890,
        6900
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7454": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6907
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7456": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6908,
        6914
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7457": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7458": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7459": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7460": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "LT",
      "path": "2"
    },
    "7461": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D30"
    },
    "7464": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7465": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D30"
    },
    "7468": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "7471": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6902,
        6915
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7472": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7473": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7474": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7476": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7477": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7479": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7481": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7482": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7483": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7485": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "MUL",
      "path": "2"
    },
    "7486": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6915
      ],
      "op": "ADD",
      "path": "2"
    },
    "7487": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6924
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7489": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6902,
        6924
      ],
      "op": "ADD",
      "path": "2"
    },
    "7490": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6931
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7492": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6932,
        6942
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7493": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7494": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7495": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7496": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "LT",
      "path": "2"
    },
    "7497": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D54"
    },
    "7500": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7501": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D54"
    },
    "7504": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "7507": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6926,
        6943
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7508": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7509": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7510": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7512": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7513": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7515": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7517": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7518": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7519": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7521": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "MUL",
      "path": "2"
    },
    "7522": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6943
      ],
      "op": "ADD",
      "path": "2"
    },
    "7523": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6952
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7525": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6926,
        6952
      ],
      "op": "ADD",
      "path": "2"
    },
    "7526": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6954,
        6957
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7527": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6878,
        6958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7529": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6878,
        6958
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7530": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6878,
        6958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D76"
    },
    "7533": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6878,
        6958
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7534": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6878,
        6958
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7535": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6878,
        6958
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7536": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6878,
        6958
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7537": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6878,
        6958
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7538": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6878,
        6958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E0"
    },
    "7541": {
      "fn": "PirateRace.fireCannon",
      "jump": "i",
      "offset": [
        6878,
        6958
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7542": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6878,
        6958
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7543": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6878,
        6958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7545": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6878,
        6958
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7546": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6878,
        6958
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7547": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6878,
        6958
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7548": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6878,
        6958
      ],
      "op": "SUB",
      "path": "2"
    },
    "7549": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6878,
        6958
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7550": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        6878,
        6958
      ],
      "op": "LOG1",
      "path": "2"
    },
    "7551": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5817,
        6965
      ],
      "op": "POP",
      "path": "2"
    },
    "7552": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5817,
        6965
      ],
      "op": "POP",
      "path": "2"
    },
    "7553": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5817,
        6965
      ],
      "op": "POP",
      "path": "2"
    },
    "7554": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5817,
        6965
      ],
      "op": "POP",
      "path": "2"
    },
    "7555": {
      "fn": "PirateRace.fireCannon",
      "offset": [
        5746,
        6965
      ],
      "op": "POP",
      "path": "2"
    },
    "7556": {
      "fn": "PirateRace.fireCannon",
      "jump": "o",
      "offset": [
        5746,
        6965
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7557": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8117,
        8381
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7558": {
      "offset": [
        9672,
        9682
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7559": {
      "offset": [
        9637,
        9668
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7561": {
      "offset": [
        9645,
        9667
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7562": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9645,
        9667
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7563": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9645,
        9667
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7564": {
      "offset": [
        9645,
        9655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7566": {
      "offset": [
        9645,
        9667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7568": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9645,
        9667
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7569": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9645,
        9667
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7570": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9645,
        9667
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7571": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9645,
        9667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7573": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9645,
        9667
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7574": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9645,
        9667
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7575": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9645,
        9667
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7576": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9645,
        9667
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7577": {
      "offset": [
        9637,
        9668
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7578": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9637,
        9668
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7579": {
      "offset": [
        9637,
        9644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "7581": {
      "offset": [
        9637,
        9668
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7582": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9637,
        9668
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7583": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9637,
        9668
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7584": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9637,
        9668
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7585": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9637,
        9668
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7586": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9637,
        9668
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7593": {
      "op": "SHL"
    },
    "7594": {
      "op": "SUB"
    },
    "7595": {
      "offset": [
        9637,
        9668
      ],
      "op": "AND",
      "path": "2"
    },
    "7596": {
      "offset": [
        9637,
        9682
      ],
      "op": "EQ",
      "path": "2"
    },
    "7597": {
      "branch": 110,
      "fn": "PirateRace.putInJail",
      "offset": [
        9637,
        9682
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7598": {
      "offset": [
        9637,
        9733
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DDA"
    },
    "7601": {
      "branch": 110,
      "offset": [
        9637,
        9733
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7602": {
      "op": "POP"
    },
    "7603": {
      "offset": [
        9723,
        9733
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7604": {
      "offset": [
        9686,
        9719
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7606": {
      "offset": [
        9696,
        9718
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7607": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9696,
        9718
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7608": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9696,
        9718
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7609": {
      "offset": [
        9696,
        9706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7611": {
      "offset": [
        9696,
        9718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7613": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9696,
        9718
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7614": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9696,
        9718
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7615": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9696,
        9718
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7616": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9696,
        9718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7618": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9696,
        9718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7619": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9696,
        9718
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7620": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9696,
        9718
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7621": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9696,
        9718
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7622": {
      "offset": [
        9686,
        9719
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7623": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9686,
        9719
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7624": {
      "offset": [
        9686,
        9695
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "7626": {
      "offset": [
        9686,
        9719
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7627": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9686,
        9719
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7628": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9686,
        9719
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7629": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9686,
        9719
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7630": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9686,
        9719
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7631": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9686,
        9719
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7638": {
      "op": "SHL"
    },
    "7639": {
      "op": "SUB"
    },
    "7640": {
      "offset": [
        9686,
        9719
      ],
      "op": "AND",
      "path": "2"
    },
    "7641": {
      "offset": [
        9686,
        9733
      ],
      "op": "EQ",
      "path": "2"
    },
    "7642": {
      "offset": [
        9637,
        9733
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7643": {
      "offset": [
        9629,
        9781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DF6"
    },
    "7646": {
      "offset": [
        9629,
        9781
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7647": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9629,
        9781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7649": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9629,
        9781
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7650": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7654": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7656": {
      "op": "SHL"
    },
    "7657": {
      "offset": [
        9629,
        9781
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7658": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9629,
        9781
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7659": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9629,
        9781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7661": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9629,
        9781
      ],
      "op": "ADD",
      "path": "2"
    },
    "7662": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9629,
        9781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "7665": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9629,
        9781
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7666": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9629,
        9781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x276E"
    },
    "7669": {
      "fn": "PirateRace.putInJail",
      "jump": "i",
      "offset": [
        9629,
        9781
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7670": {
      "fn": "PirateRace.putInJail",
      "offset": [
        9629,
        9781
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7677": {
      "op": "SHL"
    },
    "7678": {
      "op": "SUB"
    },
    "7679": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8222,
        8238
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 71
    },
    "7680": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8222,
        8238
      ],
      "op": "AND",
      "path": "2"
    },
    "7681": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8222,
        8238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7683": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8222,
        8238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7684": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8222,
        8238
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7685": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8222,
        8238
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7686": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8222,
        8232
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7688": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8222,
        8238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7690": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8222,
        8238
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7691": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8222,
        8238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7693": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8222,
        8238
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7694": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8222,
        8238
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7695": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8222,
        8238
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7696": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8222,
        8238
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7697": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8207,
        8217
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7698": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8196,
        8218
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7699": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8196,
        8218
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7700": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8196,
        8218
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7701": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8196,
        8218
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7702": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8196,
        8218
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7703": {
      "branch": 111,
      "fn": "PirateRace.putInJail",
      "offset": [
        8196,
        8238
      ],
      "op": "EQ",
      "path": "2"
    },
    "7704": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8188,
        8286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E77"
    },
    "7707": {
      "branch": 111,
      "fn": "PirateRace.putInJail",
      "offset": [
        8188,
        8286
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7708": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8188,
        8286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7710": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8188,
        8286
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7711": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7715": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7717": {
      "op": "SHL"
    },
    "7718": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8188,
        8286
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7719": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8188,
        8286
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7722": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8188,
        8286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7724": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8188,
        8286
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7725": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8188,
        8286
      ],
      "op": "ADD",
      "path": "2"
    },
    "7726": {
      "op": "MSTORE"
    },
    "7727": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "7729": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7731": {
      "op": "DUP3"
    },
    "7732": {
      "op": "ADD"
    },
    "7733": {
      "op": "MSTORE"
    },
    "7734": {
      "op": "PUSH32",
      "value": "0x43616E6E6F742070757420736F6D656F6E65206F6E20616E6F74686572207465"
    },
    "7767": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7769": {
      "op": "DUP3"
    },
    "7770": {
      "op": "ADD"
    },
    "7771": {
      "op": "MSTORE"
    },
    "7772": {
      "op": "PUSH11",
      "value": "0x30B69034B7103530B4B617"
    },
    "7784": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "7786": {
      "op": "SHL"
    },
    "7787": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7789": {
      "op": "DUP3"
    },
    "7790": {
      "op": "ADD"
    },
    "7791": {
      "op": "MSTORE"
    },
    "7792": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7794": {
      "op": "ADD"
    },
    "7795": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8188,
        8286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "7798": {
      "op": "JUMP"
    },
    "7799": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8188,
        8286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7806": {
      "op": "SHL"
    },
    "7807": {
      "op": "SUB"
    },
    "7808": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8306
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 72
    },
    "7809": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8306
      ],
      "op": "AND",
      "path": "2"
    },
    "7810": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8306
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7812": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8306
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7813": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8306
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7814": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8306
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7815": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8300
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "7817": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8306
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7819": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8306
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7820": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8306
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7821": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8306
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7822": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8306
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7824": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8306
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7825": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8306
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7826": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8306
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7827": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8313
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7828": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8313
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7829": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7831": {
      "op": "NOT"
    },
    "7832": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8313
      ],
      "op": "AND",
      "path": "2"
    },
    "7833": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8309,
        8313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7835": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8313
      ],
      "op": "OR",
      "path": "2"
    },
    "7836": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7837": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8296,
        8313
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7838": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8347,
        8357
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 73,
      "value": "0x7"
    },
    "7840": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8347,
        8363
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7841": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8347,
        8363
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7842": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8347,
        8363
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7843": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8347,
        8363
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7844": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8347,
        8363
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7845": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8347,
        8363
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7846": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8341,
        8346
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7848": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8341,
        8364
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7849": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8341,
        8364
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7850": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8328,
        8374
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x3A20C27241F03F182FDEA2523631CB8DBE89E8C84A05CDB19F6F804D58F8F3C7"
    },
    "7883": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8328,
        8374
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7884": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8301,
        8305
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7885": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8301,
        8305
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7886": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8341,
        8346
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7887": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8341,
        8364
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7888": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8341,
        8364
      ],
      "op": "LT",
      "path": "2"
    },
    "7889": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8341,
        8364
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFA0"
    },
    "7892": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8341,
        8364
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7893": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8341,
        8364
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFA0"
    },
    "7896": {
      "fn": "PirateRace.putInJail",
      "offset": [
        8341,
        8364
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "7899": {
      "fn": "PirateRace.putInJail",
      "jump": "i",
      "offset": [
        8341,
        8364
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7900": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2006,
        2197
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7901": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2103,
        2108
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 74,
      "value": "0x0"
    },
    "7903": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2103,
        2108
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7910": {
      "op": "SHL"
    },
    "7911": {
      "op": "SUB"
    },
    "7912": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2103,
        2108
      ],
      "op": "AND",
      "path": "2"
    },
    "7913": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2089,
        2099
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7914": {
      "branch": 112,
      "fn": "PirateRace.nameTeam",
      "offset": [
        2089,
        2108
      ],
      "op": "EQ",
      "path": "2"
    },
    "7915": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2081,
        2147
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F41"
    },
    "7918": {
      "branch": 112,
      "fn": "PirateRace.nameTeam",
      "offset": [
        2081,
        2147
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7919": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2081,
        2147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7921": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2081,
        2147
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7922": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7926": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7928": {
      "op": "SHL"
    },
    "7929": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2081,
        2147
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7930": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2081,
        2147
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7931": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7933": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2081,
        2147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7935": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2081,
        2147
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7936": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2081,
        2147
      ],
      "op": "ADD",
      "path": "2"
    },
    "7937": {
      "op": "MSTORE"
    },
    "7938": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7940": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7942": {
      "op": "DUP3"
    },
    "7943": {
      "op": "ADD"
    },
    "7944": {
      "op": "MSTORE"
    },
    "7945": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920746865206F776E65722063616E206E616D6520746865207465616D"
    },
    "7978": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7980": {
      "op": "DUP3"
    },
    "7981": {
      "op": "ADD"
    },
    "7982": {
      "op": "MSTORE"
    },
    "7983": {
      "op": "PUSH2",
      "value": "0x3997"
    },
    "7986": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "7988": {
      "op": "SHL"
    },
    "7989": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7991": {
      "op": "DUP3"
    },
    "7992": {
      "op": "ADD"
    },
    "7993": {
      "op": "MSTORE"
    },
    "7994": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7996": {
      "op": "ADD"
    },
    "7997": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2081,
        2147
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "8000": {
      "op": "JUMP"
    },
    "8001": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2081,
        2147
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8002": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2182,
        2190
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 75
    },
    "8003": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2162
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "8005": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2163,
        2169
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8006": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8007": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8008": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8009": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "LT",
      "path": "2"
    },
    "8010": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F55"
    },
    "8013": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8014": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F55"
    },
    "8017": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "8020": {
      "fn": "PirateRace.nameTeam",
      "jump": "i",
      "offset": [
        2157,
        2170
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8021": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8022": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8023": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8025": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8026": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8028": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8030": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8031": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8032": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8034": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "MUL",
      "path": "2"
    },
    "8035": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2170
      ],
      "op": "ADD",
      "path": "2"
    },
    "8036": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8038": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2179
      ],
      "op": "ADD",
      "path": "2"
    },
    "8039": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2190
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8040": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2190
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8041": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F72"
    },
    "8044": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2190
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8045": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2190
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8046": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x292A"
    },
    "8049": {
      "fn": "PirateRace.nameTeam",
      "jump": "i",
      "offset": [
        2157,
        2190
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8050": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2190
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8051": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2157,
        2190
      ],
      "op": "POP",
      "path": "2"
    },
    "8052": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2006,
        2197
      ],
      "op": "POP",
      "path": "2"
    },
    "8053": {
      "fn": "PirateRace.nameTeam",
      "offset": [
        2006,
        2197
      ],
      "op": "POP",
      "path": "2"
    },
    "8054": {
      "fn": "PirateRace.nameTeam",
      "jump": "o",
      "offset": [
        2006,
        2197
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8055": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3434,
        3706
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8056": {
      "offset": [
        9519,
        9529
      ],
      "op": "CALLER",
      "path": "2"
    },
    "8057": {
      "offset": [
        9484,
        9515
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8059": {
      "offset": [
        9492,
        9514
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8060": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9492,
        9514
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8061": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9492,
        9514
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8062": {
      "offset": [
        9492,
        9502
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8064": {
      "offset": [
        9492,
        9514
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8066": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9492,
        9514
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8067": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9492,
        9514
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8068": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9492,
        9514
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8069": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9492,
        9514
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8071": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9492,
        9514
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8072": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9492,
        9514
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8073": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9492,
        9514
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8074": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9492,
        9514
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8075": {
      "offset": [
        9484,
        9515
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8076": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9484,
        9515
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8077": {
      "offset": [
        9484,
        9491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8079": {
      "offset": [
        9484,
        9515
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8080": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9484,
        9515
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8081": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9484,
        9515
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8082": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9484,
        9515
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8083": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9484,
        9515
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8084": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9484,
        9515
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8091": {
      "op": "SHL"
    },
    "8092": {
      "op": "SUB"
    },
    "8093": {
      "offset": [
        9484,
        9515
      ],
      "op": "AND",
      "path": "2"
    },
    "8094": {
      "offset": [
        9484,
        9529
      ],
      "op": "EQ",
      "path": "2"
    },
    "8095": {
      "offset": [
        9476,
        9563
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FEA"
    },
    "8098": {
      "offset": [
        9476,
        9563
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8099": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9476,
        9563
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8101": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9476,
        9563
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8102": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8106": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8108": {
      "op": "SHL"
    },
    "8109": {
      "offset": [
        9476,
        9563
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8110": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9476,
        9563
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8113": {
      "offset": [
        9476,
        9563
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8115": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9476,
        9563
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8116": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        9476,
        9563
      ],
      "op": "ADD",
      "path": "2"
    },
    "8117": {
      "op": "MSTORE"
    },
    "8118": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "8120": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8122": {
      "op": "DUP3"
    },
    "8123": {
      "op": "ADD"
    },
    "8124": {
      "op": "MSTORE"
    },
    "8125": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920746865206361707461696E2063616E20646F20746869732E000000"
    },
    "8158": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8160": {
      "op": "DUP3"
    },
    "8161": {
      "op": "ADD"
    },
    "8162": {
      "op": "MSTORE"
    },
    "8163": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8165": {
      "op": "ADD"
    },
    "8166": {
      "offset": [
        9476,
        9563
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "8169": {
      "op": "JUMP"
    },
    "8170": {
      "offset": [
        9476,
        9563
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8177": {
      "op": "SHL"
    },
    "8178": {
      "op": "SUB"
    },
    "8179": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3531,
        3547
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 76
    },
    "8180": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3531,
        3547
      ],
      "op": "AND",
      "path": "2"
    },
    "8181": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3531,
        3547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8183": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3531,
        3547
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8184": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3531,
        3547
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8185": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3531,
        3547
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8186": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3531,
        3541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8188": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3531,
        3547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8190": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3531,
        3547
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8191": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3531,
        3547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8193": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3531,
        3547
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8194": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3531,
        3547
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8195": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3531,
        3547
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8196": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3531,
        3547
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8197": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3516,
        3526
      ],
      "op": "CALLER",
      "path": "2"
    },
    "8198": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3505,
        3527
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8199": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3505,
        3527
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8200": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3505,
        3527
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8201": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3505,
        3527
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8202": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3505,
        3527
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8203": {
      "branch": 113,
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3505,
        3547
      ],
      "op": "EQ",
      "path": "2"
    },
    "8204": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3497,
        3584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2057"
    },
    "8207": {
      "branch": 113,
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3497,
        3584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8208": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3497,
        3584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8210": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3497,
        3584
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8211": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8215": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8217": {
      "op": "SHL"
    },
    "8218": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3497,
        3584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8219": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3497,
        3584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8222": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3497,
        3584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8224": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3497,
        3584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8225": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3497,
        3584
      ],
      "op": "ADD",
      "path": "2"
    },
    "8226": {
      "op": "DUP2"
    },
    "8227": {
      "op": "SWAP1"
    },
    "8228": {
      "op": "MSTORE"
    },
    "8229": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8231": {
      "op": "DUP3"
    },
    "8232": {
      "op": "ADD"
    },
    "8233": {
      "op": "MSTORE"
    },
    "8234": {
      "op": "PUSH32",
      "value": "0x4669727374206D617465206D757374206265206F6E20796F7572207465616D2E"
    },
    "8267": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8269": {
      "op": "DUP3"
    },
    "8270": {
      "op": "ADD"
    },
    "8271": {
      "op": "MSTORE"
    },
    "8272": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8274": {
      "op": "ADD"
    },
    "8275": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3497,
        3584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "8278": {
      "op": "JUMP"
    },
    "8279": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3497,
        3584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8284": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8286": {
      "op": "SHL"
    },
    "8287": {
      "op": "SUB"
    },
    "8288": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3604,
        3620
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 77
    },
    "8289": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3604,
        3620
      ],
      "op": "AND",
      "path": "2"
    },
    "8290": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3594,
        3621
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8292": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3604,
        3620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8293": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3604,
        3620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8294": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3604,
        3620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8295": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3604,
        3614
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8297": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3604,
        3620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8299": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3604,
        3620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8300": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3604,
        3620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8301": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3604,
        3620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8302": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3604,
        3620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8304": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3604,
        3620
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8305": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3604,
        3620
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8306": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3604,
        3620
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8307": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3604,
        3620
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8308": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3594,
        3621
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8309": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3594,
        3621
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8310": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3594,
        3603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "8312": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3594,
        3621
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8313": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3594,
        3621
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8314": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3594,
        3621
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8315": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3594,
        3621
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8316": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3594,
        3621
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8317": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3594,
        3628
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8318": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3594,
        3628
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8325": {
      "op": "SHL"
    },
    "8326": {
      "op": "SUB"
    },
    "8327": {
      "op": "NOT"
    },
    "8328": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3594,
        3628
      ],
      "op": "AND",
      "path": "2"
    },
    "8329": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3594,
        3628
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8330": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3594,
        3628
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "8331": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3594,
        3628
      ],
      "op": "OR",
      "path": "2"
    },
    "8332": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3594,
        3628
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8333": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3594,
        3628
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8334": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3594,
        3628
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8335": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3671,
        3681
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 78
    },
    "8336": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3660,
        3682
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8337": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3660,
        3682
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8338": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3660,
        3682
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8339": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3660,
        3682
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8340": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3660,
        3682
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8341": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3659
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "8343": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8344": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8345": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3643,
        3699
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x793CE8F0C70B280A4C9C6008694F48260A4AA13D0A724BAB8F18A592EDFE5093"
    },
    "8378": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3643,
        3699
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8379": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3660,
        3682
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8380": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8381": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "LT",
      "path": "2"
    },
    "8382": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20C9"
    },
    "8385": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8386": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20C9"
    },
    "8389": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "8392": {
      "fn": "PirateRace.pickFirstMate",
      "jump": "i",
      "offset": [
        3654,
        3683
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8393": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8394": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8395": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8397": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8398": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8400": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8402": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8403": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8404": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8406": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "MUL",
      "path": "2"
    },
    "8407": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3683
      ],
      "op": "ADD",
      "path": "2"
    },
    "8408": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3692
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8410": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3654,
        3692
      ],
      "op": "ADD",
      "path": "2"
    },
    "8411": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3694,
        3698
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8412": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3643,
        3699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8414": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3643,
        3699
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8415": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3643,
        3699
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBF"
    },
    "8418": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3643,
        3699
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8419": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3643,
        3699
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8420": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3643,
        3699
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8421": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        3643,
        3699
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29E4"
    },
    "8424": {
      "fn": "PirateRace.pickFirstMate",
      "jump": "i",
      "offset": [
        3643,
        3699
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8425": {
      "offset": [
        506,
        530
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8426": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8428": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8429": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8430": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20F6"
    },
    "8433": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8434": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x259A"
    },
    "8437": {
      "fn": "PirateRace.pickFirstMate",
      "jump": "i",
      "offset": [
        506,
        530
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8438": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8439": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8440": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8442": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "ADD",
      "path": "2"
    },
    "8443": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8445": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8446": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8447": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DIV",
      "path": "2"
    },
    "8448": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "MUL",
      "path": "2"
    },
    "8449": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8451": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "ADD",
      "path": "2"
    },
    "8452": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8454": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8455": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8456": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8457": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "ADD",
      "path": "2"
    },
    "8458": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8460": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8461": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8462": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8463": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8464": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8465": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8466": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8467": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8468": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8470": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "ADD",
      "path": "2"
    },
    "8471": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8472": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8473": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8474": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2122"
    },
    "8477": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8478": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x259A"
    },
    "8481": {
      "fn": "PirateRace.pickFirstMate",
      "jump": "i",
      "offset": [
        506,
        530
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8482": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8483": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8484": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8485": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x216F"
    },
    "8488": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8489": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8490": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8492": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "LT",
      "path": "2"
    },
    "8493": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2144"
    },
    "8496": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8497": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8500": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8501": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8502": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8503": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DIV",
      "path": "2"
    },
    "8504": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "MUL",
      "path": "2"
    },
    "8505": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8506": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8507": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8508": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8510": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "ADD",
      "path": "2"
    },
    "8511": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8512": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x216F"
    },
    "8515": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8516": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8517": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8518": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "ADD",
      "path": "2"
    },
    "8519": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8520": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8521": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8523": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8524": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8526": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8528": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8529": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8530": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8531": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8532": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8533": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8534": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8535": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8536": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8538": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "ADD",
      "path": "2"
    },
    "8539": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8540": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8542": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "ADD",
      "path": "2"
    },
    "8543": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8544": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8545": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "GT",
      "path": "2"
    },
    "8546": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2152"
    },
    "8549": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8550": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8551": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8552": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SUB",
      "path": "2"
    },
    "8553": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8555": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "AND",
      "path": "2"
    },
    "8556": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8557": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "ADD",
      "path": "2"
    },
    "8558": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8559": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8560": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "POP",
      "path": "2"
    },
    "8561": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "POP",
      "path": "2"
    },
    "8562": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "POP",
      "path": "2"
    },
    "8563": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "POP",
      "path": "2"
    },
    "8564": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "POP",
      "path": "2"
    },
    "8565": {
      "fn": "PirateRace.pickFirstMate",
      "offset": [
        506,
        530
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8566": {
      "fn": "PirateRace.pickFirstMate",
      "jump": "o",
      "offset": [
        506,
        530
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8567": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2203,
        2709
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8568": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2369,
        2374
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 79,
      "value": "0x0"
    },
    "8570": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2369,
        2374
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8577": {
      "op": "SHL"
    },
    "8578": {
      "op": "SUB"
    },
    "8579": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2369,
        2374
      ],
      "op": "AND",
      "path": "2"
    },
    "8580": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2355,
        2365
      ],
      "op": "CALLER",
      "path": "2"
    },
    "8581": {
      "branch": 114,
      "fn": "PirateRace.changeSettings",
      "offset": [
        2355,
        2374
      ],
      "op": "EQ",
      "path": "2"
    },
    "8582": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2347,
        2390
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21BF"
    },
    "8585": {
      "branch": 114,
      "fn": "PirateRace.changeSettings",
      "offset": [
        2347,
        2390
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8586": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2347,
        2390
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8588": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2347,
        2390
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8589": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8593": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8595": {
      "op": "SHL"
    },
    "8596": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2347,
        2390
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8597": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2347,
        2390
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8600": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2347,
        2390
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8602": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2347,
        2390
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8603": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2347,
        2390
      ],
      "op": "ADD",
      "path": "2"
    },
    "8604": {
      "op": "MSTORE"
    },
    "8605": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "8607": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8609": {
      "op": "DUP3"
    },
    "8610": {
      "op": "ADD"
    },
    "8611": {
      "op": "MSTORE"
    },
    "8612": {
      "op": "PUSH11",
      "value": "0x27B7363C9037BBB732B917"
    },
    "8624": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "8626": {
      "op": "SHL"
    },
    "8627": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8629": {
      "op": "DUP3"
    },
    "8630": {
      "op": "ADD"
    },
    "8631": {
      "op": "MSTORE"
    },
    "8632": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8634": {
      "op": "ADD"
    },
    "8635": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2347,
        2390
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E"
    },
    "8638": {
      "op": "JUMP"
    },
    "8639": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2347,
        2390
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8640": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2404,
        2415
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8641": {
      "branch": 115,
      "fn": "PirateRace.changeSettings",
      "offset": [
        2404,
        2415
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8642": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2400,
        2454
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21EB"
    },
    "8645": {
      "branch": 115,
      "fn": "PirateRace.changeSettings",
      "offset": [
        2400,
        2454
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8646": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2448,
        2454
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 80
    },
    "8647": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "8649": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2426,
        2433
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8650": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8651": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8652": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8653": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "LT",
      "path": "2"
    },
    "8654": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21D9"
    },
    "8657": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8658": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21D9"
    },
    "8661": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "8664": {
      "fn": "PirateRace.changeSettings",
      "jump": "i",
      "offset": [
        2420,
        2434
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8665": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8666": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8668": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8669": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8670": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8671": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8673": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8674": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8675": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8676": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8678": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8679": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8680": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "MUL",
      "path": "2"
    },
    "8681": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2434
      ],
      "op": "ADD",
      "path": "2"
    },
    "8682": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2420,
        2454
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8683": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2400,
        2454
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8684": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2468,
        2479
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8685": {
      "branch": 116,
      "fn": "PirateRace.changeSettings",
      "offset": [
        2468,
        2479
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8686": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2464,
        2513
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x221B"
    },
    "8689": {
      "branch": 116,
      "fn": "PirateRace.changeSettings",
      "offset": [
        2464,
        2513
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8690": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2507,
        2513
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 81
    },
    "8691": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "8693": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2490,
        2497
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8694": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8695": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8696": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8697": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "LT",
      "path": "2"
    },
    "8698": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2205"
    },
    "8701": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8702": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2205"
    },
    "8705": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "8708": {
      "fn": "PirateRace.changeSettings",
      "jump": "i",
      "offset": [
        2484,
        2498
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8709": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8710": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8711": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8713": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8714": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8716": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8718": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8719": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8720": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8722": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "MUL",
      "path": "2"
    },
    "8723": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2498
      ],
      "op": "ADD",
      "path": "2"
    },
    "8724": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2504
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8726": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2504
      ],
      "op": "ADD",
      "path": "2"
    },
    "8727": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8728": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8729": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2513
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8730": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2484,
        2513
      ],
      "op": "POP",
      "path": "2"
    },
    "8731": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2464,
        2513
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8732": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2527,
        2541
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8733": {
      "branch": 117,
      "fn": "PirateRace.changeSettings",
      "offset": [
        2527,
        2541
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8734": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2523,
        2578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x224B"
    },
    "8737": {
      "branch": 117,
      "fn": "PirateRace.changeSettings",
      "offset": [
        2523,
        2578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8738": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2569,
        2578
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 82
    },
    "8739": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "8741": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2549,
        2556
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8742": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8743": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8744": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8745": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "LT",
      "path": "2"
    },
    "8746": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2235"
    },
    "8749": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8750": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2235"
    },
    "8753": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "8756": {
      "fn": "PirateRace.changeSettings",
      "jump": "i",
      "offset": [
        2543,
        2557
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8757": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8758": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8759": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8761": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8762": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8764": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8766": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8767": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8768": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8770": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "MUL",
      "path": "2"
    },
    "8771": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2557
      ],
      "op": "ADD",
      "path": "2"
    },
    "8772": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8774": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2566
      ],
      "op": "ADD",
      "path": "2"
    },
    "8775": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2578
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8776": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2578
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8777": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2578
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8778": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2543,
        2578
      ],
      "op": "POP",
      "path": "2"
    },
    "8779": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2523,
        2578
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8780": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2592,
        2605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8781": {
      "branch": 118,
      "fn": "PirateRace.changeSettings",
      "offset": [
        2592,
        2605
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8782": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2588,
        2641
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x227B"
    },
    "8785": {
      "branch": 118,
      "fn": "PirateRace.changeSettings",
      "offset": [
        2588,
        2641
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8786": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2633,
        2641
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 83
    },
    "8787": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2613
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "8789": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2614,
        2621
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8790": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8791": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8792": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8793": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "LT",
      "path": "2"
    },
    "8794": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2265"
    },
    "8797": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8798": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2265"
    },
    "8801": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "8804": {
      "fn": "PirateRace.changeSettings",
      "jump": "i",
      "offset": [
        2608,
        2622
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8805": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8806": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8807": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8809": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8810": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8812": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8814": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8815": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8816": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8818": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "MUL",
      "path": "2"
    },
    "8819": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2622
      ],
      "op": "ADD",
      "path": "2"
    },
    "8820": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2630
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8822": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2630
      ],
      "op": "ADD",
      "path": "2"
    },
    "8823": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2641
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8824": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2641
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8825": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2641
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8826": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2608,
        2641
      ],
      "op": "POP",
      "path": "2"
    },
    "8827": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2588,
        2641
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8828": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2655,
        2667
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8829": {
      "branch": 119,
      "fn": "PirateRace.changeSettings",
      "offset": [
        2655,
        2667
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8830": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2651,
        2702
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22AB"
    },
    "8833": {
      "branch": 119,
      "fn": "PirateRace.changeSettings",
      "offset": [
        2651,
        2702
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8834": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2695,
        2702
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 84
    },
    "8835": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "8837": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2677,
        2684
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8838": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8839": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8840": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8841": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "LT",
      "path": "2"
    },
    "8842": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2295"
    },
    "8845": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8846": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2295"
    },
    "8849": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2584"
    },
    "8852": {
      "fn": "PirateRace.changeSettings",
      "jump": "i",
      "offset": [
        2671,
        2685
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8853": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8854": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8855": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8857": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8858": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8860": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8862": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8863": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8864": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8866": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "MUL",
      "path": "2"
    },
    "8867": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2685
      ],
      "op": "ADD",
      "path": "2"
    },
    "8868": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2692
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "8870": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2692
      ],
      "op": "ADD",
      "path": "2"
    },
    "8871": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2702
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8872": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2702
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8873": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2702
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8874": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2671,
        2702
      ],
      "op": "POP",
      "path": "2"
    },
    "8875": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2651,
        2702
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8876": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2203,
        2709
      ],
      "op": "POP",
      "path": "2"
    },
    "8877": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2203,
        2709
      ],
      "op": "POP",
      "path": "2"
    },
    "8878": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2203,
        2709
      ],
      "op": "POP",
      "path": "2"
    },
    "8879": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2203,
        2709
      ],
      "op": "POP",
      "path": "2"
    },
    "8880": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2203,
        2709
      ],
      "op": "POP",
      "path": "2"
    },
    "8881": {
      "fn": "PirateRace.changeSettings",
      "offset": [
        2203,
        2709
      ],
      "op": "POP",
      "path": "2"
    },
    "8882": {
      "fn": "PirateRace.changeSettings",
      "jump": "o",
      "offset": [
        2203,
        2709
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8883": {
      "op": "JUMPDEST"
    },
    "8884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8886": {
      "op": "PUSH2",
      "value": "0x22BF"
    },
    "8889": {
      "op": "DUP3"
    },
    "8890": {
      "op": "DUP5"
    },
    "8891": {
      "op": "PUSH2",
      "value": "0x2685"
    },
    "8894": {
      "jump": "i",
      "op": "JUMP"
    },
    "8895": {
      "op": "JUMPDEST"
    },
    "8896": {
      "op": "SWAP1"
    },
    "8897": {
      "op": "POP"
    },
    "8898": {
      "op": "JUMPDEST"
    },
    "8899": {
      "op": "SWAP3"
    },
    "8900": {
      "op": "SWAP2"
    },
    "8901": {
      "op": "POP"
    },
    "8902": {
      "op": "POP"
    },
    "8903": {
      "jump": "o",
      "op": "JUMP"
    },
    "8904": {
      "op": "JUMPDEST"
    },
    "8905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8907": {
      "op": "PUSH2",
      "value": "0x22BF"
    },
    "8910": {
      "op": "DUP3"
    },
    "8911": {
      "op": "DUP5"
    },
    "8912": {
      "op": "PUSH2",
      "value": "0x255D"
    },
    "8915": {
      "jump": "i",
      "op": "JUMP"
    },
    "8916": {
      "op": "JUMPDEST"
    },
    "8917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8919": {
      "op": "PUSH2",
      "value": "0x22BF"
    },
    "8922": {
      "op": "DUP3"
    },
    "8923": {
      "op": "DUP5"
    },
    "8924": {
      "op": "PUSH2",
      "value": "0x269C"
    },
    "8927": {
      "jump": "i",
      "op": "JUMP"
    },
    "8928": {
      "op": "JUMPDEST"
    },
    "8929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8931": {
      "op": "PUSH2",
      "value": "0x22BF"
    },
    "8934": {
      "op": "DUP3"
    },
    "8935": {
      "op": "DUP5"
    },
    "8936": {
      "op": "PUSH2",
      "value": "0x2571"
    },
    "8939": {
      "jump": "i",
      "op": "JUMP"
    },
    "8940": {
      "op": "JUMPDEST"
    },
    "8941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8945": {
      "op": "DUP3"
    },
    "8946": {
      "op": "DUP5"
    },
    "8947": {
      "op": "SUB"
    },
    "8948": {
      "op": "SLT"
    },
    "8949": {
      "op": "ISZERO"
    },
    "8950": {
      "op": "PUSH2",
      "value": "0x22FE"
    },
    "8953": {
      "op": "JUMPI"
    },
    "8954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8956": {
      "op": "DUP1"
    },
    "8957": {
      "op": "REVERT"
    },
    "8958": {
      "op": "JUMPDEST"
    },
    "8959": {
      "op": "POP"
    },
    "8960": {
      "op": "CALLDATALOAD"
    },
    "8961": {
      "op": "SWAP2"
    },
    "8962": {
      "op": "SWAP1"
    },
    "8963": {
      "op": "POP"
    },
    "8964": {
      "jump": "o",
      "op": "JUMP"
    },
    "8965": {
      "op": "JUMPDEST"
    },
    "8966": {
      "op": "DUP1"
    },
    "8967": {
      "op": "CALLDATALOAD"
    },
    "8968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8974": {
      "op": "SHL"
    },
    "8975": {
      "op": "SUB"
    },
    "8976": {
      "op": "DUP2"
    },
    "8977": {
      "op": "AND"
    },
    "8978": {
      "op": "DUP2"
    },
    "8979": {
      "op": "EQ"
    },
    "8980": {
      "op": "PUSH2",
      "value": "0x231C"
    },
    "8983": {
      "op": "JUMPI"
    },
    "8984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8986": {
      "op": "DUP1"
    },
    "8987": {
      "op": "REVERT"
    },
    "8988": {
      "op": "JUMPDEST"
    },
    "8989": {
      "op": "SWAP2"
    },
    "8990": {
      "op": "SWAP1"
    },
    "8991": {
      "op": "POP"
    },
    "8992": {
      "jump": "o",
      "op": "JUMP"
    },
    "8993": {
      "op": "JUMPDEST"
    },
    "8994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8998": {
      "op": "DUP3"
    },
    "8999": {
      "op": "DUP5"
    },
    "9000": {
      "op": "SUB"
    },
    "9001": {
      "op": "SLT"
    },
    "9002": {
      "op": "ISZERO"
    },
    "9003": {
      "op": "PUSH2",
      "value": "0x2333"
    },
    "9006": {
      "op": "JUMPI"
    },
    "9007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9009": {
      "op": "DUP1"
    },
    "9010": {
      "op": "REVERT"
    },
    "9011": {
      "op": "JUMPDEST"
    },
    "9012": {
      "op": "PUSH2",
      "value": "0x22BF"
    },
    "9015": {
      "op": "DUP3"
    },
    "9016": {
      "op": "PUSH2",
      "value": "0x2305"
    },
    "9019": {
      "jump": "i",
      "op": "JUMP"
    },
    "9020": {
      "op": "JUMPDEST"
    },
    "9021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9023": {
      "op": "DUP2"
    },
    "9024": {
      "op": "MLOAD"
    },
    "9025": {
      "op": "DUP1"
    },
    "9026": {
      "op": "DUP5"
    },
    "9027": {
      "op": "MSTORE"
    },
    "9028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9030": {
      "op": "JUMPDEST"
    },
    "9031": {
      "op": "DUP2"
    },
    "9032": {
      "op": "DUP2"
    },
    "9033": {
      "op": "LT"
    },
    "9034": {
      "op": "ISZERO"
    },
    "9035": {
      "op": "PUSH2",
      "value": "0x2362"
    },
    "9038": {
      "op": "JUMPI"
    },
    "9039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9041": {
      "op": "DUP2"
    },
    "9042": {
      "op": "DUP6"
    },
    "9043": {
      "op": "ADD"
    },
    "9044": {
      "op": "DUP2"
    },
    "9045": {
      "op": "ADD"
    },
    "9046": {
      "op": "MLOAD"
    },
    "9047": {
      "op": "DUP7"
    },
    "9048": {
      "op": "DUP4"
    },
    "9049": {
      "op": "ADD"
    },
    "9050": {
      "op": "DUP3"
    },
    "9051": {
      "op": "ADD"
    },
    "9052": {
      "op": "MSTORE"
    },
    "9053": {
      "op": "ADD"
    },
    "9054": {
      "op": "PUSH2",
      "value": "0x2346"
    },
    "9057": {
      "op": "JUMP"
    },
    "9058": {
      "op": "JUMPDEST"
    },
    "9059": {
      "op": "POP"
    },
    "9060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9062": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9064": {
      "op": "DUP3"
    },
    "9065": {
      "op": "DUP7"
    },
    "9066": {
      "op": "ADD"
    },
    "9067": {
      "op": "ADD"
    },
    "9068": {
      "op": "MSTORE"
    },
    "9069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9071": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9073": {
      "op": "NOT"
    },
    "9074": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9076": {
      "op": "DUP4"
    },
    "9077": {
      "op": "ADD"
    },
    "9078": {
      "op": "AND"
    },
    "9079": {
      "op": "DUP6"
    },
    "9080": {
      "op": "ADD"
    },
    "9081": {
      "op": "ADD"
    },
    "9082": {
      "op": "SWAP2"
    },
    "9083": {
      "op": "POP"
    },
    "9084": {
      "op": "POP"
    },
    "9085": {
      "op": "SWAP3"
    },
    "9086": {
      "op": "SWAP2"
    },
    "9087": {
      "op": "POP"
    },
    "9088": {
      "op": "POP"
    },
    "9089": {
      "jump": "o",
      "op": "JUMP"
    },
    "9090": {
      "op": "JUMPDEST"
    },
    "9091": {
      "op": "DUP8"
    },
    "9092": {
      "op": "DUP2"
    },
    "9093": {
      "op": "MSTORE"
    },
    "9094": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9098": {
      "op": "DUP3"
    },
    "9099": {
      "op": "ADD"
    },
    "9100": {
      "op": "MSTORE"
    },
    "9101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9103": {
      "op": "PUSH2",
      "value": "0x239B"
    },
    "9106": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9108": {
      "op": "DUP4"
    },
    "9109": {
      "op": "ADD"
    },
    "9110": {
      "op": "DUP10"
    },
    "9111": {
      "op": "PUSH2",
      "value": "0x233C"
    },
    "9114": {
      "jump": "i",
      "op": "JUMP"
    },
    "9115": {
      "op": "JUMPDEST"
    },
    "9116": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9118": {
      "op": "DUP4"
    },
    "9119": {
      "op": "ADD"
    },
    "9120": {
      "op": "SWAP8"
    },
    "9121": {
      "op": "SWAP1"
    },
    "9122": {
      "op": "SWAP8"
    },
    "9123": {
      "op": "MSTORE"
    },
    "9124": {
      "op": "POP"
    },
    "9125": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9127": {
      "op": "DUP2"
    },
    "9128": {
      "op": "ADD"
    },
    "9129": {
      "op": "SWAP5"
    },
    "9130": {
      "op": "SWAP1"
    },
    "9131": {
      "op": "SWAP5"
    },
    "9132": {
      "op": "MSTORE"
    },
    "9133": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9135": {
      "op": "DUP5"
    },
    "9136": {
      "op": "ADD"
    },
    "9137": {
      "op": "SWAP3"
    },
    "9138": {
      "op": "SWAP1"
    },
    "9139": {
      "op": "SWAP3"
    },
    "9140": {
      "op": "MSTORE"
    },
    "9141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9143": {
      "op": "DUP4"
    },
    "9144": {
      "op": "ADD"
    },
    "9145": {
      "op": "MSTORE"
    },
    "9146": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9148": {
      "op": "SWAP1"
    },
    "9149": {
      "op": "SWAP2"
    },
    "9150": {
      "op": "ADD"
    },
    "9151": {
      "op": "MSTORE"
    },
    "9152": {
      "op": "SWAP3"
    },
    "9153": {
      "op": "SWAP2"
    },
    "9154": {
      "op": "POP"
    },
    "9155": {
      "op": "POP"
    },
    "9156": {
      "jump": "o",
      "op": "JUMP"
    },
    "9157": {
      "op": "JUMPDEST"
    },
    "9158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9160": {
      "op": "DUP1"
    },
    "9161": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9163": {
      "op": "DUP4"
    },
    "9164": {
      "op": "DUP6"
    },
    "9165": {
      "op": "SUB"
    },
    "9166": {
      "op": "SLT"
    },
    "9167": {
      "op": "ISZERO"
    },
    "9168": {
      "op": "PUSH2",
      "value": "0x23D8"
    },
    "9171": {
      "op": "JUMPI"
    },
    "9172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9174": {
      "op": "DUP1"
    },
    "9175": {
      "op": "REVERT"
    },
    "9176": {
      "op": "JUMPDEST"
    },
    "9177": {
      "op": "DUP3"
    },
    "9178": {
      "op": "CALLDATALOAD"
    },
    "9179": {
      "op": "SWAP2"
    },
    "9180": {
      "op": "POP"
    },
    "9181": {
      "op": "PUSH2",
      "value": "0x23E8"
    },
    "9184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9186": {
      "op": "DUP5"
    },
    "9187": {
      "op": "ADD"
    },
    "9188": {
      "op": "PUSH2",
      "value": "0x2305"
    },
    "9191": {
      "jump": "i",
      "op": "JUMP"
    },
    "9192": {
      "op": "JUMPDEST"
    },
    "9193": {
      "op": "SWAP1"
    },
    "9194": {
      "op": "POP"
    },
    "9195": {
      "op": "SWAP3"
    },
    "9196": {
      "op": "POP"
    },
    "9197": {
      "op": "SWAP3"
    },
    "9198": {
      "op": "SWAP1"
    },
    "9199": {
      "op": "POP"
    },
    "9200": {
      "jump": "o",
      "op": "JUMP"
    },
    "9201": {
      "op": "JUMPDEST"
    },
    "9202": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9207": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9209": {
      "op": "SHL"
    },
    "9210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9212": {
      "op": "MSTORE"
    },
    "9213": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "9215": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9217": {
      "op": "MSTORE"
    },
    "9218": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9222": {
      "op": "REVERT"
    },
    "9223": {
      "op": "JUMPDEST"
    },
    "9224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9226": {
      "op": "DUP1"
    },
    "9227": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9229": {
      "op": "DUP4"
    },
    "9230": {
      "op": "DUP6"
    },
    "9231": {
      "op": "SUB"
    },
    "9232": {
      "op": "SLT"
    },
    "9233": {
      "op": "ISZERO"
    },
    "9234": {
      "op": "PUSH2",
      "value": "0x241A"
    },
    "9237": {
      "op": "JUMPI"
    },
    "9238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9240": {
      "op": "DUP1"
    },
    "9241": {
      "op": "REVERT"
    },
    "9242": {
      "op": "JUMPDEST"
    },
    "9243": {
      "op": "DUP3"
    },
    "9244": {
      "op": "CALLDATALOAD"
    },
    "9245": {
      "op": "SWAP2"
    },
    "9246": {
      "op": "POP"
    },
    "9247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9249": {
      "op": "DUP4"
    },
    "9250": {
      "op": "ADD"
    },
    "9251": {
      "op": "CALLDATALOAD"
    },
    "9252": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9261": {
      "op": "DUP1"
    },
    "9262": {
      "op": "DUP3"
    },
    "9263": {
      "op": "GT"
    },
    "9264": {
      "op": "ISZERO"
    },
    "9265": {
      "op": "PUSH2",
      "value": "0x2439"
    },
    "9268": {
      "op": "JUMPI"
    },
    "9269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9271": {
      "op": "DUP1"
    },
    "9272": {
      "op": "REVERT"
    },
    "9273": {
      "op": "JUMPDEST"
    },
    "9274": {
      "op": "DUP2"
    },
    "9275": {
      "op": "DUP6"
    },
    "9276": {
      "op": "ADD"
    },
    "9277": {
      "op": "SWAP2"
    },
    "9278": {
      "op": "POP"
    },
    "9279": {
      "op": "DUP6"
    },
    "9280": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9282": {
      "op": "DUP4"
    },
    "9283": {
      "op": "ADD"
    },
    "9284": {
      "op": "SLT"
    },
    "9285": {
      "op": "PUSH2",
      "value": "0x244D"
    },
    "9288": {
      "op": "JUMPI"
    },
    "9289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9291": {
      "op": "DUP1"
    },
    "9292": {
      "op": "REVERT"
    },
    "9293": {
      "op": "JUMPDEST"
    },
    "9294": {
      "op": "DUP2"
    },
    "9295": {
      "op": "CALLDATALOAD"
    },
    "9296": {
      "op": "DUP2"
    },
    "9297": {
      "op": "DUP2"
    },
    "9298": {
      "op": "GT"
    },
    "9299": {
      "op": "ISZERO"
    },
    "9300": {
      "op": "PUSH2",
      "value": "0x245F"
    },
    "9303": {
      "op": "JUMPI"
    },
    "9304": {
      "op": "PUSH2",
      "value": "0x245F"
    },
    "9307": {
      "op": "PUSH2",
      "value": "0x23F1"
    },
    "9310": {
      "jump": "i",
      "op": "JUMP"
    },
    "9311": {
      "op": "JUMPDEST"
    },
    "9312": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9314": {
      "op": "MLOAD"
    },
    "9315": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9317": {
      "op": "DUP3"
    },
    "9318": {
      "op": "ADD"
    },
    "9319": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9321": {
      "op": "NOT"
    },
    "9322": {
      "op": "SWAP1"
    },
    "9323": {
      "op": "DUP2"
    },
    "9324": {
      "op": "AND"
    },
    "9325": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "9327": {
      "op": "ADD"
    },
    "9328": {
      "op": "AND"
    },
    "9329": {
      "op": "DUP2"
    },
    "9330": {
      "op": "ADD"
    },
    "9331": {
      "op": "SWAP1"
    },
    "9332": {
      "op": "DUP4"
    },
    "9333": {
      "op": "DUP3"
    },
    "9334": {
      "op": "GT"
    },
    "9335": {
      "op": "DUP2"
    },
    "9336": {
      "op": "DUP4"
    },
    "9337": {
      "op": "LT"
    },
    "9338": {
      "op": "OR"
    },
    "9339": {
      "op": "ISZERO"
    },
    "9340": {
      "op": "PUSH2",
      "value": "0x2487"
    },
    "9343": {
      "op": "JUMPI"
    },
    "9344": {
      "op": "PUSH2",
      "value": "0x2487"
    },
    "9347": {
      "op": "PUSH2",
      "value": "0x23F1"
    },
    "9350": {
      "jump": "i",
      "op": "JUMP"
    },
    "9351": {
      "op": "JUMPDEST"
    },
    "9352": {
      "op": "DUP2"
    },
    "9353": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9355": {
      "op": "MSTORE"
    },
    "9356": {
      "op": "DUP3"
    },
    "9357": {
      "op": "DUP2"
    },
    "9358": {
      "op": "MSTORE"
    },
    "9359": {
      "op": "DUP9"
    },
    "9360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9362": {
      "op": "DUP5"
    },
    "9363": {
      "op": "DUP8"
    },
    "9364": {
      "op": "ADD"
    },
    "9365": {
      "op": "ADD"
    },
    "9366": {
      "op": "GT"
    },
    "9367": {
      "op": "ISZERO"
    },
    "9368": {
      "op": "PUSH2",
      "value": "0x24A0"
    },
    "9371": {
      "op": "JUMPI"
    },
    "9372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9374": {
      "op": "DUP1"
    },
    "9375": {
      "op": "REVERT"
    },
    "9376": {
      "op": "JUMPDEST"
    },
    "9377": {
      "op": "DUP3"
    },
    "9378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9380": {
      "op": "DUP7"
    },
    "9381": {
      "op": "ADD"
    },
    "9382": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9384": {
      "op": "DUP4"
    },
    "9385": {
      "op": "ADD"
    },
    "9386": {
      "op": "CALLDATACOPY"
    },
    "9387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9391": {
      "op": "DUP5"
    },
    "9392": {
      "op": "DUP4"
    },
    "9393": {
      "op": "ADD"
    },
    "9394": {
      "op": "ADD"
    },
    "9395": {
      "op": "MSTORE"
    },
    "9396": {
      "op": "DUP1"
    },
    "9397": {
      "op": "SWAP6"
    },
    "9398": {
      "op": "POP"
    },
    "9399": {
      "op": "POP"
    },
    "9400": {
      "op": "POP"
    },
    "9401": {
      "op": "POP"
    },
    "9402": {
      "op": "POP"
    },
    "9403": {
      "op": "POP"
    },
    "9404": {
      "op": "SWAP3"
    },
    "9405": {
      "op": "POP"
    },
    "9406": {
      "op": "SWAP3"
    },
    "9407": {
      "op": "SWAP1"
    },
    "9408": {
      "op": "POP"
    },
    "9409": {
      "jump": "o",
      "op": "JUMP"
    },
    "9410": {
      "op": "JUMPDEST"
    },
    "9411": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9413": {
      "op": "DUP2"
    },
    "9414": {
      "op": "MSTORE"
    },
    "9415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9417": {
      "op": "PUSH2",
      "value": "0x22BF"
    },
    "9420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9422": {
      "op": "DUP4"
    },
    "9423": {
      "op": "ADD"
    },
    "9424": {
      "op": "DUP5"
    },
    "9425": {
      "op": "PUSH2",
      "value": "0x233C"
    },
    "9428": {
      "jump": "i",
      "op": "JUMP"
    },
    "9429": {
      "op": "JUMPDEST"
    },
    "9430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9432": {
      "op": "DUP1"
    },
    "9433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9435": {
      "op": "DUP1"
    },
    "9436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9438": {
      "op": "DUP1"
    },
    "9439": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9441": {
      "op": "DUP8"
    },
    "9442": {
      "op": "DUP10"
    },
    "9443": {
      "op": "SUB"
    },
    "9444": {
      "op": "SLT"
    },
    "9445": {
      "op": "ISZERO"
    },
    "9446": {
      "op": "PUSH2",
      "value": "0x24EE"
    },
    "9449": {
      "op": "JUMPI"
    },
    "9450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9452": {
      "op": "DUP1"
    },
    "9453": {
      "op": "REVERT"
    },
    "9454": {
      "op": "JUMPDEST"
    },
    "9455": {
      "op": "POP"
    },
    "9456": {
      "op": "POP"
    },
    "9457": {
      "op": "DUP5"
    },
    "9458": {
      "op": "CALLDATALOAD"
    },
    "9459": {
      "op": "SWAP7"
    },
    "9460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9462": {
      "op": "DUP7"
    },
    "9463": {
      "op": "ADD"
    },
    "9464": {
      "op": "CALLDATALOAD"
    },
    "9465": {
      "op": "SWAP7"
    },
    "9466": {
      "op": "POP"
    },
    "9467": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9469": {
      "op": "DUP7"
    },
    "9470": {
      "op": "ADD"
    },
    "9471": {
      "op": "CALLDATALOAD"
    },
    "9472": {
      "op": "SWAP6"
    },
    "9473": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9475": {
      "op": "DUP2"
    },
    "9476": {
      "op": "ADD"
    },
    "9477": {
      "op": "CALLDATALOAD"
    },
    "9478": {
      "op": "SWAP6"
    },
    "9479": {
      "op": "POP"
    },
    "9480": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9482": {
      "op": "DUP2"
    },
    "9483": {
      "op": "ADD"
    },
    "9484": {
      "op": "CALLDATALOAD"
    },
    "9485": {
      "op": "SWAP5"
    },
    "9486": {
      "op": "POP"
    },
    "9487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9489": {
      "op": "ADD"
    },
    "9490": {
      "op": "CALLDATALOAD"
    },
    "9491": {
      "op": "SWAP3"
    },
    "9492": {
      "op": "POP"
    },
    "9493": {
      "op": "SWAP1"
    },
    "9494": {
      "op": "POP"
    },
    "9495": {
      "jump": "o",
      "op": "JUMP"
    },
    "9496": {
      "op": "JUMPDEST"
    },
    "9497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9499": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9501": {
      "op": "DUP3"
    },
    "9502": {
      "op": "DUP5"
    },
    "9503": {
      "op": "SUB"
    },
    "9504": {
      "op": "SLT"
    },
    "9505": {
      "op": "ISZERO"
    },
    "9506": {
      "op": "PUSH2",
      "value": "0x252A"
    },
    "9509": {
      "op": "JUMPI"
    },
    "9510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9512": {
      "op": "DUP1"
    },
    "9513": {
      "op": "REVERT"
    },
    "9514": {
      "op": "JUMPDEST"
    },
    "9515": {
      "op": "POP"
    },
    "9516": {
      "op": "MLOAD"
    },
    "9517": {
      "op": "SWAP2"
    },
    "9518": {
      "op": "SWAP1"
    },
    "9519": {
      "op": "POP"
    },
    "9520": {
      "jump": "o",
      "op": "JUMP"
    },
    "9521": {
      "op": "JUMPDEST"
    },
    "9522": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9527": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9529": {
      "op": "SHL"
    },
    "9530": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9532": {
      "op": "MSTORE"
    },
    "9533": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "9535": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9537": {
      "op": "MSTORE"
    },
    "9538": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9542": {
      "op": "REVERT"
    },
    "9543": {
      "op": "JUMPDEST"
    },
    "9544": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9549": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9551": {
      "op": "SHL"
    },
    "9552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9554": {
      "op": "MSTORE"
    },
    "9555": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9557": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9559": {
      "op": "MSTORE"
    },
    "9560": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9564": {
      "op": "REVERT"
    },
    "9565": {
      "op": "JUMPDEST"
    },
    "9566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9568": {
      "op": "DUP3"
    },
    "9569": {
      "op": "PUSH2",
      "value": "0x256C"
    },
    "9572": {
      "op": "JUMPI"
    },
    "9573": {
      "op": "PUSH2",
      "value": "0x256C"
    },
    "9576": {
      "op": "PUSH2",
      "value": "0x2531"
    },
    "9579": {
      "jump": "i",
      "op": "JUMP"
    },
    "9580": {
      "op": "JUMPDEST"
    },
    "9581": {
      "op": "POP"
    },
    "9582": {
      "op": "DIV"
    },
    "9583": {
      "op": "SWAP1"
    },
    "9584": {
      "jump": "o",
      "op": "JUMP"
    },
    "9585": {
      "op": "JUMPDEST"
    },
    "9586": {
      "op": "DUP1"
    },
    "9587": {
      "op": "DUP3"
    },
    "9588": {
      "op": "ADD"
    },
    "9589": {
      "op": "DUP1"
    },
    "9590": {
      "op": "DUP3"
    },
    "9591": {
      "op": "GT"
    },
    "9592": {
      "op": "ISZERO"
    },
    "9593": {
      "op": "PUSH2",
      "value": "0x22C2"
    },
    "9596": {
      "op": "JUMPI"
    },
    "9597": {
      "op": "PUSH2",
      "value": "0x22C2"
    },
    "9600": {
      "op": "PUSH2",
      "value": "0x2547"
    },
    "9603": {
      "jump": "i",
      "op": "JUMP"
    },
    "9604": {
      "op": "JUMPDEST"
    },
    "9605": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9610": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9612": {
      "op": "SHL"
    },
    "9613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9615": {
      "op": "MSTORE"
    },
    "9616": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "9618": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9620": {
      "op": "MSTORE"
    },
    "9621": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9625": {
      "op": "REVERT"
    },
    "9626": {
      "op": "JUMPDEST"
    },
    "9627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9629": {
      "op": "DUP2"
    },
    "9630": {
      "op": "DUP2"
    },
    "9631": {
      "op": "SHR"
    },
    "9632": {
      "op": "SWAP1"
    },
    "9633": {
      "op": "DUP3"
    },
    "9634": {
      "op": "AND"
    },
    "9635": {
      "op": "DUP1"
    },
    "9636": {
      "op": "PUSH2",
      "value": "0x25AE"
    },
    "9639": {
      "op": "JUMPI"
    },
    "9640": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "9642": {
      "op": "DUP3"
    },
    "9643": {
      "op": "AND"
    },
    "9644": {
      "op": "SWAP2"
    },
    "9645": {
      "op": "POP"
    },
    "9646": {
      "op": "JUMPDEST"
    },
    "9647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9649": {
      "op": "DUP3"
    },
    "9650": {
      "op": "LT"
    },
    "9651": {
      "op": "DUP2"
    },
    "9652": {
      "op": "SUB"
    },
    "9653": {
      "op": "PUSH2",
      "value": "0x25CE"
    },
    "9656": {
      "op": "JUMPI"
    },
    "9657": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9662": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9664": {
      "op": "SHL"
    },
    "9665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9667": {
      "op": "MSTORE"
    },
    "9668": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "9670": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9672": {
      "op": "MSTORE"
    },
    "9673": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9677": {
      "op": "REVERT"
    },
    "9678": {
      "op": "JUMPDEST"
    },
    "9679": {
      "op": "POP"
    },
    "9680": {
      "op": "SWAP2"
    },
    "9681": {
      "op": "SWAP1"
    },
    "9682": {
      "op": "POP"
    },
    "9683": {
      "jump": "o",
      "op": "JUMP"
    },
    "9684": {
      "op": "JUMPDEST"
    },
    "9685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9687": {
      "op": "DUP2"
    },
    "9688": {
      "op": "SLOAD"
    },
    "9689": {
      "op": "PUSH2",
      "value": "0x25E1"
    },
    "9692": {
      "op": "DUP2"
    },
    "9693": {
      "op": "PUSH2",
      "value": "0x259A"
    },
    "9696": {
      "jump": "i",
      "op": "JUMP"
    },
    "9697": {
      "op": "JUMPDEST"
    },
    "9698": {
      "op": "DUP1"
    },
    "9699": {
      "op": "DUP6"
    },
    "9700": {
      "op": "MSTORE"
    },
    "9701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9705": {
      "op": "DUP4"
    },
    "9706": {
      "op": "DUP2"
    },
    "9707": {
      "op": "AND"
    },
    "9708": {
      "op": "DUP1"
    },
    "9709": {
      "op": "ISZERO"
    },
    "9710": {
      "op": "PUSH2",
      "value": "0x25FE"
    },
    "9713": {
      "op": "JUMPI"
    },
    "9714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9716": {
      "op": "DUP2"
    },
    "9717": {
      "op": "EQ"
    },
    "9718": {
      "op": "PUSH2",
      "value": "0x2618"
    },
    "9721": {
      "op": "JUMPI"
    },
    "9722": {
      "op": "PUSH2",
      "value": "0x2646"
    },
    "9725": {
      "op": "JUMP"
    },
    "9726": {
      "op": "JUMPDEST"
    },
    "9727": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9729": {
      "op": "NOT"
    },
    "9730": {
      "op": "DUP6"
    },
    "9731": {
      "op": "AND"
    },
    "9732": {
      "op": "DUP9"
    },
    "9733": {
      "op": "DUP5"
    },
    "9734": {
      "op": "ADD"
    },
    "9735": {
      "op": "MSTORE"
    },
    "9736": {
      "op": "DUP4"
    },
    "9737": {
      "op": "ISZERO"
    },
    "9738": {
      "op": "ISZERO"
    },
    "9739": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9741": {
      "op": "SHL"
    },
    "9742": {
      "op": "DUP9"
    },
    "9743": {
      "op": "ADD"
    },
    "9744": {
      "op": "DUP4"
    },
    "9745": {
      "op": "ADD"
    },
    "9746": {
      "op": "SWAP6"
    },
    "9747": {
      "op": "POP"
    },
    "9748": {
      "op": "PUSH2",
      "value": "0x2646"
    },
    "9751": {
      "op": "JUMP"
    },
    "9752": {
      "op": "JUMPDEST"
    },
    "9753": {
      "op": "DUP7"
    },
    "9754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9756": {
      "op": "MSTORE"
    },
    "9757": {
      "op": "DUP3"
    },
    "9758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9760": {
      "op": "KECCAK256"
    },
    "9761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9763": {
      "op": "JUMPDEST"
    },
    "9764": {
      "op": "DUP6"
    },
    "9765": {
      "op": "DUP2"
    },
    "9766": {
      "op": "LT"
    },
    "9767": {
      "op": "ISZERO"
    },
    "9768": {
      "op": "PUSH2",
      "value": "0x263E"
    },
    "9771": {
      "op": "JUMPI"
    },
    "9772": {
      "op": "DUP2"
    },
    "9773": {
      "op": "SLOAD"
    },
    "9774": {
      "op": "DUP11"
    },
    "9775": {
      "op": "DUP3"
    },
    "9776": {
      "op": "ADD"
    },
    "9777": {
      "op": "DUP7"
    },
    "9778": {
      "op": "ADD"
    },
    "9779": {
      "op": "MSTORE"
    },
    "9780": {
      "op": "SWAP1"
    },
    "9781": {
      "op": "DUP4"
    },
    "9782": {
      "op": "ADD"
    },
    "9783": {
      "op": "SWAP1"
    },
    "9784": {
      "op": "DUP5"
    },
    "9785": {
      "op": "ADD"
    },
    "9786": {
      "op": "PUSH2",
      "value": "0x2623"
    },
    "9789": {
      "op": "JUMP"
    },
    "9790": {
      "op": "JUMPDEST"
    },
    "9791": {
      "op": "DUP10"
    },
    "9792": {
      "op": "ADD"
    },
    "9793": {
      "op": "DUP5"
    },
    "9794": {
      "op": "ADD"
    },
    "9795": {
      "op": "SWAP7"
    },
    "9796": {
      "op": "POP"
    },
    "9797": {
      "op": "POP"
    },
    "9798": {
      "op": "JUMPDEST"
    },
    "9799": {
      "op": "POP"
    },
    "9800": {
      "op": "POP"
    },
    "9801": {
      "op": "POP"
    },
    "9802": {
      "op": "POP"
    },
    "9803": {
      "op": "POP"
    },
    "9804": {
      "op": "SWAP3"
    },
    "9805": {
      "op": "SWAP2"
    },
    "9806": {
      "op": "POP"
    },
    "9807": {
      "op": "POP"
    },
    "9808": {
      "jump": "o",
      "op": "JUMP"
    },
    "9809": {
      "op": "JUMPDEST"
    },
    "9810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9816": {
      "op": "SHL"
    },
    "9817": {
      "op": "SUB"
    },
    "9818": {
      "op": "DUP5"
    },
    "9819": {
      "op": "AND"
    },
    "9820": {
      "op": "DUP2"
    },
    "9821": {
      "op": "MSTORE"
    },
    "9822": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9824": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9826": {
      "op": "DUP3"
    },
    "9827": {
      "op": "ADD"
    },
    "9828": {
      "op": "DUP2"
    },
    "9829": {
      "op": "SWAP1"
    },
    "9830": {
      "op": "MSTORE"
    },
    "9831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9833": {
      "op": "SWAP1"
    },
    "9834": {
      "op": "PUSH2",
      "value": "0x2675"
    },
    "9837": {
      "op": "SWAP1"
    },
    "9838": {
      "op": "DUP4"
    },
    "9839": {
      "op": "ADD"
    },
    "9840": {
      "op": "DUP6"
    },
    "9841": {
      "op": "PUSH2",
      "value": "0x25D4"
    },
    "9844": {
      "jump": "i",
      "op": "JUMP"
    },
    "9845": {
      "op": "JUMPDEST"
    },
    "9846": {
      "op": "SWAP1"
    },
    "9847": {
      "op": "POP"
    },
    "9848": {
      "op": "DUP3"
    },
    "9849": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9851": {
      "op": "DUP4"
    },
    "9852": {
      "op": "ADD"
    },
    "9853": {
      "op": "MSTORE"
    },
    "9854": {
      "op": "SWAP5"
    },
    "9855": {
      "op": "SWAP4"
    },
    "9856": {
      "op": "POP"
    },
    "9857": {
      "op": "POP"
    },
    "9858": {
      "op": "POP"
    },
    "9859": {
      "op": "POP"
    },
    "9860": {
      "jump": "o",
      "op": "JUMP"
    },
    "9861": {
      "op": "JUMPDEST"
    },
    "9862": {
      "op": "DUP1"
    },
    "9863": {
      "op": "DUP3"
    },
    "9864": {
      "op": "MUL"
    },
    "9865": {
      "op": "DUP2"
    },
    "9866": {
      "op": "ISZERO"
    },
    "9867": {
      "op": "DUP3"
    },
    "9868": {
      "op": "DUP3"
    },
    "9869": {
      "op": "DIV"
    },
    "9870": {
      "op": "DUP5"
    },
    "9871": {
      "op": "EQ"
    },
    "9872": {
      "op": "OR"
    },
    "9873": {
      "op": "PUSH2",
      "value": "0x22C2"
    },
    "9876": {
      "op": "JUMPI"
    },
    "9877": {
      "op": "PUSH2",
      "value": "0x22C2"
    },
    "9880": {
      "op": "PUSH2",
      "value": "0x2547"
    },
    "9883": {
      "jump": "i",
      "op": "JUMP"
    },
    "9884": {
      "op": "JUMPDEST"
    },
    "9885": {
      "op": "DUP2"
    },
    "9886": {
      "op": "DUP2"
    },
    "9887": {
      "op": "SUB"
    },
    "9888": {
      "op": "DUP2"
    },
    "9889": {
      "op": "DUP2"
    },
    "9890": {
      "op": "GT"
    },
    "9891": {
      "op": "ISZERO"
    },
    "9892": {
      "op": "PUSH2",
      "value": "0x22C2"
    },
    "9895": {
      "op": "JUMPI"
    },
    "9896": {
      "op": "PUSH2",
      "value": "0x22C2"
    },
    "9899": {
      "op": "PUSH2",
      "value": "0x2547"
    },
    "9902": {
      "jump": "i",
      "op": "JUMP"
    },
    "9903": {
      "op": "JUMPDEST"
    },
    "9904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9910": {
      "op": "SHL"
    },
    "9911": {
      "op": "SUB"
    },
    "9912": {
      "op": "DUP4"
    },
    "9913": {
      "op": "AND"
    },
    "9914": {
      "op": "DUP2"
    },
    "9915": {
      "op": "MSTORE"
    },
    "9916": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9920": {
      "op": "DUP3"
    },
    "9921": {
      "op": "ADD"
    },
    "9922": {
      "op": "DUP2"
    },
    "9923": {
      "op": "SWAP1"
    },
    "9924": {
      "op": "MSTORE"
    },
    "9925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9927": {
      "op": "SWAP1"
    },
    "9928": {
      "op": "PUSH2",
      "value": "0x26D3"
    },
    "9931": {
      "op": "SWAP1"
    },
    "9932": {
      "op": "DUP4"
    },
    "9933": {
      "op": "ADD"
    },
    "9934": {
      "op": "DUP5"
    },
    "9935": {
      "op": "PUSH2",
      "value": "0x25D4"
    },
    "9938": {
      "jump": "i",
      "op": "JUMP"
    },
    "9939": {
      "op": "JUMPDEST"
    },
    "9940": {
      "op": "SWAP5"
    },
    "9941": {
      "op": "SWAP4"
    },
    "9942": {
      "op": "POP"
    },
    "9943": {
      "op": "POP"
    },
    "9944": {
      "op": "POP"
    },
    "9945": {
      "op": "POP"
    },
    "9946": {
      "jump": "o",
      "op": "JUMP"
    },
    "9947": {
      "op": "JUMPDEST"
    },
    "9948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9950": {
      "op": "DUP1"
    },
    "9951": {
      "op": "DUP3"
    },
    "9952": {
      "op": "MSTORE"
    },
    "9953": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "9955": {
      "op": "SWAP1"
    },
    "9956": {
      "op": "DUP3"
    },
    "9957": {
      "op": "ADD"
    },
    "9958": {
      "op": "MSTORE"
    },
    "9959": {
      "op": "PUSH32",
      "value": "0x5468652067616D6520686173206E6F742073746172746564207965742E000000"
    },
    "9992": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9994": {
      "op": "DUP3"
    },
    "9995": {
      "op": "ADD"
    },
    "9996": {
      "op": "MSTORE"
    },
    "9997": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9999": {
      "op": "ADD"
    },
    "10000": {
      "op": "SWAP1"
    },
    "10001": {
      "jump": "o",
      "op": "JUMP"
    },
    "10002": {
      "op": "JUMPDEST"
    },
    "10003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10005": {
      "op": "DUP1"
    },
    "10006": {
      "op": "DUP3"
    },
    "10007": {
      "op": "MSTORE"
    },
    "10008": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "10010": {
      "op": "SWAP1"
    },
    "10011": {
      "op": "DUP3"
    },
    "10012": {
      "op": "ADD"
    },
    "10013": {
      "op": "MSTORE"
    },
    "10014": {
      "op": "PUSH21",
      "value": "0x2A3434B9903AB9B2B91034B99034B7103530B4B617"
    },
    "10036": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "10038": {
      "op": "SHL"
    },
    "10039": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10041": {
      "op": "DUP3"
    },
    "10042": {
      "op": "ADD"
    },
    "10043": {
      "op": "MSTORE"
    },
    "10044": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10046": {
      "op": "ADD"
    },
    "10047": {
      "op": "SWAP1"
    },
    "10048": {
      "jump": "o",
      "op": "JUMP"
    },
    "10049": {
      "op": "JUMPDEST"
    },
    "10050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10052": {
      "op": "DUP3"
    },
    "10053": {
      "op": "PUSH2",
      "value": "0x2750"
    },
    "10056": {
      "op": "JUMPI"
    },
    "10057": {
      "op": "PUSH2",
      "value": "0x2750"
    },
    "10060": {
      "op": "PUSH2",
      "value": "0x2531"
    },
    "10063": {
      "jump": "i",
      "op": "JUMP"
    },
    "10064": {
      "op": "JUMPDEST"
    },
    "10065": {
      "op": "POP"
    },
    "10066": {
      "op": "MOD"
    },
    "10067": {
      "op": "SWAP1"
    },
    "10068": {
      "jump": "o",
      "op": "JUMP"
    },
    "10069": {
      "op": "JUMPDEST"
    },
    "10070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10074": {
      "op": "DUP3"
    },
    "10075": {
      "op": "ADD"
    },
    "10076": {
      "op": "PUSH2",
      "value": "0x2767"
    },
    "10079": {
      "op": "JUMPI"
    },
    "10080": {
      "op": "PUSH2",
      "value": "0x2767"
    },
    "10083": {
      "op": "PUSH2",
      "value": "0x2547"
    },
    "10086": {
      "jump": "i",
      "op": "JUMP"
    },
    "10087": {
      "op": "JUMPDEST"
    },
    "10088": {
      "op": "POP"
    },
    "10089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10091": {
      "op": "ADD"
    },
    "10092": {
      "op": "SWAP1"
    },
    "10093": {
      "jump": "o",
      "op": "JUMP"
    },
    "10094": {
      "op": "JUMPDEST"
    },
    "10095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10097": {
      "op": "DUP1"
    },
    "10098": {
      "op": "DUP3"
    },
    "10099": {
      "op": "MSTORE"
    },
    "10100": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "10102": {
      "op": "SWAP1"
    },
    "10103": {
      "op": "DUP3"
    },
    "10104": {
      "op": "ADD"
    },
    "10105": {
      "op": "MSTORE"
    },
    "10106": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920746865206361707461696E206F72206669727374206D6174652063"
    },
    "10139": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10141": {
      "op": "DUP3"
    },
    "10142": {
      "op": "ADD"
    },
    "10143": {
      "op": "MSTORE"
    },
    "10144": {
      "op": "PUSH11",
      "value": "0x30B7103237903A3434B997"
    },
    "10156": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "10158": {
      "op": "SHL"
    },
    "10159": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10161": {
      "op": "DUP3"
    },
    "10162": {
      "op": "ADD"
    },
    "10163": {
      "op": "MSTORE"
    },
    "10164": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10166": {
      "op": "ADD"
    },
    "10167": {
      "op": "SWAP1"
    },
    "10168": {
      "jump": "o",
      "op": "JUMP"
    },
    "10169": {
      "op": "JUMPDEST"
    },
    "10170": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10172": {
      "op": "DUP3"
    },
    "10173": {
      "op": "GT"
    },
    "10174": {
      "op": "ISZERO"
    },
    "10175": {
      "op": "PUSH2",
      "value": "0x1F72"
    },
    "10178": {
      "op": "JUMPI"
    },
    "10179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10181": {
      "op": "DUP2"
    },
    "10182": {
      "op": "DUP2"
    },
    "10183": {
      "op": "MSTORE"
    },
    "10184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10186": {
      "op": "DUP2"
    },
    "10187": {
      "op": "KECCAK256"
    },
    "10188": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10190": {
      "op": "DUP6"
    },
    "10191": {
      "op": "ADD"
    },
    "10192": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10194": {
      "op": "SHR"
    },
    "10195": {
      "op": "DUP2"
    },
    "10196": {
      "op": "ADD"
    },
    "10197": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10199": {
      "op": "DUP7"
    },
    "10200": {
      "op": "LT"
    },
    "10201": {
      "op": "ISZERO"
    },
    "10202": {
      "op": "PUSH2",
      "value": "0x27E0"
    },
    "10205": {
      "op": "JUMPI"
    },
    "10206": {
      "op": "POP"
    },
    "10207": {
      "op": "DUP1"
    },
    "10208": {
      "op": "JUMPDEST"
    },
    "10209": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10211": {
      "op": "DUP6"
    },
    "10212": {
      "op": "ADD"
    },
    "10213": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10215": {
      "op": "SHR"
    },
    "10216": {
      "op": "DUP3"
    },
    "10217": {
      "op": "ADD"
    },
    "10218": {
      "op": "SWAP2"
    },
    "10219": {
      "op": "POP"
    },
    "10220": {
      "op": "JUMPDEST"
    },
    "10221": {
      "op": "DUP2"
    },
    "10222": {
      "op": "DUP2"
    },
    "10223": {
      "op": "LT"
    },
    "10224": {
      "op": "ISZERO"
    },
    "10225": {
      "op": "PUSH2",
      "value": "0x22AB"
    },
    "10228": {
      "op": "JUMPI"
    },
    "10229": {
      "op": "DUP3"
    },
    "10230": {
      "op": "DUP2"
    },
    "10231": {
      "op": "SSTORE"
    },
    "10232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10234": {
      "op": "ADD"
    },
    "10235": {
      "op": "PUSH2",
      "value": "0x27EC"
    },
    "10238": {
      "op": "JUMP"
    },
    "10239": {
      "op": "JUMPDEST"
    },
    "10240": {
      "op": "DUP2"
    },
    "10241": {
      "op": "DUP2"
    },
    "10242": {
      "op": "SUB"
    },
    "10243": {
      "op": "PUSH2",
      "value": "0x280A"
    },
    "10246": {
      "op": "JUMPI"
    },
    "10247": {
      "op": "POP"
    },
    "10248": {
      "op": "POP"
    },
    "10249": {
      "jump": "o",
      "op": "JUMP"
    },
    "10250": {
      "op": "JUMPDEST"
    },
    "10251": {
      "op": "PUSH2",
      "value": "0x2814"
    },
    "10254": {
      "op": "DUP3"
    },
    "10255": {
      "op": "SLOAD"
    },
    "10256": {
      "op": "PUSH2",
      "value": "0x259A"
    },
    "10259": {
      "jump": "i",
      "op": "JUMP"
    },
    "10260": {
      "op": "JUMPDEST"
    },
    "10261": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10270": {
      "op": "DUP2"
    },
    "10271": {
      "op": "GT"
    },
    "10272": {
      "op": "ISZERO"
    },
    "10273": {
      "op": "PUSH2",
      "value": "0x282C"
    },
    "10276": {
      "op": "JUMPI"
    },
    "10277": {
      "op": "PUSH2",
      "value": "0x282C"
    },
    "10280": {
      "op": "PUSH2",
      "value": "0x23F1"
    },
    "10283": {
      "jump": "i",
      "op": "JUMP"
    },
    "10284": {
      "op": "JUMPDEST"
    },
    "10285": {
      "op": "PUSH2",
      "value": "0x2840"
    },
    "10288": {
      "op": "DUP2"
    },
    "10289": {
      "op": "PUSH2",
      "value": "0x283A"
    },
    "10292": {
      "op": "DUP5"
    },
    "10293": {
      "op": "SLOAD"
    },
    "10294": {
      "op": "PUSH2",
      "value": "0x259A"
    },
    "10297": {
      "jump": "i",
      "op": "JUMP"
    },
    "10298": {
      "op": "JUMPDEST"
    },
    "10299": {
      "op": "DUP5"
    },
    "10300": {
      "op": "PUSH2",
      "value": "0x27B9"
    },
    "10303": {
      "jump": "i",
      "op": "JUMP"
    },
    "10304": {
      "op": "JUMPDEST"
    },
    "10305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10307": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10309": {
      "op": "DUP3"
    },
    "10310": {
      "op": "GT"
    },
    "10311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10313": {
      "op": "DUP2"
    },
    "10314": {
      "op": "EQ"
    },
    "10315": {
      "op": "PUSH2",
      "value": "0x2874"
    },
    "10318": {
      "op": "JUMPI"
    },
    "10319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10321": {
      "op": "DUP4"
    },
    "10322": {
      "op": "ISZERO"
    },
    "10323": {
      "op": "PUSH2",
      "value": "0x285C"
    },
    "10326": {
      "op": "JUMPI"
    },
    "10327": {
      "op": "POP"
    },
    "10328": {
      "op": "DUP5"
    },
    "10329": {
      "op": "DUP3"
    },
    "10330": {
      "op": "ADD"
    },
    "10331": {
      "op": "SLOAD"
    },
    "10332": {
      "op": "JUMPDEST"
    },
    "10333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10335": {
      "op": "NOT"
    },
    "10336": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10338": {
      "op": "DUP6"
    },
    "10339": {
      "op": "SWAP1"
    },
    "10340": {
      "op": "SHL"
    },
    "10341": {
      "op": "SHR"
    },
    "10342": {
      "op": "NOT"
    },
    "10343": {
      "op": "AND"
    },
    "10344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10346": {
      "op": "DUP5"
    },
    "10347": {
      "op": "SWAP1"
    },
    "10348": {
      "op": "SHL"
    },
    "10349": {
      "op": "OR"
    },
    "10350": {
      "op": "DUP5"
    },
    "10351": {
      "op": "SSTORE"
    },
    "10352": {
      "op": "PUSH2",
      "value": "0x28D9"
    },
    "10355": {
      "op": "JUMP"
    },
    "10356": {
      "op": "JUMPDEST"
    },
    "10357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10359": {
      "op": "DUP6"
    },
    "10360": {
      "op": "DUP2"
    },
    "10361": {
      "op": "MSTORE"
    },
    "10362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10364": {
      "op": "SWAP1"
    },
    "10365": {
      "op": "KECCAK256"
    },
    "10366": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10368": {
      "op": "NOT"
    },
    "10369": {
      "op": "DUP5"
    },
    "10370": {
      "op": "AND"
    },
    "10371": {
      "op": "SWAP1"
    },
    "10372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10374": {
      "op": "DUP7"
    },
    "10375": {
      "op": "DUP2"
    },
    "10376": {
      "op": "MSTORE"
    },
    "10377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10379": {
      "op": "SWAP1"
    },
    "10380": {
      "op": "KECCAK256"
    },
    "10381": {
      "op": "DUP5"
    },
    "10382": {
      "op": "JUMPDEST"
    },
    "10383": {
      "op": "DUP4"
    },
    "10384": {
      "op": "DUP2"
    },
    "10385": {
      "op": "LT"
    },
    "10386": {
      "op": "ISZERO"
    },
    "10387": {
      "op": "PUSH2",
      "value": "0x28AE"
    },
    "10390": {
      "op": "JUMPI"
    },
    "10391": {
      "op": "DUP3"
    },
    "10392": {
      "op": "DUP7"
    },
    "10393": {
      "op": "ADD"
    },
    "10394": {
      "op": "SLOAD"
    },
    "10395": {
      "op": "DUP3"
    },
    "10396": {
      "op": "SSTORE"
    },
    "10397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10399": {
      "op": "SWAP6"
    },
    "10400": {
      "op": "DUP7"
    },
    "10401": {
      "op": "ADD"
    },
    "10402": {
      "op": "SWAP6"
    },
    "10403": {
      "op": "SWAP1"
    },
    "10404": {
      "op": "SWAP2"
    },
    "10405": {
      "op": "ADD"
    },
    "10406": {
      "op": "SWAP1"
    },
    "10407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10409": {
      "op": "ADD"
    },
    "10410": {
      "op": "PUSH2",
      "value": "0x288E"
    },
    "10413": {
      "op": "JUMP"
    },
    "10414": {
      "op": "JUMPDEST"
    },
    "10415": {
      "op": "POP"
    },
    "10416": {
      "op": "DUP6"
    },
    "10417": {
      "op": "DUP4"
    },
    "10418": {
      "op": "LT"
    },
    "10419": {
      "op": "ISZERO"
    },
    "10420": {
      "op": "PUSH2",
      "value": "0x28CC"
    },
    "10423": {
      "op": "JUMPI"
    },
    "10424": {
      "op": "DUP2"
    },
    "10425": {
      "op": "DUP6"
    },
    "10426": {
      "op": "ADD"
    },
    "10427": {
      "op": "SLOAD"
    },
    "10428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10430": {
      "op": "NOT"
    },
    "10431": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10433": {
      "op": "DUP9"
    },
    "10434": {
      "op": "SWAP1"
    },
    "10435": {
      "op": "SHL"
    },
    "10436": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10438": {
      "op": "AND"
    },
    "10439": {
      "op": "SHR"
    },
    "10440": {
      "op": "NOT"
    },
    "10441": {
      "op": "AND"
    },
    "10442": {
      "op": "DUP2"
    },
    "10443": {
      "op": "SSTORE"
    },
    "10444": {
      "op": "JUMPDEST"
    },
    "10445": {
      "op": "POP"
    },
    "10446": {
      "op": "POP"
    },
    "10447": {
      "op": "POP"
    },
    "10448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10450": {
      "op": "DUP4"
    },
    "10451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10453": {
      "op": "SHL"
    },
    "10454": {
      "op": "ADD"
    },
    "10455": {
      "op": "DUP5"
    },
    "10456": {
      "op": "SSTORE"
    },
    "10457": {
      "op": "JUMPDEST"
    },
    "10458": {
      "op": "POP"
    },
    "10459": {
      "op": "POP"
    },
    "10460": {
      "op": "POP"
    },
    "10461": {
      "op": "POP"
    },
    "10462": {
      "op": "POP"
    },
    "10463": {
      "jump": "o",
      "op": "JUMP"
    },
    "10464": {
      "op": "JUMPDEST"
    },
    "10465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10471": {
      "op": "SHL"
    },
    "10472": {
      "op": "SUB"
    },
    "10473": {
      "op": "DUP6"
    },
    "10474": {
      "op": "AND"
    },
    "10475": {
      "op": "DUP2"
    },
    "10476": {
      "op": "MSTORE"
    },
    "10477": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10481": {
      "op": "DUP3"
    },
    "10482": {
      "op": "ADD"
    },
    "10483": {
      "op": "DUP2"
    },
    "10484": {
      "op": "SWAP1"
    },
    "10485": {
      "op": "MSTORE"
    },
    "10486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10488": {
      "op": "SWAP1"
    },
    "10489": {
      "op": "PUSH2",
      "value": "0x2904"
    },
    "10492": {
      "op": "SWAP1"
    },
    "10493": {
      "op": "DUP4"
    },
    "10494": {
      "op": "ADD"
    },
    "10495": {
      "op": "DUP7"
    },
    "10496": {
      "op": "PUSH2",
      "value": "0x25D4"
    },
    "10499": {
      "jump": "i",
      "op": "JUMP"
    },
    "10500": {
      "op": "JUMPDEST"
    },
    "10501": {
      "op": "DUP3"
    },
    "10502": {
      "op": "DUP2"
    },
    "10503": {
      "op": "SUB"
    },
    "10504": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10506": {
      "op": "DUP5"
    },
    "10507": {
      "op": "ADD"
    },
    "10508": {
      "op": "MSTORE"
    },
    "10509": {
      "op": "PUSH2",
      "value": "0x2916"
    },
    "10512": {
      "op": "DUP2"
    },
    "10513": {
      "op": "DUP7"
    },
    "10514": {
      "op": "PUSH2",
      "value": "0x25D4"
    },
    "10517": {
      "jump": "i",
      "op": "JUMP"
    },
    "10518": {
      "op": "JUMPDEST"
    },
    "10519": {
      "op": "SWAP2"
    },
    "10520": {
      "op": "POP"
    },
    "10521": {
      "op": "POP"
    },
    "10522": {
      "op": "DUP3"
    },
    "10523": {
      "op": "ISZERO"
    },
    "10524": {
      "op": "ISZERO"
    },
    "10525": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10527": {
      "op": "DUP4"
    },
    "10528": {
      "op": "ADD"
    },
    "10529": {
      "op": "MSTORE"
    },
    "10530": {
      "op": "SWAP6"
    },
    "10531": {
      "op": "SWAP5"
    },
    "10532": {
      "op": "POP"
    },
    "10533": {
      "op": "POP"
    },
    "10534": {
      "op": "POP"
    },
    "10535": {
      "op": "POP"
    },
    "10536": {
      "op": "POP"
    },
    "10537": {
      "jump": "o",
      "op": "JUMP"
    },
    "10538": {
      "op": "JUMPDEST"
    },
    "10539": {
      "op": "DUP2"
    },
    "10540": {
      "op": "MLOAD"
    },
    "10541": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10550": {
      "op": "DUP2"
    },
    "10551": {
      "op": "GT"
    },
    "10552": {
      "op": "ISZERO"
    },
    "10553": {
      "op": "PUSH2",
      "value": "0x2944"
    },
    "10556": {
      "op": "JUMPI"
    },
    "10557": {
      "op": "PUSH2",
      "value": "0x2944"
    },
    "10560": {
      "op": "PUSH2",
      "value": "0x23F1"
    },
    "10563": {
      "jump": "i",
      "op": "JUMP"
    },
    "10564": {
      "op": "JUMPDEST"
    },
    "10565": {
      "op": "PUSH2",
      "value": "0x2952"
    },
    "10568": {
      "op": "DUP2"
    },
    "10569": {
      "op": "PUSH2",
      "value": "0x283A"
    },
    "10572": {
      "op": "DUP5"
    },
    "10573": {
      "op": "SLOAD"
    },
    "10574": {
      "op": "PUSH2",
      "value": "0x259A"
    },
    "10577": {
      "jump": "i",
      "op": "JUMP"
    },
    "10578": {
      "op": "JUMPDEST"
    },
    "10579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10581": {
      "op": "DUP1"
    },
    "10582": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10584": {
      "op": "DUP4"
    },
    "10585": {
      "op": "GT"
    },
    "10586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10588": {
      "op": "DUP2"
    },
    "10589": {
      "op": "EQ"
    },
    "10590": {
      "op": "PUSH2",
      "value": "0x2987"
    },
    "10593": {
      "op": "JUMPI"
    },
    "10594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10596": {
      "op": "DUP5"
    },
    "10597": {
      "op": "ISZERO"
    },
    "10598": {
      "op": "PUSH2",
      "value": "0x296F"
    },
    "10601": {
      "op": "JUMPI"
    },
    "10602": {
      "op": "POP"
    },
    "10603": {
      "op": "DUP6"
    },
    "10604": {
      "op": "DUP4"
    },
    "10605": {
      "op": "ADD"
    },
    "10606": {
      "op": "MLOAD"
    },
    "10607": {
      "op": "JUMPDEST"
    },
    "10608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10610": {
      "op": "NOT"
    },
    "10611": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10613": {
      "op": "DUP7"
    },
    "10614": {
      "op": "SWAP1"
    },
    "10615": {
      "op": "SHL"
    },
    "10616": {
      "op": "SHR"
    },
    "10617": {
      "op": "NOT"
    },
    "10618": {
      "op": "AND"
    },
    "10619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10621": {
      "op": "DUP6"
    },
    "10622": {
      "op": "SWAP1"
    },
    "10623": {
      "op": "SHL"
    },
    "10624": {
      "op": "OR"
    },
    "10625": {
      "op": "DUP6"
    },
    "10626": {
      "op": "SSTORE"
    },
    "10627": {
      "op": "PUSH2",
      "value": "0x22AB"
    },
    "10630": {
      "op": "JUMP"
    },
    "10631": {
      "op": "JUMPDEST"
    },
    "10632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10634": {
      "op": "DUP6"
    },
    "10635": {
      "op": "DUP2"
    },
    "10636": {
      "op": "MSTORE"
    },
    "10637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10639": {
      "op": "DUP2"
    },
    "10640": {
      "op": "KECCAK256"
    },
    "10641": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10643": {
      "op": "NOT"
    },
    "10644": {
      "op": "DUP7"
    },
    "10645": {
      "op": "AND"
    },
    "10646": {
      "op": "SWAP2"
    },
    "10647": {
      "op": "JUMPDEST"
    },
    "10648": {
      "op": "DUP3"
    },
    "10649": {
      "op": "DUP2"
    },
    "10650": {
      "op": "LT"
    },
    "10651": {
      "op": "ISZERO"
    },
    "10652": {
      "op": "PUSH2",
      "value": "0x29B6"
    },
    "10655": {
      "op": "JUMPI"
    },
    "10656": {
      "op": "DUP9"
    },
    "10657": {
      "op": "DUP7"
    },
    "10658": {
      "op": "ADD"
    },
    "10659": {
      "op": "MLOAD"
    },
    "10660": {
      "op": "DUP3"
    },
    "10661": {
      "op": "SSTORE"
    },
    "10662": {
      "op": "SWAP5"
    },
    "10663": {
      "op": "DUP5"
    },
    "10664": {
      "op": "ADD"
    },
    "10665": {
      "op": "SWAP5"
    },
    "10666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10668": {
      "op": "SWAP1"
    },
    "10669": {
      "op": "SWAP2"
    },
    "10670": {
      "op": "ADD"
    },
    "10671": {
      "op": "SWAP1"
    },
    "10672": {
      "op": "DUP5"
    },
    "10673": {
      "op": "ADD"
    },
    "10674": {
      "op": "PUSH2",
      "value": "0x2997"
    },
    "10677": {
      "op": "JUMP"
    },
    "10678": {
      "op": "JUMPDEST"
    },
    "10679": {
      "op": "POP"
    },
    "10680": {
      "op": "DUP6"
    },
    "10681": {
      "op": "DUP3"
    },
    "10682": {
      "op": "LT"
    },
    "10683": {
      "op": "ISZERO"
    },
    "10684": {
      "op": "PUSH2",
      "value": "0x29D4"
    },
    "10687": {
      "op": "JUMPI"
    },
    "10688": {
      "op": "DUP8"
    },
    "10689": {
      "op": "DUP6"
    },
    "10690": {
      "op": "ADD"
    },
    "10691": {
      "op": "MLOAD"
    },
    "10692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10694": {
      "op": "NOT"
    },
    "10695": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10697": {
      "op": "DUP9"
    },
    "10698": {
      "op": "SWAP1"
    },
    "10699": {
      "op": "SHL"
    },
    "10700": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10702": {
      "op": "AND"
    },
    "10703": {
      "op": "SHR"
    },
    "10704": {
      "op": "NOT"
    },
    "10705": {
      "op": "AND"
    },
    "10706": {
      "op": "DUP2"
    },
    "10707": {
      "op": "SSTORE"
    },
    "10708": {
      "op": "JUMPDEST"
    },
    "10709": {
      "op": "POP"
    },
    "10710": {
      "op": "POP"
    },
    "10711": {
      "op": "POP"
    },
    "10712": {
      "op": "POP"
    },
    "10713": {
      "op": "POP"
    },
    "10714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10716": {
      "op": "SWAP1"
    },
    "10717": {
      "op": "DUP2"
    },
    "10718": {
      "op": "SHL"
    },
    "10719": {
      "op": "ADD"
    },
    "10720": {
      "op": "SWAP1"
    },
    "10721": {
      "op": "SSTORE"
    },
    "10722": {
      "op": "POP"
    },
    "10723": {
      "jump": "o",
      "op": "JUMP"
    },
    "10724": {
      "op": "JUMPDEST"
    },
    "10725": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10727": {
      "op": "DUP2"
    },
    "10728": {
      "op": "MSTORE"
    },
    "10729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10731": {
      "op": "PUSH2",
      "value": "0x29F7"
    },
    "10734": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10736": {
      "op": "DUP4"
    },
    "10737": {
      "op": "ADD"
    },
    "10738": {
      "op": "DUP6"
    },
    "10739": {
      "op": "PUSH2",
      "value": "0x25D4"
    },
    "10742": {
      "jump": "i",
      "op": "JUMP"
    },
    "10743": {
      "op": "JUMPDEST"
    },
    "10744": {
      "op": "SWAP1"
    },
    "10745": {
      "op": "POP"
    },
    "10746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10748": {
      "op": "DUP1"
    },
    "10749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10751": {
      "op": "SHL"
    },
    "10752": {
      "op": "SUB"
    },
    "10753": {
      "op": "DUP4"
    },
    "10754": {
      "op": "AND"
    },
    "10755": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10757": {
      "op": "DUP4"
    },
    "10758": {
      "op": "ADD"
    },
    "10759": {
      "op": "MSTORE"
    },
    "10760": {
      "op": "SWAP4"
    },
    "10761": {
      "op": "SWAP3"
    },
    "10762": {
      "op": "POP"
    },
    "10763": {
      "op": "POP"
    },
    "10764": {
      "op": "POP"
    },
    "10765": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "14f0d4cd8507122053afc60e95cc8e96f7d48361",
  "source": "pragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nusing SafeMath for uint256;\n\ncontract PirateRace {\n    struct Team {\n        uint256 totalMoney;\n        string teamName;\n        uint256 speed;\n        uint256 distance;\n        uint256 defense;\n        uint256 attack;\n        uint256 numPirates;\n    }\n\n    struct Contribution {\n        uint256 money;\n        uint256 actions;\n    }\n\n    address public owner;\n    string public winner= \"\";\n    uint256 public finishLine = 1e6;\n    bool gameStarted = false;\n    IERC20 public Qi = IERC20(0x580A84C73811E1839F75d86d75d88cCa0c241fF4);\n    IERC20 public eQi = IERC20(0x880DeCADe22aD9c58A8A4202EF143c4F305100B3);\n    uint256 private lastUpdated;\n    Team[] public teams;\n\n    mapping (address => uint256) public userToTeam;\n    mapping (address => bool) public jail;\n    mapping (address => Contribution) public userScore;\n    mapping (uint256 => address) public captain;\n    mapping (uint256 => address) public firstMate;\n\n    constructor() public {\n        owner = msg.sender;\n        teams.push(Team({totalMoney: 0, teamName:\"Team Ben\", speed:0, distance:0, defense:0, attack:0, numPirates:0}));\n        teams.push(Team({totalMoney: 0, teamName:\"Team Kila\", speed:0, distance:0, defense:0, attack:0, numPirates:0}));\n        teams.push(Team({totalMoney: 0, teamName:\"Team Nacho\", speed:0, distance:0, defense:0, attack:0, numPirates:0}));\n        teams.push(Team({totalMoney: 0, teamName:\"Team ??\", speed:0, distance:0, defense:0, attack:0, numPirates:0}));\n        lastUpdated = block.timestamp;\n    }\n\n    // owner functions\n    function startRace() public {\n        require(msg.sender == owner, \"Only the owner can start the race.\");\n        require(!gameStarted, \"Game already started.\");\n        gameStarted = true;\n        for (uint256 i = 0; i < teams.length; i++) {\n            teams[i].speed = 1;\n        }\n        lastUpdated = block.timestamp;\n    }\n\n    function nameTeam(uint256 teamId, string memory teamName) public {\n        require(msg.sender == owner, \"Only the owner can name the teams.\");\n        teams[teamId].teamName = teamName;\n    }\n\n    function changeSettings(uint256 _teamId, uint256 _money, uint256 _speed, uint256 _distance, uint256 _defense, uint256 _attack) public {\n        require(msg.sender == owner, \"Only owner.\");\n        if (_money != 0)    teams[_teamId].totalMoney = _money;\n        if (_speed != 0)    teams[_teamId].speed = _speed;\n        if (_distance != 0) teams[_teamId].distance = _distance;\n        if (_defense != 0)  teams[_teamId].defense = _defense;\n        if (_attack != 0)   teams[_teamId].attack = _attack;\n    }\n\n    // player functions\n    function join(uint256 teamId) public {\n        require(teamId < teams.length, \"Invalid team ID.\");\n        uint256 money = Qi.balanceOf(msg.sender)/1e18 + eQi.balanceOf(msg.sender)/1e18;\n        require(money >= 100, \"Requires at least 100 Qi + eQi to play.\");\n\n        teams[teamId].totalMoney += money;\n        teams[teamId].numPirates += 1;\n        userToTeam[msg.sender] = teamId;\n        userScore[msg.sender].money = money;\n        emit TeamJoin(msg.sender, teams[teamId].teamName, money);\n    }\n\n    function pickCaptain(uint256 teamId, address user) public {\n        require(msg.sender == owner, \"Only the owner can pick captains.\");\n        captain[userToTeam[user]] = user;\n    }\n\n    function pickFirstMate(address user) public isCaptain{\n        require(userToTeam[msg.sender] == userToTeam[user], \"First mate must be on your team.\");\n        firstMate[userToTeam[user]] = user;\n        emit FirstMate (teams[userToTeam[msg.sender]].teamName, user);\n    }\n\n    // update the distance for each team\n    function updateDistance() public isGameStarted {\n        for (uint256 i = 0; i < teams.length; i++) {\n            uint256 timePassed = block.timestamp - lastUpdated;\n            teams[i].distance += teams[i].speed * timePassed;\n            if (teams[i].distance >= finishLine && bytes(winner).length == 0) {\n                winner = teams[i].teamName;\n            }\n        }\n        lastUpdated = block.timestamp;\n        emit DistanceUpdated(teams[0].distance, teams[1].distance, teams[2].distance, teams[3].distance);\n    }\n\n    function upgradeEngine() public isGameStarted notInJail {\n        uint256 teamId = userToTeam[msg.sender];\n        require(teams[teamId].totalMoney >= 1, \"Not enough money to upgrade engine.\");\n        \n        teams[teamId].totalMoney = teams[teamId].totalMoney.sub(1);\n        teams[teamId].speed = teams[teamId].speed.add(1);\n        \n        userScore[msg.sender].actions += 1;\n        updateDistance();\n        emit EngineUpgraded(msg.sender, teams[teamId].teamName);\n    }\n\n    function upgradeDefense() public isGameStarted notInJail {\n        uint256 teamId = userToTeam[msg.sender];\n        require(teams[teamId].totalMoney >= 1, \"Not enough money to upgrade defense.\");\n        \n        teams[teamId].totalMoney = teams[teamId].totalMoney.sub(1);\n        teams[teamId].defense = teams[teamId].defense.add(1);\n        \n        userScore[msg.sender].actions += 1;\n        updateDistance();\n        emit DefenseUpgraded(msg.sender, teams[teamId].teamName);\n    }\n\n    function upgradeAttack() public isGameStarted notInJail {\n        uint256 teamId = userToTeam[msg.sender];\n        require(teams[teamId].totalMoney >= 1, \"Not enough money to upgrade attack.\");\n        \n        teams[teamId].totalMoney = teams[teamId].totalMoney.sub(1);\n        teams[teamId].attack = teams[teamId].attack.add(1);\n        \n        userScore[msg.sender].actions += 1;\n        updateDistance();\n        emit AttackUpgraded(msg.sender, teams[teamId].teamName);\n    }\n\n    function fireCannon(uint256 targetTeam) public isGameStarted notInJail {\n        require(targetTeam < teams.length, \"Invalid target team.\");\n        require(targetTeam != userToTeam[msg.sender], \"Cannot fire at own team.\");\n        \n        uint256 teamId = userToTeam[msg.sender];\n        bool hit = false;\n        uint256 hitChance = 33; \n        \n        if(hitChance + teams[teamId].attack < teams[targetTeam].defense) hitChance = 1; //overflow, min hitrate, 1%\n        else hitChance = 33 + teams[teamId].attack - teams[targetTeam].defense; //default chance 33% + att - def\n        if(hitChance > 99) hitChance = 99; //max hitrate, 99%\n        \n        uint256 random = uint256(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 100;\n\n        if (random < hitChance) {\n            teams[targetTeam].distance = teams[targetTeam].distance.mul(98).div(100); //2% distance loss\n            if (teams[targetTeam].speed > 3) teams[targetTeam].speed = teams[targetTeam].speed.sub(2); //2 speed loss\n            hit = true;\n        }\n        \n        userScore[msg.sender].actions += 1;\n        updateDistance();\n        emit CannonFired(msg.sender, teams[teamId].teamName, teams[targetTeam].teamName, hit);\n    }\n\n    function buyMysteryBox() public isGameStarted notInJail {\n        uint256 teamId = userToTeam[msg.sender];\n        require(teams[teamId].totalMoney >= 5, \"Not enough money to buy a mystery box.\");\n        teams[teamId].totalMoney -= 5;\n        \n        uint256 result = 0;\n        uint256 randomNum = uint256(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 100;\n        \n        if (randomNum < 50) {\n            // nothing happens\n        } else if (randomNum < 65) { // more money\n            teams[teamId].totalMoney += 200;\n            result = 1;\n        } else if (randomNum < 85) { // ship upgrades\n            teams[teamId].speed += 2;\n            teams[teamId].defense += 2;\n            teams[teamId].attack += 2;\n            result = 2;\n        } else { // kraken attacked everybody!\n            for (uint256 i = 0; i < teams.length; i++)\n                teams[i].distance = teams[i].distance.mul(90).div(100); //10% distance loss\n            result = 3;\n        }\n        \n        userScore[msg.sender].actions += 1;\n        updateDistance();\n        emit MysteryBox(msg.sender, teams[teamId].teamName, result);\n    }\n\n    function putInJail(address user) public isCaptainOrFirstMate {\n        require(userToTeam[msg.sender] == userToTeam[user], \"Cannot put someone on another team in jail.\");\n        jail[user] = true;\n        emit InJail(user, teams[userToTeam[user]].teamName);\n    }\n\n    function takeOutOfJail(address user) public isCaptainOrFirstMate {\n        require(userToTeam[msg.sender] == userToTeam[user], \"Cannot take someone on another team out of jail.\");\n        jail[user] = false;\n        emit OutofJail(user, teams[userToTeam[user]].teamName);\n    }\n\n    function checkForgedPapers(address user) public {\n        require(!jail[user], \"already in jail\");\n        uint256 currentMoney = Qi.balanceOf(user)/1e18 + eQi.balanceOf(user)/1e18;\n        uint256 originalMoney = userScore[user].money;\n        uint256 teamId = userToTeam[user];\n\n        if (currentMoney < originalMoney*9/10) {\n            jail[user] = true;\n            if (teams[teamId].totalMoney > originalMoney * 2) //penalty\n                teams[teamId].totalMoney -= originalMoney * 2;\n            else {\n                teams[teamId].totalMoney = 0;\n            }\n\n            emit InJail(user, teams[userToTeam[user]].teamName);\n        } \n    }\n\n    modifier isGameStarted() {\n        require(gameStarted, \"The game has not started yet.\");\n        _;\n    }\n\n    modifier isCaptain() {\n        require(captain[userToTeam[msg.sender]] == msg.sender, \"Only the captain can do this.\");\n        _;\n    }\n\n    modifier isCaptainOrFirstMate() {\n        require(captain[userToTeam[msg.sender]] == msg.sender || firstMate[userToTeam[msg.sender]] == msg.sender, \"Only the captain or first mate can do this.\");\n        _;\n    }\n\n    modifier notInJail() {\n        require(!jail[msg.sender], \"This user is in jail.\");\n        _;\n    }\n\n    event TeamJoin(address user, string teamName, uint256 money);\n    event DistanceUpdated(uint256 team0, uint256 team1, uint256 team2, uint256 team3);\n    event EngineUpgraded(address user, string teamName);\n    event DefenseUpgraded(address user, string teamName);\n    event AttackUpgraded(address user, string teamName);\n    event CannonFired(address user, string shooter, string target, bool hit);\n    event InJail(address user, string teamName);    \n    event OutofJail(address user, string teamName);\n    event MysteryBox(address user, string teamName, uint256 result);\n    event FirstMate (string teamName, address user);\n\n}\n\n\n",
  "sourceMap": "506:24:2:-:0;169:10370;506:24;-1:-1:-1;169:10370:2;506:24;;;;;;;;;:::i;:::-;-1:-1:-1;564:3:2;536:31;;573:24;;;603:69;-1:-1:-1;;;;;;603:69:2;;;;;;678:70;;;-1:-1:-1;;;;;;678:70:2;705:42;678:70;;;1065:577;;;;;;;;;-1:-1:-1;1096:5:2;:18;;-1:-1:-1;;;;;;1096:18:2;1104:10;1096:18;;;1135:98;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1135:98:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1124:5;:110;;1096:18;1124:110;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1124:110:2;;;;;;;1135:98;;1124:110;-1:-1:-1;;;;;;;;;;;1124:110:2;;;;;;:::i;:::-;-1:-1:-1;1124:110:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1255:99;;;;;;;-1:-1:-1;1255:99:2;;;;;;;;;;;;;-1:-1:-1;;;;1255:99:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1244:111;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1244:111:2;;;;;;;-1:-1:-1;;;;;;;;;;;1244:111:2;;;;;;;;:::i;:::-;-1:-1:-1;1244:111:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1376:100;;;;;;;-1:-1:-1;1376:100:2;;;;;;;;;;;;;-1:-1:-1;;;;1376:100:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1365:112;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1365:112:2;;;;;;;-1:-1:-1;;;;;;;;;;;1365:112:2;;;;;;;;:::i;:::-;-1:-1:-1;1365:112:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1498:97;;;;;;;-1:-1:-1;1498:97:2;;;;;;;;;;;;;;-1:-1:-1;;;;1498:97:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1487:109;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1487:109:2;;;;;;;-1:-1:-1;;;;;;;;;;;1487:109:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:15;1606:11;:29;;;;169:10370;;14:127:3;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:3;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:3;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:3;;;2580:26;2531:89;-1:-1:-1;;1335:1:3;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:3;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:3;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:3;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:3:o;:::-;169:10370:2;;;;;;",
  "sourcePath": "contracts/race.sol",
  "type": "contract"
}