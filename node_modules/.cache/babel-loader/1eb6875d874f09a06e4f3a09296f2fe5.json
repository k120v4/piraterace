{"ast":null,"code":"import _asyncToGenerator from \"/home/core/Documents/racefe/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/core/Documents/racefe/front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/core/Documents/racefe/front-end/src/App.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"./style.css\";\nvar contractABI = require(\"./PirateRace.json\");\nvar YOUR_CONTRACT_ADDRESS = \"0x7fdb855296a72f43be5154d813fbe5cd0ee736e6\";\nexport default function App() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    t0 = _useState4[0],\n    setT0 = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    t1 = _useState6[0],\n    setT1 = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    t2 = _useState8[0],\n    setT2 = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    t3 = _useState10[0],\n    setT3 = _useState10[1];\n  var _useState11 = useState(true),\n    _useState12 = _slicedToArray(_useState11, 2),\n    loading = _useState12[0],\n    setLoading = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    metaMaskEnabled = _useState14[0],\n    setMetaMaskEnabled = _useState14[1];\n  var getContract = function getContract() {\n    var provider = new ethers.providers.Web3Provider(window.ethereum);\n    var signer = provider.getSigner();\n    var contract = new ethers.Contract(YOUR_CONTRACT_ADDRESS, contractABI.abi, signer);\n    return contract;\n  };\n  var incrementCount = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            //const tx = await getContract().increment();\n            alert(\"Once block is mined, Value will be auto updated\");\n            // await tx.wait();\n            // fetchCurrentValue();\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function incrementCount() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var fetchCurrentValue = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var count_;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return getContract().teams(0);\n          case 2:\n            count_ = _context2.sent;\n            setCount(count_.distance.toString());\n            setT0(count_.distance.toString());\n            setLoading(false);\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function fetchCurrentValue() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var checkedWallet = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var _window, ethereum, accounts;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _window = window, ethereum = _window.ethereum;\n            if (ethereum) {\n              _context3.next = 6;\n              break;\n            }\n            alert(\"Get MetaMask!\");\n            setMetaMaskEnabled(false);\n            return _context3.abrupt(\"return\");\n          case 6:\n            _context3.next = 8;\n            return ethereum.enable();\n          case 8:\n            _context3.next = 10;\n            return ethereum.request({\n              method: \"eth_requestAccounts\"\n            });\n          case 10:\n            accounts = _context3.sent;\n            _context3.next = 13;\n            return ethereum.request({\n              method: \"wallet_switchEthereumChain\",\n              params: [{\n                chainId: \"0x\".concat(Number(137).toString(16))\n              }]\n            });\n          case 13:\n            console.log(\"Connected\", accounts[0]);\n            localStorage.setItem(\"walletAddress\", accounts[0]);\n            setMetaMaskEnabled(true);\n\n            // Listen to event\n            listenToEvent();\n\n            // Fetch the current counter value\n            fetchCurrentValue();\n            _context3.next = 24;\n            break;\n          case 20:\n            _context3.prev = 20;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n            setMetaMaskEnabled(false);\n          case 24:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[0, 20]]);\n    }));\n    return function checkedWallet() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    checkedWallet();\n    if (window.ethereum) {\n      window.ethereum.on(\"chainChanged\", function () {\n        window.location.reload();\n      });\n      window.ethereum.on(\"accountsChanged\", function () {\n        checkedWallet();\n      });\n    }\n  }, []);\n  var listenToEvent = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            getContract().on(\"DistanceUpdated\", /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(t0, t1, t2, t3, event) {\n                return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                  while (1) switch (_context4.prev = _context4.next) {\n                    case 0:\n                      // Called when anyone changes the value\n                      setT0(+t0.toString());\n                      setT1(+t1.toString());\n                      setT2(+t2.toString());\n                      setT3(+t3.toString());\n                    case 4:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }, _callee4);\n              }));\n              return function (_x, _x2, _x3, _x4, _x5) {\n                return _ref5.apply(this, arguments);\n              };\n            }());\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n    return function listenToEvent() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, !metaMaskEnabled && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 28\n    }\n  }, \"Connect to Metamask\"), metaMaskEnabled && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, !loading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    class: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, count), /*#__PURE__*/React.createElement(\"h1\", {\n    class: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"team0: \", t0), /*#__PURE__*/React.createElement(\"h1\", {\n    class: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"team1: \", t1), /*#__PURE__*/React.createElement(\"h1\", {\n    class: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"team2: \", t2), /*#__PURE__*/React.createElement(\"h1\", {\n    class: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"team3: \", t3), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: incrementCount,\n    class: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"+\")), loading && /*#__PURE__*/React.createElement(\"div\", {\n    class: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }\n  })));\n}","map":{"version":3,"names":["React","useState","useEffect","ethers","contractABI","require","YOUR_CONTRACT_ADDRESS","App","count","setCount","t0","setT0","t1","setT1","t2","setT2","t3","setT3","loading","setLoading","metaMaskEnabled","setMetaMaskEnabled","getContract","provider","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","abi","incrementCount","alert","fetchCurrentValue","teams","count_","distance","toString","checkedWallet","enable","request","method","accounts","params","chainId","Number","console","log","localStorage","setItem","listenToEvent","on","location","reload","event"],"sources":["/home/core/Documents/racefe/front-end/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"./style.css\";\n\nconst contractABI = require(\"./PirateRace.json\");\nconst YOUR_CONTRACT_ADDRESS = \"0x7fdb855296a72f43be5154d813fbe5cd0ee736e6\";\n\nexport default function App() {\n  const [count, setCount] = useState(0);\n  const [t0, setT0] = useState(0);\n  const [t1, setT1] = useState(0);\n  const [t2, setT2] = useState(0);\n  const [t3, setT3] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [metaMaskEnabled, setMetaMaskEnabled] = useState(false);\n\n  let getContract = () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    let contract = new ethers.Contract(\n      YOUR_CONTRACT_ADDRESS,\n      contractABI.abi,\n      signer\n    );\n    return contract;\n  };\n\n  let incrementCount = async () => {\n    //const tx = await getContract().increment();\n    alert(\"Once block is mined, Value will be auto updated\");\n    // await tx.wait();\n    // fetchCurrentValue();\n  };\n\n  let fetchCurrentValue = async () => {\n    let count_ = await getContract().teams(0);\n    setCount(count_.distance.toString());\n    setT0(count_.distance.toString());\n    setLoading(false);\n  };\n\n  const checkedWallet = async () => {\n    try {\n      const { ethereum } = window;\n      if (!ethereum) {\n        alert(\"Get MetaMask!\");\n        setMetaMaskEnabled(false);\n        return;\n      }\n\n      await ethereum.enable();\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      await ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: `0x${Number(137).toString(16)}` }],\n      });\n      console.log(\"Connected\", accounts[0]);\n      localStorage.setItem(\"walletAddress\", accounts[0]);\n      setMetaMaskEnabled(true);\n\n      // Listen to event\n      listenToEvent();\n\n      // Fetch the current counter value\n      fetchCurrentValue();\n    } catch (error) {\n      console.log(error);\n      setMetaMaskEnabled(false);\n    }\n  };\n\n  useEffect(() => {\n    checkedWallet();\n    if (window.ethereum) {\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n      window.ethereum.on(\"accountsChanged\", () => {\n        checkedWallet();\n      });\n    }\n  }, []);\n\n  let listenToEvent = async () => {\n    getContract().on(\"DistanceUpdated\", async (t0, t1, t2, t3, event) => {\n      // Called when anyone changes the value\n      setT0(+t0.toString());\n      setT1(+t1.toString());\n      setT2(+t2.toString());\n      setT3(+t3.toString());\n    });\n  };\n\n  return (\n    <div class=\"root\">\n      {!metaMaskEnabled && <h1>Connect to Metamask</h1>}\n      {metaMaskEnabled && (\n        <div>\n          {!loading && (\n            <div>\n              <h1 class=\"text\">{count}</h1>\n              <h1 class=\"text\">team0: {t0}</h1>\n              <h1 class=\"text\">team1: {t1}</h1>\n              <h1 class=\"text\">team2: {t2}</h1>\n              <h1 class=\"text\">team3: {t3}</h1>\n\n              <button onClick={incrementCount} class=\"button\">\n                +\n              </button>\n            </div>\n          )}\n          {loading && <div class=\"loader\"></div>}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}